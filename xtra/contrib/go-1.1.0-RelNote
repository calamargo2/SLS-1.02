*****************************************************************************
*           Go					    Version 1.1.0     	    *
*									    *
*			***  R E L E A S E   N O T E  ***		    *
*									    *
*****************************************************************************


	Go Version 1.1.0:				Feb 25th, 1992


	This Go release runs on top of X.V11R4 and has been generated
	on:
		Hardware	OS		Compiler
		----------------------------------------

		Sun4/60		SunOS 4.1.1	g++ 1.39
		Sun4/60		SunOS 4.1.1	g++ 1.40
		Sun4/60		SunOS 4.1.1	C++ 2.1
		Mips/M3000	RISC/os		C++ 2.1
		Bull/486	SCO 3.2		g++ 1.39
		Bull/680x0	BOS 2.0		g++ 1.39
		Bull/680x0	BOS 2.0		C++ 2.1


	The uncompressed size of sources is about 6.5 megabytes including
	1.5 Mb of documentation.

	Major features coming with the 1.1.0 release are:

		o NAMING:
		  In order to avoid conflicts with other libraries, strict
		  naming conventions have been adopted:
			- object type names start with 'G' or 'Go' (for
			Go subclasses).
			- Macros and Defines are upper case and start with
			'G'.
			- Function names (C++ and C binding) start with 'G'.


		  These new naming conventions break the compatibility with
		  the Go-1.0.2 version. A document called src/doc/newNaming.ps
		  tends to summarize the changes.

		o UNDO:
		  The undo functionality has been removed from the Go kernel
		  for the following reasons:
			- It is not possible to control (and to undo) the
			actions taken in the pre and postconditions and
			it is not possible to impose to application
			programmers to write undo functions for pre and
			postconditions.

			- The undo functionality at the Go level is too
			low level, undo at the application level reflects
			the user actions.

			- The code to write new Go subclasses was too
			complicated.

		  A new tool ``Undo'' has been added to help the application
		  programmer to write the undo functionality. This object
		  manages undo stack, redo stack and provides functionalities
		  to push, pop, set marks, ...

		o Methods controlled with preconditions:
		  All methods controlled with preconditions return
		  a boolean value. If one of the preconditions refuses the
		  action, they return GFALSE. If the action is performed,
		  they return GTRUE.

		o GoASCII format:
		  The GoASCII format has been changed. The script
		  src/bin/scripts/convert.sh allows to convert old streams
		  into new ones.

		o GoUI:
		  Pre and postconditions have been added in order to control
		  the interactive methods of GoUI. This allows, for example
		  to confine the mouse displacement.

		  The Coordinate System can be shown when the user is 
		  modifying it (move, rotate, deform).

		o XGoInterf:
		  Work have been done to manage correctly the text drawing.
		  XGoInterf tries to give a good idea of the real (on the
		  paper) of the text size. Note this is not (yet) wysiwyg
		  characters may be smaller (not bigger) and in some cases
		  (rotated text) only the baseline is displayed.

		o GoGeometric Subclasses:
		  Arc and Cubic have been added.

		o GoTextual Subclasses:
		  The GoText is now associated with a ``Text Formatter''.
		  This object is responsible of the text formatting and
		  provides a strong separation between text editing (GoText)
		  and text formatting (Formattor). It exists the simple
		  formattor and the multi-column formattor.

		o godraw:
		  - The interface has been improved (attributes, rotation,
		  alignment, spacing, ...).
		  - Arcs and cubics are available.
		  - Text editing improvements.
		  - Named pens, brushes and textbrushes can be edited and
		  saved.
		  - Associations can be edited and saved.
		  - Undo/Redo is implemented.
		  - Online and context help is available.

		o Trace Level:
		  A variable (gTraceLevel) has been added to control the
		  trace level (see GWarning() function).

		o Go Generation:
		  The Go Installation Guide is now available
		  (src/doc/InstGuide). It should help people to generate Go.

		  The _NO_MOTIF define allows to not generate Motif dependent
		  code (XmGoInterf, godraw).

		  Some new macros are available for generating Makefiles
		  (ie. UseInstalledGo()).

		o GoENVIRON variable:
		  Some Go objects or applications request information stored
		  in files (PSGoInterf needs font metrics, GoText needs
		  dictionaries, godraw needs help files, ...).

		  The files are searched in the local directory, then in the
		  directory specified in GoENVIRON and finally in
		  /usr/local/lib/Go (the default). See the Go Installation
		  Guide.

		o Source Control:
		  A RCS identifier has been added in all files in order to
		  control future releases and to allow us to give a better
		  support (ie. patch distributions).

		o Documentation:
		  The Go Programmer's Guide has been reviewed, the example
		  has been changed.

		  The Go Reference Manual has been completed.

		  The Go Installation guide is new.

		  The Go Advanced Programmer's Manual is new but uncomplete.


	Shortcomings of this release:

		o GoStream class and subclasses:
			GoBinary is not available yet.

		o GoUI class:
			GoUI still uses the simple behavior language.
			It will not be replaced by WOOL (see gwm) but
			there will be two GoUI's: one not really customizable
			and the other fully customizable with WOOL.

		o GoInterf class:
			The cursor management is not complete.

		o XGoInterf class does not support 
			Double and Triple click
			Images with bit_per_pixel which is not 1 or 8.

		o GoGeometric class :
			GoSquare class is not implemented

		o GoImage class:
			Tiff, XPM, XBitmap, JPEG formats not available yet.

		o Graphic widget:
			XmNeditable resource is not implemented.

		o PostScript interface is incomplete (some level2 capabilities
			need to be simulated).


	Bugs:

