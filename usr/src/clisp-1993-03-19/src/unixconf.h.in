/* Bruno Haible 18.3.1993 */

#define UNIXCONF


/* UNIX variants */

/* AC_AIX */
/* Define if on AIX 3. */
#undef _ALL_SOURCE

/* AC_IRIX_SUN, AC_ISC_POSIX */
/* Define if you need to in order for stat and other things to work. */
#ifndef _POSIX_SOURCE
#undef _POSIX_SOURCE
#endif

/* CL_HPUX */
/* Define if /bin/sh is broken and /bin/ksh should be used instead. */
#undef UNIX_USE_KSH


/* compiler characteristics */

/* AC_CONST */
/* Define this as empty if your compiler doesn't support the `const' keyword. */
#undef const

/* AC_INLINE */
#undef inline

/* CL_VOID */
/* Define this as `char' if your compiler doesn't understand the void type. */
#undef void
/* Define this as `return' if your compiler allows returning expressions of
   type `void' from functions. */
#define return_void

/* CL_LONGLONG */
/* Define if your compiler supports the `long long' type. */
#undef HAVE_LONGLONG


/* header files */

/* CL_STDC_HEADERS */
/* Define if you have the ANSI C header files
   <stdlib.h>, <stdarg.h>, <string.h>, <float.h>, <limits.h>. */
#undef STDC_HEADERS

/* AC_UNISTD_H */
/* Define if you have <unistd.h>. */
#undef HAVE_UNISTD_H

/* AC_USG */
/* Define if you do not have <strings.h>, index(), bzero(), bcopy() etc.
   and must use strchr(), memset(), memcpy() etc. instead. */
#undef USG

/* CL_OPENFLAGS */
/* Define if you need <sys/file.h> for using open() flags like O_RDWR. */
#undef NEED_SYS_FILE_H

/* AC_DIR_HEADER, AC_XENIX_DIR, AC_DIRENT_WITHOUT_NAMLEN */
/* How to read directories: */
/* Define if you have <dirent.h>. */
#undef DIRENT   /* use <dirent.h> */
#undef DIRENT_WITHOUT_NAMLEN
/* Define if you don't have <dirent.h>, but have <sys/ndir.h>. */
#undef SYSNDIR  /* use <sys/ndir.h> */
/* Define if you don't have <dirent.h>, but have <sys/dir.h>. */
#undef SYSDIR   /* use <sys/dir.h> */
/* Define if the closedir() function has void return type. */
#undef VOID_CLOSEDIR

/* CL_UTSNAME */
/* Define if you have <sys/utsname.h> and it defines struct utsname. */
#undef HAVE_SYS_UTSNAME_H

/* CL_NETDB */
/* Define if you have <netdb.h>. */
#undef HAVE_NETDB_H

/* CL_SHM */
/* Define if you have <sys/shm.h> and <sys/ipc.h>. */
#undef HAVE_SHM
/* Define if you also have <sys/sysmacros.h>. */
#undef HAVE_SYS_SYSMACROS_H

/* CL_TERM */
/* Define if you have <termios.h>. */
#undef HAVE_TERMIOS_H
/* Define if <termios.h> defines TCSAFLUSH. */
#undef HAVE_TCSAFLUSH
/* Define if you have <termio.h>. */
#undef HAVE_TERMIO_H
/* Define if you have <sys/termio.h>. */
#undef HAVE_SYS_TERMIO_H
/* Define if you have <sgtty.h>. */
#undef HAVE_SGTTY_H


/* typedefs */

/* AC_SIZE_T */
#ifndef size_t
#undef size_t
#endif

/* AC_PID_T */
#ifndef pid_t
#undef pid_t
#endif

/* AC_UID_T */
#ifndef uid_t
#undef uid_t
#endif

/* CL_OFF_T */
#ifndef off_t
#undef off_t
#endif

/* CL_CADDR_T */
#ifndef caddr_t
#undef caddr_t
#endif

/* CL_CLOCK_T */
#ifndef clock_t
#undef clock_t
#endif


/* structures and structure members */

/* AC_STRUCT_TM */
/* Define if you need <sys/time.h> additionally to <time.h>
   in order to declare struct tm. */
#undef TM_IN_SYS_TIME


/* functions and declarations */

/* CL_MALLOC */
/* Define as the return type of malloc(). */
#undef RETMALLOCTYPE

/* CL_FREE */
/* Define as the return type of free(). */
#undef RETFREETYPE

/* CL_ALLOCA */
/* Define if you have <alloca.h> and it should be used (not Ultrix). */
#undef HAVE_ALLOCA_H
/* Define if you need to link with an external alloca.o when using alloca(). */
#undef NO_ALLOCA

/* CL_SETJMP */
/* Define if you have _setjmp() and _longjmp(). */
#undef HAVE__JMP
/* Define if longjmp() may return. */
#undef LONGJMP_RETURNS

/* AC_RETSIGTYPE */
/* Define as the return type of signal handlers (int or void). */
#define RETSIGTYPE void

/* CL_SIGNAL_REINSTALL */
/* Define if signal handlers need to be reinstalled when they are activated. */
#undef SIGNAL_NEED_REINSTALL

/* CL_SIGNALBLOCK */
/* how to block and unblock signals */
#undef SIGNALBLOCK_SYSV
#undef SIGNALBLOCK_POSIX
#undef SIGNALBLOCK_BSD

/* CL_SIGPROCMASK */
/* Define as const if the declaration of sigprocmask() needs const. */
#define SIGPROCMASK_CONST

/* CL_ABORT */
/* Define as the return type of abort(). */
#undef RETABORTTYPE

/* CL_SYS_ERRLIST */
/* Define as const if the declaration type of sys_errlist needs const. */
#define SYS_ERRLIST_CONST

/* CL_GETENV */
/* Define as const if the declaration of getenv() needs const. */
#define GETENV_CONST

/* AC_VFORK */
/* Define if you have <vfork.h>. */
#undef HAVE_VFORK_H
/* Define as fork if you have no working vfork(). */
#undef vfork

/* CL_VFORK */
/* Define as the return type of vfork(). */
#undef RETVFORKTYPE

/* CL_EXECV */
/* Define as const if the declaration of execv() needs const
   in the first argument. */
#define EXECV_CONST
/* Define as const if the second argument of execv() needs to be declared
   as an array of pointers to constant data. */
#define EXECV1_CONST
/* Define as const if the second argument of execv() needs to be declared
   as an array of constant pointers. */
#define EXECV2_CONST

/* CL_EXECL */
/* Define if the declaration of execl() needs dots. */
#undef EXECL_DOTS
/* Define as const if the declaration of execl() needs const
   in the second argument. */
#define EXECL_CONST

/* CL_WAITPID */
/* Define if you have the waitpid() function. */
#undef HAVE_WAITPID
/* Define as the type of `pid' in waitpid() declaration. */
#undef PID_T

/* CL_RUSAGE */
/* Define if you have <sys/resource.h>. */
#undef HAVE_SYS_RESOURCE_H
/* Define if you also have <sys/time.h>, the getrusage() function,
   the struct rusage type, and <sys/resource.h> defines RUSAGE_SELF. */
#undef HAVE_GETRUSAGE
/* Define if you have <sys/times.h>. */
#undef HAVE_SYS_TIMES_H

/* CL_GETWD */
/* Define if you have the getwd() function. */
#undef HAVE_GETWD

/* CL_GETCWD */
/* Define as the type of `bufsize' in getcwd() declaration. */
#undef GETCWD_SIZE_T

/* CL_CHDIR */
/* Define as const if the declaration of chdir() needs const. */
#define CHDIR_CONST

/* CL_MKDIR */
/* Define as const if the declaration of mkdir() needs const. */
#define MKDIR_CONST
/* Define as the type of `mode' in mkdir(), open() declaration. */
#undef MODE_T

/* CL_RMDIR */
/* Define as const if the declaration of rmdir() needs const. */
#define RMDIR_CONST

/* CL_STAT */
/* Define as const if the declaration of stat() needs const. */
#define STAT_CONST

/* CL_LSTAT */
/* Define as const if the declaration of lstat() needs const. */
#define LSTAT_CONST

/* CL_READLINK */
/* Define as const if the declaration of readlink() needs const. */
#define READLINK_CONST
/* Define as the type of `buf' in readlink() declaration. */
#undef READLINK_BUF_T
/* Define as the type of `bufsiz' in readlink() declaration. */
#undef READLINK_SIZE_T

/* CL_OPENDIR */
/* Define as const if the declaration of opendir() needs const. */
#define OPENDIR_CONST

/* CL_OPEN */
/* Define as const if the declaration of open() needs const. */
#define OPEN_CONST
/* Define if the declaration of open() needs dots. */
#undef OPEN_DOTS

/* CL_READ_WRITE */
/* Define as the return type of read(), write(). */
#undef RETRWTYPE
/* Define as the type of `buf' in read(), write() declaration. */
#undef RW_BUF_T
/* Define as the type of `count' in read(), write() declaration. */
#undef RW_SIZE_T

/* CL_WRITE */
/* Define as const if the declaration of write() needs const. */
#define WRITE_CONST

/* CL_RENAME */
/* Define as const if the declaration of rename() needs const. */
#define RENAME_CONST

/* CL_UNLINK */
/* Define as const if the declaration of unlink() needs const. */
#define UNLINK_CONST

/* CL_FSYNC */
/* Define if you have the fsync() system call. */
#undef HAVE_FSYNC

/* CL_IOCTL */
/* Define as the type of `request' in ioctl() declaration. */
#undef IOCTL_REQUEST_T
/* Define if the declaration of ioctl() needs dots. */
#undef IOCTL_DOTS
/* Define if you have the FIONREAD ioctl(). */
#undef HAVE_FIONREAD
/* Define if you need <sys/filio.h> for using ioctl's like FIONREAD. */
#undef NEED_SYS_FILIO_H
/* Define if you need <sys/ioctl.h> for using ioctl's like FIONREAD. */
#undef NEED_SYS_IOCTL_H

/* CL_SELECT */
/* Define if you have the select() system call. */
#undef HAVE_SELECT
/* Define as the type of `width' in select() declaration. */
#undef SELECT_WIDTH_T
/* Define as the type of `* readfds', `* writefds', `* exceptfds'
   in select() declaration. */
#undef SELECT_SET_T
/* Define as const if the declaration of select() needs const
   in the fifth argument. */
#define SELECT_CONST

/* CL_UALARM */
/* Define if you have the ualarm() function. */
#undef HAVE_UALARM

/* CL_SETITIMER */
/* Define if you have the setitimer() function. */
#undef HAVE_SETITIMER
/* Define as const if the declaration of setitimer() needs const. */
#define SETITIMER_CONST

/* CL_USLEEP */
/* Define if you have the usleep() function. */
#undef HAVE_USLEEP

/* CL_LOCALTIME */
/* Define as const if the declaration of localtime() needs const. */
#define LOCALTIME_CONST

/* CL_GETPWNAM */
/* Define as const if the declaration of getpwnam() needs const. */
#define GETPWNAM_CONST

/* CL_GETHOSTNAME */
/* Define if you have the gethostname() function. */
#undef HAVE_GETHOSTNAME
/* Define as the type of `namelen' in gethostname() declaration. */
#undef GETHOSTNAME_SIZE_T

/* CL_GETHOSTBYNAME */
/* Define if you have gethostbyname() and either <netdb.h> or <sun/netdb.h>. */
#undef HAVE_GETHOSTBYNAME
/* Define as const if the declaration of gethostbyname() needs const. */
#define GETHOSTBYNAME_CONST

/* CL_GETPAGESIZE */
/* Define if you have getpagesize(). */
#undef HAVE_GETPAGESIZE
/* Define as the return type of getpagesize(). */
#undef RETGETPAGESIZETYPE

/* CL_VADVISE */
/* Define if you have the vadvise() system call. */
#undef HAVE_VADVISE

/* CL_MMAP */
/* Define if you have <sys/mman.h> and the mmap() function. */
#undef HAVE_MMAP
/* Define as the type of `len' in mmap() declaration. */
#undef MMAP_SIZE_T
/* Define if <sys/mman.h> defines MAP_ANON and mmaping with MAP_ANON works. */
#undef HAVE_MMAP_ANON
/* Define if mmaping of the special device /dev/zero works. */
#undef HAVE_MMAP_DEVZERO

/* CL_SHMAT */
/* Define as the return type of shmat(). */
#undef RETSHMATTYPE
/* Define as const if the declaration of shmat() needs const. */
#define SHMAT_CONST

/* CL_SHMCTL */
/* Define if the declaration of shmctl() needs dots. */
#undef SHMCTL_DOTS


/* compiler characteristics */

/* AC_CHAR_UNSIGNED */
#ifndef __CHAR_UNSIGNED__
#undef __CHAR_UNSIGNED__
#endif

/* CL_MACHINE */
/* see machine.h */

