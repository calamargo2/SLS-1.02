%!
%%BoundingBox: (atend)
%%Pages: (atend)
%%DocumentFonts: (atend)
%%EndComments
%
% FrameMaker PostScript Prolog 2.0, for use with FrameMaker 2.0
% Copyright (c) 1986,87,89 by Frame Technology, Inc.  All rights reserved.
%
% Known Problems:
%	Due to bugs in Transcript, the 'PS-Adobe-' is omitted from line 1
%
% @(#)xvps.ps 1.3 90/06/20 SMI;
%
/FMversion (2.0) def 
/FrameDict 170 dict def 
systemdict /errordict known not { /errordict 10 dict def
		errordict /rangecheck { stop } put } if
% The readline in 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	FrameDict /graymode true put
	/yscale FMLOCAL
	/xscale FMLOCAL
	/PrintInColor systemdict /colorimage known def
% Uncomment this line to force b&w on color printer
%   /PrintInColor false def
PrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR } def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc } def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray }
			{HUE SAT BRIGHT sethsbcolor } 
		  ifelse
		} def
	/mysetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray }
			{HUE SAT BRIGHT sethsbcolor } 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY } def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc } def
	/mysetgray { setgray } bind def
	/K { 
		pop
		} def
	}
ifelse
/max	{2 copy lt {exch} if pop} bind def
/min	{2 copy gt {exch} if pop} bind def
/mtx matrix defaultmatrix def
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} def
/FMDOCUMENT { 
	array /FMfonts exch def
	/#copies exch def
	0 ne dup {setmanualfeed} if
	FrameDict begin
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	setpapername
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE {  
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne store
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{ pop pop }
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
	/fontname FMLOCAL
	/fontscale FMLOCAL
	/fontnum FMLOCAL
	/fontdict FMLOCAL
/FMDEFINEFONT {
	FrameDict begin
	/fontname exch def
	/fontscale exch def
	/fontnum exch def
	/fontdict fontname findfont fontscale scalefont def
	fontdict /Encoding get StandardEncoding eq
	{
		fontdict DiacriticEncode 
		/fontdict exch def
	} {
		fontdict NonDiacriticEncode
		/fontdict exch def
	} ifelse
	FMfonts fontnum
		fontnum fontdict definefont
	put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 mysetgray
	} bind def
/FMBEGINEPSF { 
	end 
	/FMEPSF save def
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
/inch {72 mul} def
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {lettertray} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray} def
		/Ledger {ledgertray} def
		/Legal {legaltray} def
		/Statement {statementtray} def
		/Executive {executivetray} def
		/A3 {a3tray} def
		/A4 {a4tray} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray} def
		/B5 {b5tray} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq { pop 1 } if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
	/basefontdict FMLOCAL
	/newfontdict FMLOCAL
/DiacriticEncode {
	/basefontdict exch def
	/newfontdict basefontdict maxlength dict def
	basefontdict
	{exch dup /FID ne
		{dup /Encoding eq
			{exch pop DiacriticEncoding}
			{exch}
			ifelse
			newfontdict 3 1 roll put
			}
		{pop pop}
		ifelse
		} forall
	newfontdict
	} bind def
/NonDiacriticEncode {
	/basefontdict exch def
	/newfontdict basefontdict maxlength dict def
	basefontdict
	{exch dup /FID ne
		{exch newfontdict 3 1 roll put}
		{pop pop}
		ifelse
		} forall
	newfontdict
	} bind def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div mysetgray
	/graymode false store
	} bind def
/grayness {
	mysetgray
	graymode not {
		/graymode true store
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z { 
	setlinecap
	} bind def
/X { 
	fillprocs exch get exec
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
/U { 
	grestore
	gsave
	} bind def
/F { 
	FMfonts exch get
	setfont
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne { -1 1 scale } if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/dx FMLOCAL
	/dy FMLOCAL
	/dl FMLOCAL
	/t FMLOCAL
	/t2 FMLOCAL
	/Cos FMLOCAL
	/Sin FMLOCAL
	/r FMLOCAL
/W { 
	dnormalize
	/dy exch def
	/dx exch def
	normalize
	/y  exch def
	/x  exch def
	/dl dx dx mul dy dy mul add sqrt def
	dl 0.0 gt {
		/t currentlinewidth def
		savematrix
		/Cos dx dl div def
		/Sin dy dl div def
		/r [Cos Sin Sin neg Cos 0.0 0.0] def
		/t2 t 2.5 mul 3.5 max def
		newpath
		x y translate
		r concat
		0.0 0.0 moveto
		dl t 2.7 mul sub 0.0 rlineto
		stroke
		restorematrix
		x dx add y dy add translate
		r concat
		t 0.67 mul setlinewidth
		t 1.61 mul neg  0.0 translate
		0.0 0.0 moveto
		t2 1.7 mul neg  t2 2.0 div     moveto
		0.0 0.0 lineto
		t2 1.7 mul neg  t2 2.0 div neg lineto
		stroke
		t setlinewidth
		restorematrix
		} if
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes {  
	dup 
	8 eq { pop } { 1 eq { 7 add 8 idiv } { 3 add 4 idiv } ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ cf is readhexstring pop } image
	bitmapsave restore 
	grestore
	} bind def
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	/ngrayt 256 array def
	/nredt 256 array def
	/nbluet 256 array def
	/ngreent 256 array def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
/fakecolorsetup {
	/tran 256 string def
	0 1 255 { /ind exch def 
		tran ind
		red ind get 77 mul
		green ind get 151 mul
		blue ind get 28 mul
		add add 256 idiv put } for
	currenttransfer
	{ 255 mul cvi tran exch get 255.0 div }
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ cf is readhexstring pop } {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
%%EndProlog
%%BeginSetup
(2.0) FMVERSION
1 1 612 792 0 1 14 FMDOCUMENT
/fillprocs 32 array def
fillprocs 0 { 0.000000 grayness } put
fillprocs 1 { 0.100000 grayness } put
fillprocs 2 { 0.300000 grayness } put
fillprocs 3 { 0.500000 grayness } put
fillprocs 4 { 0.700000 grayness } put
fillprocs 5 { 0.900000 grayness } put
fillprocs 6 { 0.970000 grayness } put
fillprocs 7 { 1.000000 grayness } put
fillprocs 8 {<0f1e3c78f0e1c387> 8 1 setpattern } put
fillprocs 9 {<0f87c3e1f0783c1e> 8 1 setpattern } put
fillprocs 10 {<cccccccccccccccc> 8 1 setpattern } put
fillprocs 11 {<ffff0000ffff0000> 8 1 setpattern } put
fillprocs 12 {<8142241818244281> 8 1 setpattern } put
fillprocs 13 {<03060c183060c081> 8 1 setpattern } put
fillprocs 14 {<8040201008040201> 8 1 setpattern } put
fillprocs 15 {} put
fillprocs 16 { 1.000000 grayness } put
fillprocs 17 { 0.900000 grayness } put
fillprocs 18 { 0.700000 grayness } put
fillprocs 19 { 0.500000 grayness } put
fillprocs 20 { 0.300000 grayness } put
fillprocs 21 { 0.100000 grayness } put
fillprocs 22 { 0.030000 grayness } put
fillprocs 23 { 0.000000 grayness } put
fillprocs 24 {<f0e1c3870f1e3c78> 8 1 setpattern } put
fillprocs 25 {<f0783c1e0f87c3e1> 8 1 setpattern } put
fillprocs 26 {<3333333333333333> 8 1 setpattern } put
fillprocs 27 {<0000ffff0000ffff> 8 1 setpattern } put
fillprocs 28 {<7ebddbe7e7dbbd7e> 8 1 setpattern } put
fillprocs 29 {<fcf9f3e7cf9f3f7e> 8 1 setpattern } put
fillprocs 30 {<7fbfdfeff7fbfdfe> 8 1 setpattern } put
fillprocs 31 {} put
%%EndSetup
0 11 /Times-Italic FMDEFINEFONT
1 18 /Helvetica-Bold FMDEFINEFONT
2 18 /Helvetica-BoldOblique FMDEFINEFONT
3 14 /Helvetica-Bold FMDEFINEFONT
4 12 /Times-Roman FMDEFINEFONT
5 12 /Times-Italic FMDEFINEFONT
6 12 /Courier FMDEFINEFONT
%%Page: "1" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 36 540 47 R
V
0 F
0 X
(Sun Preliminary \050subject to change\051) 226.36 39.67 T
72 72 540 720 R
7 X
V
1 F
0 X
(The ) 327.72 688 T
2 F
(XV) 364.7 688 T
(iew/NeWS) 388.04 688 T
1 F
( Library) 474.01 688 T
3 F
(Preliminary Documentation) 358.06 670.67 T
4 F
(The) 72 622 T
5 F
( XV) 90.65 622 T
(iew/NeWS library) 107.42 622 T
4 F
( is intended as cleaner/simpler method for ) 193.04 622 T
5 F
(NeWS) 397.23 622 T
4 F
( canvas handling in ) 426.54 622 T
5 F
-0.19 (XV) 72 608 P
-0.19 (iew) 85.77 608 P
4 F
-0.19 (. It is not intended to be a full C client interface for PostScript rendering. The intention is to ) 101.65 608 P
(provide ) 72 594 T
5 F
(XV) 111.64 594 T
(iew) 125.41 594 T
4 F
( developers with convenient access to ) 142.07 594 T
5 F
(NeWS) 325.92 594 T
4 F
(\325 PostScript rendering capability) 355.24 594 T
(. ) 510.02 594 T
(Canvases are created using the familiar ) 72 580 T
6 F
(xv_create\050\051) 263.17 580 T
4 F
(call. Access to canvases not created as ) 342.33 580 T
6 F
(PSCANVASes) 72 566 T
4 F
( is available through ) 143.96 566 T
6 F
(ps_token_from_xid\050\051) 244.56 566 T
4 F
(.) 381.29 566 T
-0.44 (Repaint and resize procs can be provided by the developer) 72 542 P
-0.44 (, as they can on ) 347.64 542 P
5 F
-0.44 (XV) 422.69 542 P
-0.44 (iew) 436.46 542 P
4 F
-0.44 ( ) 453.12 542 P
6 F
-1.06 (Canvases) 455.67 542 P
4 F
-0.44 (. The ) 513.24 542 P
(environment is set up for each of these calls so that the rendering appears on the correct canvas ) 72 528 T
(\050) 72 514 T
6 F
(setcanvas) 75.99 514 T
4 F
(\051 and the graphics state is not ef) 140.76 514 T
(fected \050) 292.76 514 T
6 F
(gsave/grestore) 329.05 514 T
4 F
(\051. Integration of the X ) 429.8 514 T
(damage information is provided through ) 72 500 T
6 F
(PSCANVAS_CLIPRECTS) 268.87 500 T
4 F
(.) 398.4 500 T
-0.1 (At the present time, all of the Red Book PostScript operators are not automatically de\336ned by the ) 72 476 P
5 F
-0.68 (CPS) 72 462 P
4 F
-0.68 ( include \336les. Of) 93.32 462 P
-0.68 (ferings in the future may include a more complete set of de\336nitions, but at this ) 171.03 462 P
(time, it will still be necessary to use ) 72 448 T
5 F
(CPS) 246.9 448 T
4 F
( to de\336ne many necessary operations.) 268.22 448 T
(Sample programs using this library can be found on the ) 72 424 T
5 F
(OpenW) 341.16 424 T
(indows) 376.46 424 T
4 F
( version 2 release tape in ) 410.45 424 T
($OPENWINHOME/share/src/sun/xview/demos/xvps. ) 72 410 T
70.14 729.54 94.56 753.96 R
7 X
V
0 X
-70.14 -729.54 24.42 24.42 BEGINPRINTCODE
% Sun Logo for Frame Maker
%
% and modified to scale to fill bounding textrect
% 
% "greyvalue" accepts numbers from 0 (black) to 1 (white)

% Frame Maker "printer code" textrect puts x y w h on stack

/greyvalue 0 def
/height exch def
/width exch def
/ypos exch def
/xpos exch def

gsave

width 2 div height 10.5 div translate
width 10.5 div height 10.5 div scale 
45 rotate

/Uchar {
		newpath
		-.1 0 moveto
		0 0 .1 180 360 arc
		0 2.9 rlineto
		.8 0 rlineto
		0 -2.9 rlineto
		0 0 .9 0 180 arcn
		0 2.9 rlineto
		.8 0 rlineto
		closepath
		greyvalue setgray
		fill
		} def
/2Uchar { Uchar gsave 4 4 translate Uchar grestore
		} def
 4 { 2Uchar 6 0 translate 90 rotate } repeat
    
grestore


ENDPRINTCODE
96.54 739.11 131.52 750 R
7 X
V
0 X
-96.54 -739.11 34.98 10.89 BEGINPRINTCODE

% This is the Sun logo. For best results, print on a LaserWriter Plus.
(sun) 1 
/fnt /Palatino-Bold findfont def
/mode exch def
/printme exch def
/h exch def 
/w exch def 
/y exch def 
/x exch def
0 0 moveto
fnt setfont
/wsize w printme stringwidth 
	pop div def
/hsize h (X) true charpath flattenpath
	pathbbox /t exch def pop pop pop t
	div def
mode 1 eq {/hsize wsize def} if
mode 2 eq {/wsize hsize def} if
fnt [wsize 0 0 hsize 0 0]	 makefont setfont
printme show


ENDPRINTCODE
96.54 734.16 131.19 737.46 R
7 X
V
0 X
-96.54 -734.16 34.65 3.3 BEGINPRINTCODE
(microsystems) 1 
/fnt /Helvetica findfont def
/mode exch def
/printme exch def
/h exch def 
/w exch def 
/y exch def 
/x exch def
0 0 moveto
fnt setfont
/wsize w printme stringwidth 
	pop div def
/hsize h (X) true charpath flattenpath
	pathbbox /t exch def pop pop pop t
	div def
mode 1 eq {/hsize wsize def} if
mode 2 eq {/wsize hsize def} if
fnt [wsize 0 0 hsize 0 0]	 makefont setfont
printme show


ENDPRINTCODE
541 722.25 71 722.25 2 L
3 H
2 Z
N
540.5 719 71.5 719 2 L
4 H
3 X
N
FMENDPAGE
%%EndPage: "1" 2
7 12 /Helvetica-Bold FMDEFINEFONT
8 10 /Times-Roman FMDEFINEFONT
9 10 /Times-Italic FMDEFINEFONT
10 10 /Courier FMDEFINEFONT
%%Page: "2" 2
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 32.67 540 42.67 R
V
72 36 540 47 R
V
0 F
0 X
(The XView/NeWS Library) 72 39.67 T
(Sun Preliminary \050subject to change\051) 226.36 39.67 T
(2) 534.51 39.67 T
72 72 297 720 R
7 X
V
1 F
0 X
(Attribute Summary) 72 708 T
7 F
(PSCANV) 72 675 T
(AS_CLIPRECTS) 121.09 675 T
8 F
(Sets the clipping for an ) 90 657.33 T
9 F
(XV) 185.22 657.33 T
(ie) 196.69 657.33 T
8 F
(w/) 203.91 657.33 T
9 F
(NeWS) 213.9 657.33 T
8 F
( canvas. Any ) 238.33 657.33 T
(subsequent ) 90 645.33 T
9 F
(NeWS) 136.91 645.33 T
8 F
( rendering operations will be ) 161.34 645.33 T
(clipped to this region. Input is an ) 90 633.33 T
9 F
(XV) 224.37 633.33 T
(iew) 235.84 633.33 T
8 F
( rectangle ) 249.72 633.33 T
(list, with the special value ) 90 621.33 T
10 F
(NULL) 196.6 621.33 T
8 F
( meaning no extra ) 220.59 621.33 T
(clipping is to be done.) 90 609.33 T
(Default:) 90 587.33 T
10 F
(NULL) 135 587.33 T
8 F
(T) 90 575.33 T
(ype:) 95.41 575.33 T
10 F
(Xv_rectlist) 135 575.33 T
8 F
(Procs:) 90 563.33 T
10 F
(create, set) 135 563.33 T
7 F
(PSCANV) 72 533 T
(AS_NEWST) 121.09 533 T
(OKEN) 187.51 533 T
8 F
(Returns the unique ) 90 515.33 T
9 F
(NeWS) 168.01 515.33 T
8 F
( identi\336er for the given ) 192.43 515.33 T
(PSCANV) 90 503.33 T
(AS. See ) 128.14 503.33 T
10 F
(pscanvas_is_token\050\051) 162.84 503.33 T
8 F
(, ) 276.78 503.33 T
10 F
-2.23 (ps_setcanvas\050\051) 90 491.33 P
8 F
-0.93 ( in) 173.95 491.33 P
9 F
-0.93 ( Summary of Pr) 183.3 491.33 P
-0.93 (ocedur) 243.16 491.33 P
-0.93 (es and ) 270.54 491.33 P
(Macr) 90 479.33 T
(os) 111.28 479.33 T
8 F
(T) 90 457.33 T
(ype:) 95.41 457.33 T
10 F
(NeWStoken) 135 457.33 T
8 F
(Procs:) 90 445.33 T
10 F
(get) 135 445.33 T
7 F
(PSCANV) 72 415 T
(AS_REP) 121.09 415 T
(AINT_PROC) 168.19 415 T
8 F
(Names a procedure called when then PSCANV) 90 397.33 T
(AS ) 278.01 397.33 T
(has been damaged and must be repaired. See ) 90 385.33 T
10 F
(pscanvas_repaint_proc\050\051) 90 373.33 T
8 F
( in) 227.92 373.33 T
9 F
( Summary of ) 238.2 373.33 T
(Pr) 90 361.33 T
(ocedur) 99.62 361.33 T
(es and Macr) 127.01 361.33 T
(os) 176.6 361.33 T
8 F
(Default:) 90 339.33 T
10 F
(NULL) 135 339.33 T
8 F
(Procs:) 90 327.33 T
10 F
(create, get, set) 135 327.33 T
7 F
(PSCANV) 72 297 T
(AS_RESIZE_PROC) 121.09 297 T
8 F
(Names a procedure called when the PSCANV) 90 279.34 T
(AS ) 273.01 279.34 T
(width or height changes. ) 90 267.34 T
-0.22 (See ) 90 255.34 P
10 F
-0.53 (pscanvas_repaint_proc\050\051) 106.71 255.34 P
8 F
-0.22 ( in ) 244.64 255.34 P
9 F
-0.22 (Summary ) 256.97 255.34 P
(of Pr) 90 243.34 T
(ocedur) 109.9 243.34 T
(es and Macr) 137.28 243.34 T
(os) 186.88 243.34 T
8 F
(Default:) 90 221.34 T
10 F
(NULL) 135 221.34 T
8 F
(Procs:) 90 209.34 T
10 F
(create, get, set) 135 209.34 T
7 F
(PSCANV) 72 179 T
(AS_SYNC) 121.09 179 T
8 F
(Speci\336es whether ) 90 161.34 T
9 F
(XV) 163.28 161.34 T
(iew) 174.75 161.34 T
8 F
( will periodically ) 188.64 161.34 T
(synchronize ) 90 149.34 T
9 F
(X) 140.79 149.34 T
8 F
( and ) 146.9 149.34 T
9 F
(NeWS) 166.33 149.34 T
8 F
(.) 190.76 149.34 T
(Default:) 90 127.34 T
10 F
(TRUE) 135 127.34 T
8 F
(T) 90 115.34 T
(ype:) 95.41 115.34 T
10 F
(int) 135 115.34 T
8 F
(Procs:) 90 103.34 T
10 F
(create, get, set) 135 103.34 T
315 72 540 720 R
7 X
V
1 F
0 X
(Data T) 315 708 T
(ypes) 368.65 708 T
7 F
(PScanvas) 315 675 T
4 F
-0.58 (Handle to an opaque structure ) 396 675 P
(that describes a ) 396 661 T
5 F
(XV) 472.94 661 T
(iew/NeWS) 486.71 661 T
4 F
( ) 536.01 661 T
(canvas.) 396 647 T
7 F
(NeWStoken) 315 616 T
4 F
(Handle to a ) 396 616 T
5 F
(NeWS) 454.29 616 T
4 F
( object re-) 483.6 616 T
-0.07 (siding on the server) 396 602 P
-0.07 (, in ) 489.58 602 P
5 F
-0.07 (NeWS) 507.76 602 P
4 F
-0.07 ( ) 537.07 602 P
(terminology) 396 588 T
(, a ) 453.86 588 T
6 F
(usertoken) 468.18 588 T
4 F
(. ) 532.94 588 T
FMENDPAGE
%%EndPage: "2" 3
11 11 /Courier FMDEFINEFONT
%%Page: "3" 3
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 32.67 540 42.67 R
V
72 36 540 47 R
V
0 F
0 X
(The XView/NeWS Library) 72 39.67 T
(Sun Preliminary \050subject to change\051) 226.36 39.67 T
(3) 534.51 39.67 T
72 90 540 720 R
7 X
V
1 F
0 X
(Summary of Procedures and Macros) 227.08 668 T
4 F
(This appendix lists the procedures and macros in alphabetical order and describes each of them ) 72 635 T
(brie\337y) 72 621 T
(. The description includes the call that uses the procedure or macro.) 102.54 621 T
7 F
(pscanvas_repaint_proc\050\051) 72 590 T
4 F
(Client-supplied callback procedure called when getting a ) 135 571 T
6 F
(WIN_REPAINT) 411.12 571 T
4 F
( event. ) 490.28 571 T
(Function is installed using the attribute) 135 557 T
6 F
( PSCANVAS_REPAINT_PROC) 321.9 557 T
4 F
(.) 480.22 557 T
11 F
(void) 153 533.67 T
(pscanvas_repaint_proc\050pscanvas, newstoken, display, xid, ) 153 520.67 T
(xrects\051) 288 507.67 T
(PScanvas) 198 494.67 T
(pscanvas;) 288 494.67 T
(NeWStoken) 198 481.67 T
(newstoken;) 288 481.67 T
(Display) 198 468.67 T
(*display;) 288 468.67 T
(Window) 198 455.67 T
(xid;) 288 455.67 T
(Xv_rectlist) 198 442.67 T
(*xrects;) 288 442.67 T
6 F
(newstoken) 135 424 T
4 F
( is a ) 199.76 424 T
5 F
(NeWS) 222.08 424 T
4 F
( usertoken identi\336er for the pscanvas window) 251.4 424 T
(. ) 469.12 424 T
6 F
(display) 475.12 424 T
4 F
( is ) 525.49 424 T
-0.72 (the display handle to the X1) 135 410 P
-0.72 (1 server connection. ) 265.88 410 P
6 F
-1.72 (xid) 363.65 410 P
4 F
-0.72 ( is the X1) 385.23 410 P
-0.72 (1 window identi\336er for ) 428.95 410 P
(the pscanvas. The ) 135 396 T
6 F
(xrects) 223.6 396 T
4 F
( structure contains an array of ) 266.77 396 T
6 F
(XRectangles) 412.65 396 T
4 F
( and a ) 491.8 396 T
-0.48 (count that speci\336es the repaint area for the pscanvas. This structure can be used to set ) 135 382 P
-0.07 (the attribute ) 135 368 P
6 F
-0.18 (PSCANVAS_CLIPRECTS) 195.48 368 P
4 F
-0.07 ( to use the X1) 325.01 368 P
-0.07 (1 damage as a clipping region. ) 390.89 368 P
(See Attribute Summary) 135 354 T
(.) 247.49 354 T
7 F
(pscanvas_resize_proc\050\051) 72 323 T
4 F
(Procedure called when pscanvas width or height changes. This function is installed ) 135 304 T
(using the attribute ) 135 290 T
6 F
(PSCANVAS_RESIZE_PROC) 224.62 290 T
4 F
(.) 368.54 290 T
11 F
(void) 153 266.67 T
(pscanvas_resize_proc\050pscanvas, width, height\051) 153 253.67 T
(PScanvas) 198 240.67 T
(pscanvas;) 288 240.67 T
(int) 198 227.67 T
(width;) 288 227.67 T
(int) 198 214.67 T
(height;) 288 214.67 T
7 F
(pscanvas_sync\050\051) 72 184 T
4 F
(Procedure for synchronizing the NeWS connection. This insures that the NeWS ) 135 165 T
-0.41 (connection has \322caught up.\323 Any errors ocurring on the NeWS side are collected and ) 135 151 P
(reported at this time, using ) 135 137 T
6 F
(xv_error\050\051) 266.26 137 T
4 F
(.) 338.22 137 T
11 F
(void) 153 113.67 T
(pscanvas_sync\050\051) 198 100.67 T
FMENDPAGE
%%EndPage: "3" 4
%%Page: "4" 4
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 32.67 540 42.67 R
V
72 36 540 47 R
V
0 F
0 X
(The XView/NeWS Library) 72 39.67 T
(Sun Preliminary \050subject to change\051) 226.36 39.67 T
(4) 534.51 39.67 T
72 90 540 720 R
7 X
V
7 F
0 X
(pscanvas_\337ip\050\051) 72 712 T
4 F
(Procedure for \337ipping over the transformation on a ) 135 693 T
6 F
(PSCANVAS) 382.82 693 T
4 F
(. This macro can be ) 440.39 693 T
-0.45 (called in the repaint procedure to insure that rendering will appear the correct side up.) 135 679 P
11 F
(void) 153 655.67 T
(pscanvas_\337ip\050\051) 153 642.67 T
1 F
(Additional ) 72 582 T
2 F
(CPS) 164.96 582 T
1 F
( Macros) 201.94 582 T
4 F
(Below are ) 72 546 T
5 F
(CPS) 123.96 546 T
4 F
( macros de\336ned for use with the ) 145.28 546 T
5 F
(XV) 302.17 546 T
(iew/NeWS library) 315.93 546 T
4 F
(. These macros supplement ) 400.77 546 T
(the existing set of ) 72 532 T
5 F
(CPS) 159.95 532 T
4 F
( macros de\336ned in ) 181.27 532 T
6 F
($OPENWINHOME/include/NeWS/psmacros.h ) 272.54 532 T
4 F
(and covered in Chapter 7 of the ) 72 518 T
5 F
(NeWS Pr) 226.21 518 T
(ogrammer) 270.07 518 T
(\325) 320.48 518 T
(s Guide) 322.93 518 T
6 F
(.) 359.9 518 T
7 F
(ps_clear_cliprects\050\051) 72 487 T
4 F
(Sets the clipping for the current canvas back to ) 135 468 T
6 F
(NULL) 363.16 468 T
4 F
(, or the original shape of the ) 391.95 468 T
-0.58 (window) 135 454 P
-0.58 (. This is equivalent to ) 172.86 454 P
6 F
-1.4 (xv_set\050pscanvas, PSCANVAS_CLIPRECTS, ) 276.55 454 P
-1.67 (NULL\051; ) 135 440 P
4 F
-0.7 (for the appropriate PScanvas. But this can be used for routines that are used ) 183.7 440 P
(on more than one PScanvas.) 135 426 T
11 F
(void) 153 402.67 T
(ps_clear_cliprects\050\051) 153 389.67 T
7 F
(ps_setcanvas\050\051) 72 359 T
4 F
(Sets the current ) 135 340 T
5 F
(NeWS) 212.61 340 T
4 F
( canvas to be the canvas pointed to by newstoken. Note: all ) 241.92 340 T
(repaint and resize procedures are bracketed with a ) 135 326 T
6 F
(ps_gsave) 378.11 326 T
4 F
(, the appropriate ) 435.67 326 T
6 F
(ps_setcanvas) 135 312 T
4 F
(, and a ) 221.35 312 T
6 F
(ps_grestore) 255.99 312 T
4 F
(, so it is not necessary to do any of these ) 335.15 312 T
(during normal circumstances.) 135 298 T
11 F
(void ) 153 274.67 T
(ps_setcanvas\050newstoken\051) 153 261.67 T
(NeWStoken) 198 248.67 T
(*newstoken;) 288 248.67 T
7 F
(ps_token_from_xid\050xid, newstoken\051) 72 218 T
4 F
( ) 135 199 T
6 F
(xid) 138 199 T
4 F
( is the X1) 159.59 199 T
(1 window identi\336er for a window) 205.45 199 T
(. This macro retrieves a ) 365.56 199 T
5 F
(NeWS) 481.47 199 T
4 F
( ) 510.78 199 T
(usertoken identi\336er for this window suitable for use with ) 135 185 T
6 F
(ps_setcanvas) 410.49 185 T
4 F
(. If the ) 496.84 185 T
(value given is invalid, the routine returns ) 135 171 T
6 F
(FALSE) 334.87 171 T
4 F
( and -1 is returned in the second ) 370.85 171 T
(ar) 135 157 T
(gument. ) 144.1 157 T
11 F
(Boolean ) 153 133.67 T
(ps_token_from_xid\050xid, newstoken\051) 153 120.67 T
(Window) 198 107.67 T
(xid;) 288 107.67 T
(NeWStoken) 198 94.67 T
(*newstoken;) 288 94.67 T
FMENDPAGE
%%EndPage: "4" 5
%%Page: "5" 5
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 32.67 540 42.67 R
V
72 36 540 47 R
V
0 F
0 X
(The XView/NeWS Library) 72 39.67 T
(Sun Preliminary \050subject to change\051) 226.36 39.67 T
(5) 534.51 39.67 T
72 72 540 720 R
7 X
V
7 F
0 X
(ps_token_from_code\050postscript_code, newstoken\051) 72 712 T
6 F
(newstoken) 135 693 T
4 F
( is set to a ) 199.76 693 T
5 F
(NeWS) 250.74 693 T
4 F
( usertoken for the PostScript object passed as the \336rst ) 280.05 693 T
(ar) 135 679 T
(gument \050a character string\051. The PostScript is checked \336rst to see if it is a single ) 144.1 679 T
-0.31 (object, if it is, ) 135 665 P
6 F
-0.74 (newstoken) 203.07 665 P
4 F
-0.31 ( is set to a usertoken pointing at it and the routine returns ) 267.83 665 P
6 F
(TRUE) 135 651 T
4 F
(. Otherwise the routine returns ) 163.78 651 T
6 F
(FALSE) 313.01 651 T
4 F
( and ) 348.99 651 T
6 F
(newstoken) 372.3 651 T
4 F
( is set to -1. This is ) 437.07 651 T
(useful for making tokens for canvases created by user) 135 637 T
(-de\336ned ) 392.55 637 T
5 F
(CPS) 434.85 637 T
4 F
( procedures: ) 456.17 637 T
6 F
(ps_token_from_code\050\322MyCanvas\323,&mycanvas\051) 135 623 T
11 F
(Boolean ) 153 599.67 T
(ps_token_from_code\050postscript_code, newstoken\051) 153 586.67 T
(char) 198 573.67 T
(*postscript_code;) 288 573.67 T
(NeWStoken) 198 560.67 T
(*newstoken;) 288 560.67 T
FMENDPAGE
%%EndPage: "5" 6
%%Page: "6" 6
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 32.67 540 42.67 R
V
72 36 540 47 R
V
0 F
0 X
(The XView/NeWS Library) 72 39.67 T
(Sun Preliminary \050subject to change\051) 226.36 39.67 T
(6) 534.51 39.67 T
1 F
(XV) 269.38 708 T
(iew/NeWS Library: Examples) 293.05 708 T
4 F
-0.41 (Below is a sample program that uses the X) 72 672 P
5 F
-0.41 (V) 273.9 672 P
-0.41 (iew/NeWS library) 280.34 672 P
4 F
-0.41 ( to create a PSCANV) 365.55 672 P
-0.41 (AS and display ) 464.95 672 P
(the word \322NeWS\323 using ) 72 658 T
5 F
(NeWS) 191.91 658 T
4 F
( PostScript rendering.) 221.22 658 T
7 F
(simple.c) 72 627 T
11 F
(/*) 153 613.67 T
-0.19 ( * simple.c -- a short example using the XView/NeWS library) 153 600.67 P
( * ) 153 587.67 T
-0.19 ( * A PSCANVAS is created, then NeWS PostScript rendering is) 153 574.67 P
( * used to display the word \322NeWS\323 at an angle.) 153 561.67 T
( * The text remains centered when the window is resized.) 153 548.67 T
( *) 153 535.67 T
( */) 153 522.67 T
(#include <xview/xview.h>) 153 509.67 T
(#include <xvps/pscanvas.h>) 153 496.67 T
(#include \322simple.h\323) 153 483.67 T
(Frame frame;) 153 470.67 T
(void pscanvas_repaint_proc\050pscanvas, newstoken, dpy, xid, ) 153 457.67 T
(xrects\051) 288 444.67 T
( PScanvas) 153 431.67 T
(pscanvas;) 288 431.67 T
( NeWStoken) 153 418.67 T
(newstoken;) 288 418.67 T
( Display) 153 405.67 T
(*dpy;) 288 405.67 T
( Window) 153 392.67 T
(xid;) 288 392.67 T
( Xv_xrectlist *xrects;) 153 379.67 T
({) 153 366.67 T
( xv_set\050pscanvas, PSCANVAS_CLIPRECTS, xrects, NULL\051;) 153 353.67 T
( pscanvas_\337ip\050\051) 153 340.67 T
( simple_setup\050\051;) 153 327.67 T
( ps_\336ndfont\050\322Bembo-Bold\323\051;) 153 314.67 T
( ps_scalefont\05097\051;) 153 301.67 T
( ps_setfont\050\051;) 153 288.67 T
( ps_show\050\322NeWS\323\051;) 153 275.67 T
(}) 153 262.67 T
(main\050argc, argv\051) 153 249.67 T
(int argc;) 288 236.67 T
(char **argv;) 288 223.67 T
({) 153 210.67 T
( xv_init\050XV_INIT_ARGS, argc, argv, 0\051;) 153 197.67 T
( frame=xv_create\050NULL, FRAME, ) 153 184.67 T
(FRAME_LABEL, \322XView/NeWSLibrary Example\323,) 216 171.67 T
( ) 153 158.67 T
(NULL\051;) 216 158.67 T
( xv_create\050frame, PSCANVAS,) 153 145.67 T
(PSCANVAS_REPAINT_PROC,) 288 132.67 T
(XV_VISUAL_CLASS, StaticColor,) 288 119.67 T
(pscanvas_repaint_proc,) 288 106.67 T
(NULL\051;) 288 93.67 T
( window_\336t\050frame\051;) 153 80.67 T
( xv_main_loop\050frame\051;) 153 67.67 T
(}) 153 54.67 T
FMENDPAGE
%%EndPage: "6" 7
12 14 /Times-Bold FMDEFINEFONT
13 14 /Times-BoldItalic FMDEFINEFONT
%%Page: "7" 7
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 32.67 540 42.67 R
V
72 36 540 47 R
V
0 F
0 X
(The XView/NeWS Library) 72 39.67 T
(Sun Preliminary \050subject to change\051) 226.36 39.67 T
(7) 534.51 39.67 T
72 63 540 720 R
7 X
V
4 F
0 X
(Below is the ) 72 712 T
5 F
(CPS) 134.96 712 T
4 F
( routine needed for use with the C program simple.c. The canvas is \336lled with ) 156.29 712 T
-0.18 (white, and the coordinate space is rotated. In the C program, a string will be displayed and appear ) 72 698 P
(rotated.) 72 684 T
7 F
(simple.cps) 72 653 T
11 F
(cdef simple_setup\050\051) 153 639.67 T
(1 -1 scale ) 216 626.67 T
(% \337lip view) 432 626.67 T
(1 \336llcanvas) 216 613.67 T
(% clear canvas) 432 613.67 T
(.8 setgray) 216 600.67 T
(200 100 moveto) 216 587.67 T
(22 rotate) 216 574.67 T
(% 22 degrees) 432 574.67 T
7 F
(Compiling this example) 72 518 T
4 F
(T) 72 504 T
(o compile and test this example, run CPS against simple.cps and compile simple.c, linking with ) 78.49 504 T
(the XV) 72 490 T
(iew/NeWS library \050libxvps\051 and the CPS library:) 106.25 490 T
11 F
(cps simple.cps) 153 476.67 T
(cc -o simple simple.c -lxvps -lxview -lolgx -lX -lcps \134) 153 463.67 T
(-I$OPENWINHOME/include -L$OPENWINHOME/lib) 225 450.67 T
1 F
(Additional Notes) 72 416 T
12 F
(X and ) 72 384.67 T
13 F
(NeWS) 111.65 384.67 T
12 F
( Color) 148.19 384.67 T
4 F
(The X1) 72 365 T
(1 and ) 107.86 365 T
5 F
(NeWS) 137.17 365 T
4 F
( imaging models have dif) 166.48 365 T
(ferent models for allocating and using color) 288.19 365 T
(. Using ) 497.38 365 T
-0.85 (the XV) 72 351 P
-0.85 (iew/NeWS Library) 105.4 351 P
-0.85 (, either model may be used to manage your colors. It may be more natural ) 195.37 351 P
-0.73 (to use the ) 72 337 P
5 F
-0.73 (NeWS) 118.78 337 P
4 F
-0.73 ( StaticColor model, which allocates a ) 148.09 337 P
5 F
-0.73 (NeWS) 325.92 337 P
4 F
-0.73 ( Color Cube that all applications share. ) 355.23 337 P
(This model has more of the device-independant approach that PostScript uses. T) 72 323 T
(o use NeWS ) 456.89 323 T
-0.53 (StaticColor) 72 309 P
-0.53 (, ) 126.16 309 P
5 F
-0.53 (XV) 131.63 309 P
-0.53 (iew) 145.4 309 P
4 F
-0.53 ( allows you to set the \322V) 162.05 309 P
-0.53 (isual\323 or color model for speci\336c XV) 276.74 309 P
-0.53 (iew objects. T) 451.36 309 P
-0.53 (o do ) 517.08 309 P
(this set the ) 72 295 T
6 F
(XV_VISUAL_CLASS) 126.31 295 T
4 F
( attribute on your ) 234.25 295 T
6 F
(PSCANVAS) 320.19 295 T
4 F
(:) 377.76 295 T
11 F
( xv_create\050frame, PSCANVAS,) 153 281.67 T
(PSCANVAS_REPAINT_PROC,) 288 268.67 T
(XV_VISUAL_CLASS, StaticColor,) 288 255.67 T
(pscanvas_repaint_proc,) 288 242.67 T
(NULL\051;) 288 229.67 T
4 F
(Using ) 72 202 T
5 F
(XV) 103.65 202 T
(iew) 117.42 202 T
4 F
( to manage your colors is also possible, using the ) 134.08 202 T
6 F
(setpixel NeWS) 372.27 202 T
4 F
( operator) 465.82 202 T
(, and ) 508.3 202 T
(the ) 72 188 T
5 F
(XV) 89.65 188 T
(iew) 103.42 188 T
4 F
( cms operations. That approach is beyond the scope of this document. See your ) 120.08 188 T
5 F
(XV) 502.48 188 T
(iew) 516.25 188 T
4 F
( ) 532.91 188 T
(documentation and the ) 72 174 T
5 F
(NeWS 2.1 Pr) 184.26 174 T
(ogrammer) 246.11 174 T
(\325) 296.52 174 T
(s Guide ) 298.96 174 T
4 F
(for more infomation) 338.94 174 T
12 F
(Default T) 72 144.67 T
(ransformation Matrix) 128.1 144.67 T
4 F
-0.14 (The current default transform for a ) 72 125 P
6 F
-0.34 (PSCANVAS) 241.01 125 P
4 F
-0.14 ( is the NeWS co-ordinate space, with origin in the ) 298.58 125 P
-0.42 (bottom left corner) 72 111 P
-0.42 (. Unfortunately) 157.11 111 P
-0.42 (, this causes the rendering to appear upside down. T) 229.2 111 P
-0.42 (o \336x this, it is ) 473.43 111 P
-0.64 (currently the developers responsibility to set up an appropriate transformation matrix in the repaint ) 72 97 P
(procedure. The simplest method for doing this is to call ) 72 83 T
6 F
(pscanvas_\337ip\050\051) 340.83 83 T
4 F
( in your repaint ) 441.58 83 T
(procedure.) 72 69 T
FMENDPAGE
%%EndPage: "7" 8
%%Page: "8" 8
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 32.67 540 42.67 R
V
72 36 540 47 R
V
0 F
0 X
(The XView/NeWS Library) 72 39.67 T
(Sun Preliminary \050subject to change\051) 226.36 39.67 T
(8) 534.51 39.67 T
72 72 540 720 R
7 X
V
12 F
0 X
(Using the NeWS \322framebuffer\323) 72 712 T
4 F
-0.79 (NeWS programmers may want to use the X1) 72 698 P
-0.79 (1/NeWS root window) 281.53 698 P
-0.79 (, or \322framebuf) 384.43 698 P
-0.79 (fer\323 at some point. ) 450.9 698 P
(T) 72 684 T
(o do this, use XV) 78.49 684 T
(iew to get a valid XID for the root window) 161.39 684 T
(, and then use ) 366.13 684 T
6 F
(ps_token_from_xid\050\051) 72 670 T
4 F
( to get NeWStoken for use with ) 208.73 670 T
6 F
(ps_setcanvas\050\051) 363.62 670 T
4 F
(.) 464.36 670 T
11 F
( frame = \050Frame\051xv_create\050NULL, FRAME,) 153 643.67 T
( ) 153 630.67 T
(XV_WIDTH, 100,) 216 630.67 T
( ) 153 617.67 T
(XV_HEIGHT, 100,) 216 617.67 T
( ) 153 604.67 T
(FRAME_LABEL, \322Base Frame\323,) 216 604.67 T
( ) 153 591.67 T
(NULL\051;) 216 591.67 T
( screen = xv_get\050frame, XV_SCREEN\051;) 153 565.67 T
( root = xv_get\050screen, XV_ROOT\051;) 153 552.67 T
( xid = \050XID\051xv_get\050root, XV_XID\051;) 153 539.67 T
( ps_token_from_xid\050xid,&framebuffer\051;) 153 526.67 T
1 F
(T) 72 466 T
(rademarks and Copyright Notices) 82 466 T
11 F
( ) 153 450.67 T
5 F
-0.34 (NeWS, X1) 72 437 P
-0.34 (1/NeWS) 119.4 437 P
4 F
-0.34 ( and ) 158.05 437 P
5 F
-0.34 (XV) 180.68 437 P
-0.34 (iew) 194.45 437 P
4 F
-0.34 ( are trademarks of Sun Microsystems, Inc. Sun W) 211.11 437 P
-0.34 (rokstation, Sun Mi-) 447.06 437 P
(crosystems and the Sun logo ) 72 423 T
( are registered trademarks of Sun Microsystems, Inc.) 240.74 423 T
-0.28 (PostScript is a registered trademark of Adobe Systems. Adobe owns copyrights related to thePost-) 72 395 P
-0.16 (Script language and the PostScript interpreter) 72 381 P
-0.16 (. The trademark PststScript is used herein to refer to ) 288.74 381 P
(the material supplied by Adobe or to programs written in the PostScript language as de\336ned by ) 72 367 T
(Adobe.) 72 353 T
(The X W) 72 325 T
(indow System is a trademark of Massachusetts Institute of T) 116.15 325 T
(echnology) 405.45 325 T
212.25 405 240.74 432 C
212.25 405 240.74 432 R
7 X
0 K
V
213.16 406.67 237.58 431.09 R
V
0 X
-213.16 -406.67 24.42 24.42 BEGINPRINTCODE
% Sun Logo for Frame Maker
%
% and modified to scale to fill bounding textrect
% 
% "greyvalue" accepts numbers from 0 (black) to 1 (white)

% Frame Maker "printer code" textrect puts x y w h on stack

/greyvalue 0 def
/height exch def
/width exch def
/ypos exch def
/xpos exch def

gsave

width 2 div height 10.5 div translate
width 10.5 div height 10.5 div scale 
45 rotate

/Uchar {
		newpath
		-.1 0 moveto
		0 0 .1 180 360 arc
		0 2.9 rlineto
		.8 0 rlineto
		0 -2.9 rlineto
		0 0 .9 0 180 arcn
		0 2.9 rlineto
		.8 0 rlineto
		closepath
		greyvalue setgray
		fill
		} def
/2Uchar { Uchar gsave 4 4 translate Uchar grestore
		} def
 4 { 2Uchar 6 0 translate 90 rotate } repeat
    
grestore


ENDPRINTCODE
0 0 612 792 C
FMENDPAGE
%%EndPage: "8" 9
%%Page: "1" 9
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 36 540 47 R
V
0 F
0 X
(Sun Preliminary \050subject to change\051) 226.36 39.67 T
72 72 540 720 R
7 X
V
1 F
0 X
(The ) 327.72 688 T
2 F
(XV) 364.7 688 T
(iew/NeWS) 388.04 688 T
1 F
( Library) 474.01 688 T
3 F
(Preliminary Documentation) 358.06 670.67 T
4 F
(The) 72 622 T
5 F
( XV) 90.65 622 T
(iew/NeWS library) 107.42 622 T
4 F
( is intended as cleaner/simpler method for ) 193.04 622 T
5 F
(NeWS) 397.23 622 T
4 F
( canvas handling in ) 426.54 622 T
5 F
-0.19 (XV) 72 608 P
-0.19 (iew) 85.77 608 P
4 F
-0.19 (. It is not intended to be a full C client interface for PostScript rendering. The intention is to ) 101.65 608 P
(provide ) 72 594 T
5 F
(XV) 111.64 594 T
(iew) 125.41 594 T
4 F
( developers with convenient access to ) 142.07 594 T
5 F
(NeWS) 325.92 594 T
4 F
(\325 PostScript rendering capability) 355.24 594 T
(. ) 510.02 594 T
(Canvases are created using the familiar ) 72 580 T
6 F
(xv_create\050\051) 263.17 580 T
4 F
(call. Access to canvases not created as ) 342.33 580 T
6 F
(PSCANVASes) 72 566 T
4 F
( is available through ) 143.96 566 T
6 F
(ps_token_from_xid\050\051) 244.56 566 T
4 F
(.) 381.29 566 T
-0.44 (Repaint and resize procs can be provided by the developer) 72 542 P
-0.44 (, as they can on ) 347.64 542 P
5 F
-0.44 (XV) 422.69 542 P
-0.44 (iew) 436.46 542 P
4 F
-0.44 ( ) 453.12 542 P
6 F
-1.06 (Canvases) 455.67 542 P
4 F
-0.44 (. The ) 513.24 542 P
(environment is set up for each of these calls so that the rendering appears on the correct canvas ) 72 528 T
(\050) 72 514 T
6 F
(setcanvas) 75.99 514 T
4 F
(\051 and the graphics state is not ef) 140.76 514 T
(fected \050) 292.76 514 T
6 F
(gsave/grestore) 329.05 514 T
4 F
(\051. Integration of the X ) 429.8 514 T
(damage information is provided through ) 72 500 T
6 F
(PSCANVAS_CLIPRECTS) 268.87 500 T
4 F
(.) 398.4 500 T
-0.1 (At the present time, all of the Red Book PostScript operators are not automatically de\336ned by the ) 72 476 P
5 F
-0.68 (CPS) 72 462 P
4 F
-0.68 ( include \336les. Of) 93.32 462 P
-0.68 (ferings in the future may include a more complete set of de\336nitions, but at this ) 171.03 462 P
(time, it will still be necessary to use ) 72 448 T
5 F
(CPS) 246.9 448 T
4 F
( to de\336ne many necessary operations.) 268.22 448 T
(Sample programs using this library can be found on the ) 72 424 T
5 F
(OpenW) 341.16 424 T
(indows) 376.46 424 T
4 F
( version 2 release tape in ) 410.45 424 T
($OPENWINHOME/share/src/sun/xview/demos/xvps. ) 72 410 T
70.14 729.54 94.56 753.96 R
7 X
V
0 X
-70.14 -729.54 24.42 24.42 BEGINPRINTCODE
% Sun Logo for Frame Maker
%
% and modified to scale to fill bounding textrect
% 
% "greyvalue" accepts numbers from 0 (black) to 1 (white)

% Frame Maker "printer code" textrect puts x y w h on stack

/greyvalue 0 def
/height exch def
/width exch def
/ypos exch def
/xpos exch def

gsave

width 2 div height 10.5 div translate
width 10.5 div height 10.5 div scale 
45 rotate

/Uchar {
		newpath
		-.1 0 moveto
		0 0 .1 180 360 arc
		0 2.9 rlineto
		.8 0 rlineto
		0 -2.9 rlineto
		0 0 .9 0 180 arcn
		0 2.9 rlineto
		.8 0 rlineto
		closepath
		greyvalue setgray
		fill
		} def
/2Uchar { Uchar gsave 4 4 translate Uchar grestore
		} def
 4 { 2Uchar 6 0 translate 90 rotate } repeat
    
grestore


ENDPRINTCODE
96.54 739.11 131.52 750 R
7 X
V
0 X
-96.54 -739.11 34.98 10.89 BEGINPRINTCODE

% This is the Sun logo. For best results, print on a LaserWriter Plus.
(sun) 1 
/fnt /Palatino-Bold findfont def
/mode exch def
/printme exch def
/h exch def 
/w exch def 
/y exch def 
/x exch def
0 0 moveto
fnt setfont
/wsize w printme stringwidth 
	pop div def
/hsize h (X) true charpath flattenpath
	pathbbox /t exch def pop pop pop t
	div def
mode 1 eq {/hsize wsize def} if
mode 2 eq {/wsize hsize def} if
fnt [wsize 0 0 hsize 0 0]	 makefont setfont
printme show


ENDPRINTCODE
96.54 734.16 131.19 737.46 R
7 X
V
0 X
-96.54 -734.16 34.65 3.3 BEGINPRINTCODE
(microsystems) 1 
/fnt /Helvetica findfont def
/mode exch def
/printme exch def
/h exch def 
/w exch def 
/y exch def 
/x exch def
0 0 moveto
fnt setfont
/wsize w printme stringwidth 
	pop div def
/hsize h (X) true charpath flattenpath
	pathbbox /t exch def pop pop pop t
	div def
mode 1 eq {/hsize wsize def} if
mode 2 eq {/wsize hsize def} if
fnt [wsize 0 0 hsize 0 0]	 makefont setfont
printme show


ENDPRINTCODE
541 722.25 71 722.25 2 L
3 H
2 Z
N
540.5 719 71.5 719 2 L
4 H
3 X
N
FMENDPAGE
%%EndPage: "1" 10
%%Page: "2" 10
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 32.67 540 42.67 R
V
72 36 540 47 R
V
0 F
0 X
(The XView/NeWS Library) 72 39.67 T
(Sun Preliminary \050subject to change\051) 226.36 39.67 T
(2) 534.51 39.67 T
72 72 297 720 R
7 X
V
1 F
0 X
(Attribute Summary) 72 708 T
7 F
(PSCANV) 72 675 T
(AS_CLIPRECTS) 121.09 675 T
8 F
(Sets the clipping for an ) 90 657.33 T
9 F
(XV) 185.22 657.33 T
(ie) 196.69 657.33 T
8 F
(w/) 203.91 657.33 T
9 F
(NeWS) 213.9 657.33 T
8 F
( canvas. Any ) 238.33 657.33 T
(subsequent ) 90 645.33 T
9 F
(NeWS) 136.91 645.33 T
8 F
( rendering operations will be ) 161.34 645.33 T
(clipped to this region. Input is an ) 90 633.33 T
9 F
(XV) 224.37 633.33 T
(iew) 235.84 633.33 T
8 F
( rectangle ) 249.72 633.33 T
(list, with the special value ) 90 621.33 T
10 F
(NULL) 196.6 621.33 T
8 F
( meaning no extra ) 220.59 621.33 T
(clipping is to be done.) 90 609.33 T
(Default:) 90 587.33 T
10 F
(NULL) 135 587.33 T
8 F
(T) 90 575.33 T
(ype:) 95.41 575.33 T
10 F
(Xv_rectlist) 135 575.33 T
8 F
(Procs:) 90 563.33 T
10 F
(create, set) 135 563.33 T
7 F
(PSCANV) 72 533 T
(AS_NEWST) 121.09 533 T
(OKEN) 187.51 533 T
8 F
(Returns the unique ) 90 515.33 T
9 F
(NeWS) 168.01 515.33 T
8 F
( identi\336er for the given ) 192.43 515.33 T
(PSCANV) 90 503.33 T
(AS. See ) 128.14 503.33 T
10 F
(pscanvas_is_token\050\051) 162.84 503.33 T
8 F
(, ) 276.78 503.33 T
10 F
-2.23 (ps_setcanvas\050\051) 90 491.33 P
8 F
-0.93 ( in) 173.95 491.33 P
9 F
-0.93 ( Summary of Pr) 183.3 491.33 P
-0.93 (ocedur) 243.16 491.33 P
-0.93 (es and ) 270.54 491.33 P
(Macr) 90 479.33 T
(os) 111.28 479.33 T
8 F
(T) 90 457.33 T
(ype:) 95.41 457.33 T
10 F
(NeWStoken) 135 457.33 T
8 F
(Procs:) 90 445.33 T
10 F
(get) 135 445.33 T
7 F
(PSCANV) 72 415 T
(AS_REP) 121.09 415 T
(AINT_PROC) 168.19 415 T
8 F
(Names a procedure called when then PSCANV) 90 397.33 T
(AS ) 278.01 397.33 T
(has been damaged and must be repaired. See ) 90 385.33 T
10 F
(pscanvas_repaint_proc\050\051) 90 373.33 T
8 F
( in) 227.92 373.33 T
9 F
( Summary of ) 238.2 373.33 T
(Pr) 90 361.33 T
(ocedur) 99.62 361.33 T
(es and Macr) 127.01 361.33 T
(os) 176.6 361.33 T
8 F
(Default:) 90 339.33 T
10 F
(NULL) 135 339.33 T
8 F
(Procs:) 90 327.33 T
10 F
(create, get, set) 135 327.33 T
7 F
(PSCANV) 72 297 T
(AS_RESIZE_PROC) 121.09 297 T
8 F
(Names a procedure called when the PSCANV) 90 279.34 T
(AS ) 273.01 279.34 T
(width or height changes. ) 90 267.34 T
-0.22 (See ) 90 255.34 P
10 F
-0.53 (pscanvas_repaint_proc\050\051) 106.71 255.34 P
8 F
-0.22 ( in ) 244.64 255.34 P
9 F
-0.22 (Summary ) 256.97 255.34 P
(of Pr) 90 243.34 T
(ocedur) 109.9 243.34 T
(es and Macr) 137.28 243.34 T
(os) 186.88 243.34 T
8 F
(Default:) 90 221.34 T
10 F
(NULL) 135 221.34 T
8 F
(Procs:) 90 209.34 T
10 F
(create, get, set) 135 209.34 T
7 F
(PSCANV) 72 179 T
(AS_SYNC) 121.09 179 T
8 F
(Speci\336es whether ) 90 161.34 T
9 F
(XV) 163.28 161.34 T
(iew) 174.75 161.34 T
8 F
( will periodically ) 188.64 161.34 T
(synchronize ) 90 149.34 T
9 F
(X) 140.79 149.34 T
8 F
( and ) 146.9 149.34 T
9 F
(NeWS) 166.33 149.34 T
8 F
(.) 190.76 149.34 T
(Default:) 90 127.34 T
10 F
(TRUE) 135 127.34 T
8 F
(T) 90 115.34 T
(ype:) 95.41 115.34 T
10 F
(int) 135 115.34 T
8 F
(Procs:) 90 103.34 T
10 F
(create, get, set) 135 103.34 T
315 72 540 720 R
7 X
V
1 F
0 X
(Data T) 315 708 T
(ypes) 368.65 708 T
7 F
(PScanvas) 315 675 T
4 F
-0.58 (Handle to an opaque structure ) 396 675 P
(that describes a ) 396 661 T
5 F
(XV) 472.94 661 T
(iew/NeWS) 486.71 661 T
4 F
( ) 536.01 661 T
(canvas.) 396 647 T
7 F
(NeWStoken) 315 616 T
4 F
(Handle to a ) 396 616 T
5 F
(NeWS) 454.29 616 T
4 F
( object re-) 483.6 616 T
-0.07 (siding on the server) 396 602 P
-0.07 (, in ) 489.58 602 P
5 F
-0.07 (NeWS) 507.76 602 P
4 F
-0.07 ( ) 537.07 602 P
(terminology) 396 588 T
(, a ) 453.86 588 T
6 F
(usertoken) 468.18 588 T
4 F
(. ) 532.94 588 T
FMENDPAGE
%%EndPage: "2" 11
%%Page: "3" 11
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 32.67 540 42.67 R
V
72 36 540 47 R
V
0 F
0 X
(The XView/NeWS Library) 72 39.67 T
(Sun Preliminary \050subject to change\051) 226.36 39.67 T
(3) 534.51 39.67 T
72 90 540 720 R
7 X
V
1 F
0 X
(Summary of Procedures and Macros) 227.08 668 T
4 F
(This appendix lists the procedures and macros in alphabetical order and describes each of them ) 72 635 T
(brie\337y) 72 621 T
(. The description includes the call that uses the procedure or macro.) 102.54 621 T
7 F
(pscanvas_repaint_proc\050\051) 72 590 T
4 F
(Client-supplied callback procedure called when getting a ) 135 571 T
6 F
(WIN_REPAINT) 411.12 571 T
4 F
( event. ) 490.28 571 T
(Function is installed using the attribute) 135 557 T
6 F
( PSCANVAS_REPAINT_PROC) 321.9 557 T
4 F
(.) 480.22 557 T
11 F
(void) 153 533.67 T
(pscanvas_repaint_proc\050pscanvas, newstoken, display, xid, ) 153 520.67 T
(xrects\051) 288 507.67 T
(PScanvas) 198 494.67 T
(pscanvas;) 288 494.67 T
(NeWStoken) 198 481.67 T
(newstoken;) 288 481.67 T
(Display) 198 468.67 T
(*display;) 288 468.67 T
(Window) 198 455.67 T
(xid;) 288 455.67 T
(Xv_rectlist) 198 442.67 T
(*xrects;) 288 442.67 T
6 F
(newstoken) 135 424 T
4 F
( is a ) 199.76 424 T
5 F
(NeWS) 222.08 424 T
4 F
( usertoken identi\336er for the pscanvas window) 251.4 424 T
(. ) 469.12 424 T
6 F
(display) 475.12 424 T
4 F
( is ) 525.49 424 T
-0.72 (the display handle to the X1) 135 410 P
-0.72 (1 server connection. ) 265.88 410 P
6 F
-1.72 (xid) 363.65 410 P
4 F
-0.72 ( is the X1) 385.23 410 P
-0.72 (1 window identi\336er for ) 428.95 410 P
(the pscanvas. The ) 135 396 T
6 F
(xrects) 223.6 396 T
4 F
( structure contains an array of ) 266.77 396 T
6 F
(XRectangles) 412.65 396 T
4 F
( and a ) 491.8 396 T
-0.48 (count that speci\336es the repaint area for the pscanvas. This structure can be used to set ) 135 382 P
-0.07 (the attribute ) 135 368 P
6 F
-0.18 (PSCANVAS_CLIPRECTS) 195.48 368 P
4 F
-0.07 ( to use the X1) 325.01 368 P
-0.07 (1 damage as a clipping region. ) 390.89 368 P
(See Attribute Summary) 135 354 T
(.) 247.49 354 T
7 F
(pscanvas_resize_proc\050\051) 72 323 T
4 F
(Procedure called when pscanvas width or height changes. This function is installed ) 135 304 T
(using the attribute ) 135 290 T
6 F
(PSCANVAS_RESIZE_PROC) 224.62 290 T
4 F
(.) 368.54 290 T
11 F
(void) 153 266.67 T
(pscanvas_resize_proc\050pscanvas, width, height\051) 153 253.67 T
(PScanvas) 198 240.67 T
(pscanvas;) 288 240.67 T
(int) 198 227.67 T
(width;) 288 227.67 T
(int) 198 214.67 T
(height;) 288 214.67 T
7 F
(pscanvas_sync\050\051) 72 184 T
4 F
(Procedure for synchronizing the NeWS connection. This insures that the NeWS ) 135 165 T
-0.41 (connection has \322caught up.\323 Any errors ocurring on the NeWS side are collected and ) 135 151 P
(reported at this time, using ) 135 137 T
6 F
(xv_error\050\051) 266.26 137 T
4 F
(.) 338.22 137 T
11 F
(void) 153 113.67 T
(pscanvas_sync\050\051) 198 100.67 T
FMENDPAGE
%%EndPage: "3" 12
%%Page: "4" 12
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 32.67 540 42.67 R
V
72 36 540 47 R
V
0 F
0 X
(The XView/NeWS Library) 72 39.67 T
(Sun Preliminary \050subject to change\051) 226.36 39.67 T
(4) 534.51 39.67 T
72 90 540 720 R
7 X
V
7 F
0 X
(pscanvas_\337ip\050\051) 72 712 T
4 F
(Procedure for \337ipping over the transformation on a ) 135 693 T
6 F
(PSCANVAS) 382.82 693 T
4 F
(. This macro can be ) 440.39 693 T
-0.45 (called in the repaint procedure to insure that rendering will appear the correct side up.) 135 679 P
11 F
(void) 153 655.67 T
(pscanvas_\337ip\050\051) 153 642.67 T
1 F
(Additional ) 72 582 T
2 F
(CPS) 164.96 582 T
1 F
( Macros) 201.94 582 T
4 F
(Below are ) 72 546 T
5 F
(CPS) 123.96 546 T
4 F
( macros de\336ned for use with the ) 145.28 546 T
5 F
(XV) 302.17 546 T
(iew/NeWS library) 315.93 546 T
4 F
(. These macros supplement ) 400.77 546 T
(the existing set of ) 72 532 T
5 F
(CPS) 159.95 532 T
4 F
( macros de\336ned in ) 181.27 532 T
6 F
($OPENWINHOME/include/NeWS/psmacros.h ) 272.54 532 T
4 F
(and covered in Chapter 7 of the ) 72 518 T
5 F
(NeWS Pr) 226.21 518 T
(ogrammer) 270.07 518 T
(\325) 320.48 518 T
(s Guide) 322.93 518 T
6 F
(.) 359.9 518 T
7 F
(ps_clear_cliprects\050\051) 72 487 T
4 F
(Sets the clipping for the current canvas back to ) 135 468 T
6 F
(NULL) 363.16 468 T
4 F
(, or the original shape of the ) 391.95 468 T
-0.58 (window) 135 454 P
-0.58 (. This is equivalent to ) 172.86 454 P
6 F
-1.4 (xv_set\050pscanvas, PSCANVAS_CLIPRECTS, ) 276.55 454 P
-1.67 (NULL\051; ) 135 440 P
4 F
-0.7 (for the appropriate PScanvas. But this can be used for routines that are used ) 183.7 440 P
(on more than one PScanvas.) 135 426 T
11 F
(void) 153 402.67 T
(ps_clear_cliprects\050\051) 153 389.67 T
7 F
(ps_setcanvas\050\051) 72 359 T
4 F
(Sets the current ) 135 340 T
5 F
(NeWS) 212.61 340 T
4 F
( canvas to be the canvas pointed to by newstoken. Note: all ) 241.92 340 T
(repaint and resize procedures are bracketed with a ) 135 326 T
6 F
(ps_gsave) 378.11 326 T
4 F
(, the appropriate ) 435.67 326 T
6 F
(ps_setcanvas) 135 312 T
4 F
(, and a ) 221.35 312 T
6 F
(ps_grestore) 255.99 312 T
4 F
(, so it is not necessary to do any of these ) 335.15 312 T
(during normal circumstances.) 135 298 T
11 F
(void ) 153 274.67 T
(ps_setcanvas\050newstoken\051) 153 261.67 T
(NeWStoken) 198 248.67 T
(*newstoken;) 288 248.67 T
7 F
(ps_token_from_xid\050xid, newstoken\051) 72 218 T
4 F
( ) 135 199 T
6 F
(xid) 138 199 T
4 F
( is the X1) 159.59 199 T
(1 window identi\336er for a window) 205.45 199 T
(. This macro retrieves a ) 365.56 199 T
5 F
(NeWS) 481.47 199 T
4 F
( ) 510.78 199 T
(usertoken identi\336er for this window suitable for use with ) 135 185 T
6 F
(ps_setcanvas) 410.49 185 T
4 F
(. If the ) 496.84 185 T
(value given is invalid, the routine returns ) 135 171 T
6 F
(FALSE) 334.87 171 T
4 F
( and -1 is returned in the second ) 370.85 171 T
(ar) 135 157 T
(gument. ) 144.1 157 T
11 F
(Boolean ) 153 133.67 T
(ps_token_from_xid\050xid, newstoken\051) 153 120.67 T
(Window) 198 107.67 T
(xid;) 288 107.67 T
(NeWStoken) 198 94.67 T
(*newstoken;) 288 94.67 T
FMENDPAGE
%%EndPage: "4" 13
%%Page: "5" 13
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 32.67 540 42.67 R
V
72 36 540 47 R
V
0 F
0 X
(The XView/NeWS Library) 72 39.67 T
(Sun Preliminary \050subject to change\051) 226.36 39.67 T
(5) 534.51 39.67 T
72 72 540 720 R
7 X
V
7 F
0 X
(ps_token_from_code\050postscript_code, newstoken\051) 72 712 T
6 F
(newstoken) 135 693 T
4 F
( is set to a ) 199.76 693 T
5 F
(NeWS) 250.74 693 T
4 F
( usertoken for the PostScript object passed as the \336rst ) 280.05 693 T
(ar) 135 679 T
(gument \050a character string\051. The PostScript is checked \336rst to see if it is a single ) 144.1 679 T
-0.31 (object, if it is, ) 135 665 P
6 F
-0.74 (newstoken) 203.07 665 P
4 F
-0.31 ( is set to a usertoken pointing at it and the routine returns ) 267.83 665 P
6 F
(TRUE) 135 651 T
4 F
(. Otherwise the routine returns ) 163.78 651 T
6 F
(FALSE) 313.01 651 T
4 F
( and ) 348.99 651 T
6 F
(newstoken) 372.3 651 T
4 F
( is set to -1. This is ) 437.07 651 T
(useful for making tokens for canvases created by user) 135 637 T
(-de\336ned ) 392.55 637 T
5 F
(CPS) 434.85 637 T
4 F
( procedures: ) 456.17 637 T
6 F
(ps_token_from_code\050\322MyCanvas\323,&mycanvas\051) 135 623 T
11 F
(Boolean ) 153 599.67 T
(ps_token_from_code\050postscript_code, newstoken\051) 153 586.67 T
(char) 198 573.67 T
(*postscript_code;) 288 573.67 T
(NeWStoken) 198 560.67 T
(*newstoken;) 288 560.67 T
FMENDPAGE
%%EndPage: "5" 14
%%Page: "6" 14
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 32.67 540 42.67 R
V
72 36 540 47 R
V
0 F
0 X
(The XView/NeWS Library) 72 39.67 T
(Sun Preliminary \050subject to change\051) 226.36 39.67 T
(6) 534.51 39.67 T
1 F
(XV) 269.38 708 T
(iew/NeWS Library: Examples) 293.05 708 T
4 F
-0.41 (Below is a sample program that uses the X) 72 672 P
5 F
-0.41 (V) 273.9 672 P
-0.41 (iew/NeWS library) 280.34 672 P
4 F
-0.41 ( to create a PSCANV) 365.55 672 P
-0.41 (AS and display ) 464.95 672 P
(the word \322NeWS\323 using ) 72 658 T
5 F
(NeWS) 191.91 658 T
4 F
( PostScript rendering.) 221.22 658 T
7 F
(simple.c) 72 627 T
11 F
(/*) 153 613.67 T
-0.19 ( * simple.c -- a short example using the XView/NeWS library) 153 600.67 P
( * ) 153 587.67 T
-0.19 ( * A PSCANVAS is created, then NeWS PostScript rendering is) 153 574.67 P
( * used to display the word \322NeWS\323 at an angle.) 153 561.67 T
( * The text remains centered when the window is resized.) 153 548.67 T
( *) 153 535.67 T
( */) 153 522.67 T
(#include <xview/xview.h>) 153 509.67 T
(#include <xvps/pscanvas.h>) 153 496.67 T
(#include \322simple.h\323) 153 483.67 T
(Frame frame;) 153 470.67 T
(void pscanvas_repaint_proc\050pscanvas, newstoken, dpy, xid, ) 153 457.67 T
(xrects\051) 288 444.67 T
( PScanvas) 153 431.67 T
(pscanvas;) 288 431.67 T
( NeWStoken) 153 418.67 T
(newstoken;) 288 418.67 T
( Display) 153 405.67 T
(*dpy;) 288 405.67 T
( Window) 153 392.67 T
(xid;) 288 392.67 T
( Xv_xrectlist *xrects;) 153 379.67 T
({) 153 366.67 T
( xv_set\050pscanvas, PSCANVAS_CLIPRECTS, xrects, NULL\051;) 153 353.67 T
( pscanvas_\337ip\050\051) 153 340.67 T
( simple_setup\050\051;) 153 327.67 T
( ps_\336ndfont\050\322Bembo-Bold\323\051;) 153 314.67 T
( ps_scalefont\05097\051;) 153 301.67 T
( ps_setfont\050\051;) 153 288.67 T
( ps_show\050\322NeWS\323\051;) 153 275.67 T
(}) 153 262.67 T
(main\050argc, argv\051) 153 249.67 T
(int argc;) 288 236.67 T
(char **argv;) 288 223.67 T
({) 153 210.67 T
( xv_init\050XV_INIT_ARGS, argc, argv, 0\051;) 153 197.67 T
( frame=xv_create\050NULL, FRAME, ) 153 184.67 T
(FRAME_LABEL, \322XView/NeWSLibrary Example\323,) 216 171.67 T
( ) 153 158.67 T
(NULL\051;) 216 158.67 T
( xv_create\050frame, PSCANVAS,) 153 145.67 T
(PSCANVAS_REPAINT_PROC,) 288 132.67 T
(XV_VISUAL_CLASS, StaticColor,) 288 119.67 T
(pscanvas_repaint_proc,) 288 106.67 T
(NULL\051;) 288 93.67 T
( window_\336t\050frame\051;) 153 80.67 T
( xv_main_loop\050frame\051;) 153 67.67 T
(}) 153 54.67 T
FMENDPAGE
%%EndPage: "6" 15
%%Page: "7" 15
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 32.67 540 42.67 R
V
72 36 540 47 R
V
0 F
0 X
(The XView/NeWS Library) 72 39.67 T
(Sun Preliminary \050subject to change\051) 226.36 39.67 T
(7) 534.51 39.67 T
72 63 540 720 R
7 X
V
4 F
0 X
(Below is the ) 72 712 T
5 F
(CPS) 134.96 712 T
4 F
( routine needed for use with the C program simple.c. The canvas is \336lled with ) 156.29 712 T
-0.18 (white, and the coordinate space is rotated. In the C program, a string will be displayed and appear ) 72 698 P
(rotated.) 72 684 T
7 F
(simple.cps) 72 653 T
11 F
(cdef simple_setup\050\051) 153 639.67 T
(1 -1 scale ) 216 626.67 T
(% \337lip view) 432 626.67 T
(1 \336llcanvas) 216 613.67 T
(% clear canvas) 432 613.67 T
(.8 setgray) 216 600.67 T
(200 100 moveto) 216 587.67 T
(22 rotate) 216 574.67 T
(% 22 degrees) 432 574.67 T
7 F
(Compiling this example) 72 518 T
4 F
(T) 72 504 T
(o compile and test this example, run CPS against simple.cps and compile simple.c, linking with ) 78.49 504 T
(the XV) 72 490 T
(iew/NeWS library \050libxvps\051 and the CPS library:) 106.25 490 T
11 F
(cps simple.cps) 153 476.67 T
(cc -o simple simple.c -lxvps -lxview -lolgx -lX -lcps \134) 153 463.67 T
(-I$OPENWINHOME/include -L$OPENWINHOME/lib) 225 450.67 T
1 F
(Additional Notes) 72 416 T
12 F
(X and ) 72 384.67 T
13 F
(NeWS) 111.65 384.67 T
12 F
( Color) 148.19 384.67 T
4 F
(The X1) 72 365 T
(1 and ) 107.86 365 T
5 F
(NeWS) 137.17 365 T
4 F
( imaging models have dif) 166.48 365 T
(ferent models for allocating and using color) 288.19 365 T
(. Using ) 497.38 365 T
-0.85 (the XV) 72 351 P
-0.85 (iew/NeWS Library) 105.4 351 P
-0.85 (, either model may be used to manage your colors. It may be more natural ) 195.37 351 P
-0.73 (to use the ) 72 337 P
5 F
-0.73 (NeWS) 118.78 337 P
4 F
-0.73 ( StaticColor model, which allocates a ) 148.09 337 P
5 F
-0.73 (NeWS) 325.92 337 P
4 F
-0.73 ( Color Cube that all applications share. ) 355.23 337 P
(This model has more of the device-independant approach that PostScript uses. T) 72 323 T
(o use NeWS ) 456.89 323 T
-0.53 (StaticColor) 72 309 P
-0.53 (, ) 126.16 309 P
5 F
-0.53 (XV) 131.63 309 P
-0.53 (iew) 145.4 309 P
4 F
-0.53 ( allows you to set the \322V) 162.05 309 P
-0.53 (isual\323 or color model for speci\336c XV) 276.74 309 P
-0.53 (iew objects. T) 451.36 309 P
-0.53 (o do ) 517.08 309 P
(this set the ) 72 295 T
6 F
(XV_VISUAL_CLASS) 126.31 295 T
4 F
( attribute on your ) 234.25 295 T
6 F
(PSCANVAS) 320.19 295 T
4 F
(:) 377.76 295 T
11 F
( xv_create\050frame, PSCANVAS,) 153 281.67 T
(PSCANVAS_REPAINT_PROC,) 288 268.67 T
(XV_VISUAL_CLASS, StaticColor,) 288 255.67 T
(pscanvas_repaint_proc,) 288 242.67 T
(NULL\051;) 288 229.67 T
4 F
(Using ) 72 202 T
5 F
(XV) 103.65 202 T
(iew) 117.42 202 T
4 F
( to manage your colors is also possible, using the ) 134.08 202 T
6 F
(setpixel NeWS) 372.27 202 T
4 F
( operator) 465.82 202 T
(, and ) 508.3 202 T
(the ) 72 188 T
5 F
(XV) 89.65 188 T
(iew) 103.42 188 T
4 F
( cms operations. That approach is beyond the scope of this document. See your ) 120.08 188 T
5 F
(XV) 502.48 188 T
(iew) 516.25 188 T
4 F
( ) 532.91 188 T
(documentation and the ) 72 174 T
5 F
(NeWS 2.1 Pr) 184.26 174 T
(ogrammer) 246.11 174 T
(\325) 296.52 174 T
(s Guide ) 298.96 174 T
4 F
(for more infomation) 338.94 174 T
12 F
(Default T) 72 144.67 T
(ransformation Matrix) 128.1 144.67 T
4 F
-0.14 (The current default transform for a ) 72 125 P
6 F
-0.34 (PSCANVAS) 241.01 125 P
4 F
-0.14 ( is the NeWS co-ordinate space, with origin in the ) 298.58 125 P
-0.42 (bottom left corner) 72 111 P
-0.42 (. Unfortunately) 157.11 111 P
-0.42 (, this causes the rendering to appear upside down. T) 229.2 111 P
-0.42 (o \336x this, it is ) 473.43 111 P
-0.64 (currently the developers responsibility to set up an appropriate transformation matrix in the repaint ) 72 97 P
(procedure. The simplest method for doing this is to call ) 72 83 T
6 F
(pscanvas_\337ip\050\051) 340.83 83 T
4 F
( in your repaint ) 441.58 83 T
(procedure.) 72 69 T
FMENDPAGE
%%EndPage: "7" 16
%%Page: "8" 16
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 32.67 540 42.67 R
V
72 36 540 47 R
V
0 F
0 X
(The XView/NeWS Library) 72 39.67 T
(Sun Preliminary \050subject to change\051) 226.36 39.67 T
(8) 534.51 39.67 T
72 72 540 720 R
7 X
V
12 F
0 X
(Using the NeWS \322framebuffer\323) 72 712 T
4 F
-0.79 (NeWS programmers may want to use the X1) 72 698 P
-0.79 (1/NeWS root window) 281.53 698 P
-0.79 (, or \322framebuf) 384.43 698 P
-0.79 (fer\323 at some point. ) 450.9 698 P
(T) 72 684 T
(o do this, use XV) 78.49 684 T
(iew to get a valid XID for the root window) 161.39 684 T
(, and then use ) 366.13 684 T
6 F
(ps_token_from_xid\050\051) 72 670 T
4 F
( to get NeWStoken for use with ) 208.73 670 T
6 F
(ps_setcanvas\050\051) 363.62 670 T
4 F
(.) 464.36 670 T
11 F
( frame = \050Frame\051xv_create\050NULL, FRAME,) 153 643.67 T
( ) 153 630.67 T
(XV_WIDTH, 100,) 216 630.67 T
( ) 153 617.67 T
(XV_HEIGHT, 100,) 216 617.67 T
( ) 153 604.67 T
(FRAME_LABEL, \322Base Frame\323,) 216 604.67 T
( ) 153 591.67 T
(NULL\051;) 216 591.67 T
( screen = xv_get\050frame, XV_SCREEN\051;) 153 565.67 T
( root = xv_get\050screen, XV_ROOT\051;) 153 552.67 T
( xid = \050XID\051xv_get\050root, XV_XID\051;) 153 539.67 T
( ps_token_from_xid\050xid,&framebuffer\051;) 153 526.67 T
1 F
(T) 72 466 T
(rademarks and Copyright Notices) 82 466 T
11 F
( ) 153 450.67 T
5 F
-0.34 (NeWS, X1) 72 437 P
-0.34 (1/NeWS) 119.4 437 P
4 F
-0.34 ( and ) 158.05 437 P
5 F
-0.34 (XV) 180.68 437 P
-0.34 (iew) 194.45 437 P
4 F
-0.34 ( are trademarks of Sun Microsystems, Inc. Sun W) 211.11 437 P
-0.34 (rokstation, Sun Mi-) 447.06 437 P
(crosystems and the Sun logo ) 72 423 T
( are registered trademarks of Sun Microsystems, Inc.) 240.74 423 T
-0.28 (PostScript is a registered trademark of Adobe Systems. Adobe owns copyrights related to thePost-) 72 395 P
-0.16 (Script language and the PostScript interpreter) 72 381 P
-0.16 (. The trademark PststScript is used herein to refer to ) 288.74 381 P
(the material supplied by Adobe or to programs written in the PostScript language as de\336ned by ) 72 367 T
(Adobe.) 72 353 T
(The X W) 72 325 T
(indow System is a trademark of Massachusetts Institute of T) 116.15 325 T
(echnology) 405.45 325 T
212.25 405 240.74 432 C
212.25 405 240.74 432 R
7 X
0 K
V
213.16 406.67 237.58 431.09 R
V
0 X
-213.16 -406.67 24.42 24.42 BEGINPRINTCODE
% Sun Logo for Frame Maker
%
% and modified to scale to fill bounding textrect
% 
% "greyvalue" accepts numbers from 0 (black) to 1 (white)

% Frame Maker "printer code" textrect puts x y w h on stack

/greyvalue 0 def
/height exch def
/width exch def
/ypos exch def
/xpos exch def

gsave

width 2 div height 10.5 div translate
width 10.5 div height 10.5 div scale 
45 rotate

/Uchar {
		newpath
		-.1 0 moveto
		0 0 .1 180 360 arc
		0 2.9 rlineto
		.8 0 rlineto
		0 -2.9 rlineto
		0 0 .9 0 180 arcn
		0 2.9 rlineto
		.8 0 rlineto
		closepath
		greyvalue setgray
		fill
		} def
/2Uchar { Uchar gsave 4 4 translate Uchar grestore
		} def
 4 { 2Uchar 6 0 translate 90 rotate } repeat
    
grestore


ENDPRINTCODE
0 0 612 792 C
FMENDPAGE
%%EndPage: "8" 17
%%Trailer
%%BoundingBox: 0 0 612 792
%%Pages: 16 1
%%DocumentFonts: Times-Italic
%%+ Helvetica-Bold
%%+ Helvetica-BoldOblique
%%+ Times-Roman
%%+ Courier
%%+ Times-Bold
%%+ Times-BoldItalic
