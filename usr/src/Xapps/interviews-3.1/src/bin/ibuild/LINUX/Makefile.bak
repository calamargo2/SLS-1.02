# Makefile generated by imake - do not edit!
# $XConsortium: imake.c,v 1.65 91/07/25 17:50:17 rws Exp $

# Read "InterViews/template" to understand how this Makefile was generated.
# Edit <InterViews/arch.def> to add support for a new platform.
# Edit <InterViews/iv-1.cf> to change platform-specific parameters.
# Edit <InterViews/local.def> to change site-specific parameters.
# Edit <Imakefile> to change actions that make should perform.

# architecture:  Linux

# $Header: /home/x_cvs/mit/config/x386.cf,v 1.59 1993/02/08 22:11:15 dawes Exp $
# platform:  $XConsortium: x386.cf,v 1.7 91/08/16 19:30:10 gildea Exp $

#  --------------------------------------------------------------------
#  X386Conf.tmpl  -- configuration parameters for X386
#  This file is automatically generated -- DO NOT EDIT
#  --------------------------------------------------------------------

         X386SRC = $(SERVERSRC)/ddx/x386
    VGADRIVERSRC = $(X386SRC)/vga256/drivers
   VGA2DRIVERSRC = $(X386SRC)/vga2/drivers
   HGA2DRIVERSRC = $(X386SRC)/hga2/drivers
     RENDERERSRC = $(FONTSRC)/lib/font
 RENDERERCONFOBJ = $(RENDERERSRC)/fontfile/rendererConf.o
RENDERERCONFSUBDIR = $(RENDERERSRC)/fontfile
         VGAOBJS =                    $(VGADRIVERSRC)/et4000/et4000.o                    $(VGADRIVERSRC)/et3000/et3000.o                    $(VGADRIVERSRC)/pvga1/pvga1.o                    $(VGADRIVERSRC)/gvga/gvga.o                    $(VGADRIVERSRC)/ati/ati.o                    $(VGADRIVERSRC)/tvga8900/tvga8900.o

      VGASUBDIRS =                    et4000                    et3000                    pvga1                    gvga                    ati                    tvga8900

        VGA2OBJS =                    $(VGA2DRIVERSRC)/et4000/et4000.o                    $(VGA2DRIVERSRC)/et3000/et3000.o                    $(VGA2DRIVERSRC)/pvga1/pvga1.o                    $(VGA2DRIVERSRC)/gvga/gvga.o                    $(VGA2DRIVERSRC)/tvga8900/tvga8900.o                    $(VGA2DRIVERSRC)/generic/generic.o

     VGA2SUBDIRS =                    et4000                    et3000                    pvga1                    gvga                    tvga8900                    generic

        HGA2OBJS =                    $(HGA2DRIVERSRC)/hga6845/hga6845.o

     HGA2SUBDIRS =                    hga6845

    RENDERERLIBS =                    $(RENDERERSRC)/Speedo/libSpeedo.a                    $(RENDERERSRC)/Type1/libType1.a

 RENDERERSUBDIRS =                    Speedo                    Type1

      VGACONFOBJ = $(X386SRC)/vga256/vga256Conf.o
   VGACONFSUBDIR = $(X386SRC)/vga256
        VGABUILD = -DBUILD_VGA256

    X386CONFOBJS = $(VGACONFOBJ)
 X386CONFSUBDIRS = $(VGACONFSUBDIR)

 X386SCREENFLAGS = $(VGA2BUILD) $(HGA2BUILD) $(VGABUILD)

# operating system:  		Linux 	(Usenet)

              SHELL = /bin/sh

              IMAKE = imake
         IMAKEFLAGS = \
	-T "InterViews/template"\
	-I$(CONFIGSRC) -I$(XCONFIGDIR)\
	$(SPECIAL_IMAKEFLAGS)
 SPECIAL_IMAKEFLAGS = -f $(SRC)/Imakefile -DInObjectCodeDir
             DEPEND = makedepend
     DEPEND_CCFLAGS = $(CCDEFINES) $(CCINCLUDES)
               MAKE = make
           PASSARCH = ARCH="$(ARCH)" SPECIAL_IMAKEFLAGS="$(SPECIAL_IMAKEFLAGS)"
          ARCHORCPU = Linux
               ARCH = $(ARCHORCPU)$(SPECIAL_ARCH)
       SPECIAL_ARCH =

           CCDRIVER = g++
           CCSUFFIX = c
                SRC = ..
              SLASH = /
               SRCS = $(SRC)$(SLASH)*.$(CCSUFFIX)
               OBJS = *.o
               AOUT = a.out

            CCFLAGS = $(APP_CCFLAGS) $(IV_CCFLAGS) $(EXTRA_CCFLAGS)
         IV_CCFLAGS = \
	\
	\
	$(SHARED_CCFLAGS)\
	$(CCDEFINES)\
	$(CCINCLUDES)
      DEBUG_CCFLAGS = -g
   OPTIMIZE_CCFLAGS = -O2
     SHARED_CCFLAGS =
      EXTRA_CCFLAGS = -m486 -DNO_ASM

          CCDEFINES = $(APP_CCDEFINES) $(IV_CCDEFINES) $(EXTRA_CCDEFINES)
       IV_CCDEFINES = $(LANGUAGE_CCDEFINES) $(BACKWARD_CCDEFINES)
 LANGUAGE_CCDEFINES = -D__cplusplus
 BACKWARD_CCDEFINES =
    EXTRA_CCDEFINES = 		-D_POSIX_SOURCE -D_BSD_SOURCE -D_GNU_SOURCE 	-Dlinux

         CCINCLUDES = $(APP_CCINCLUDES) $(IV_CCINCLUDES) $(EXTRA_CCINCLUDES)
      IV_CCINCLUDES = \
	$(BACKWARD_CCINCLUDES)\
	$(TOP_CCINCLUDES)\
	$(X_CCINCLUDES)
BACKWARD_CCINCLUDES =
     TOP_CCINCLUDES = -I$(INCSRC)
       X_CCINCLUDES =
   EXTRA_CCINCLUDES = -I/usr/g++-include

          CCLDFLAGS = $(APP_CCLDFLAGS) $(IV_CCLDFLAGS) $(EXTRA_CCLDFLAGS)
       IV_CCLDFLAGS = \
	\
	\
	$(NONSHARED_CCLDFLAGS)
NONSHARED_CCLDFLAGS =
    EXTRA_CCLDFLAGS =

          CCDEPLIBS = $(APP_CCDEPLIBS) $(IV_CCDEPLIBS) $(EXTRA_CCDEPLIBS)
       IV_CCDEPLIBS = \
	$(DEPLIBUNIDRAW)\
	$(DEPLIBGRAPHIC)\
	$(DEPLIBIV)\
	$(DEPLIBXEXT)\
	$(DEPLIBX11)\
	$(DEPLIBM)
    EXTRA_CCDEPLIBS =

           CCLDLIBS = $(APP_CCLDLIBS) $(IV_CCLDLIBS) $(EXTRA_CCLDLIBS)
        IV_CCLDLIBS = \
	$(LIBDIRPATH)\
	$(LDLIBUNIDRAW)\
	$(LDLIBGRAPHIC)\
	$(LDLIBIV)\
	$(XLIBDIRPATH)\
	$(LDLIBXEXT)\
	$(LDLIBX11)\
	$(LDLIBM)\
	$(ABSLIBDIRPATH)
     EXTRA_CCLDLIBS = -lg++

            INSTALL = 	sh $(SCRIPTSRC)/install.sh
       INSTPGMFLAGS = -s
       INSTBINFLAGS = -m 0755
       INSTUIDFLAGS = -m 4755
       INSTLIBFLAGS = -m 0644
       INSTINCFLAGS = -m 0444
       INSTMANFLAGS = -m 0444
       INSTDATFLAGS = -m 0444
      INSTKMEMFLAGS = -m 4755

                 AR = ar clq
                 AS = as
                 CP = cp
                CPP = 		/lib/cpp $(EXTRA_CCDEFINES)
      PREPROCESSCMD = 	/lib/cpp $(EXTRA_CCDEFINES)
                 LD = ld
                 LN = ln -s
          MKDIRHIER = $(SHELL) $(SCRIPTSRC)/mkdirhier.sh
                 MV = mv
             RANLIB = ranlib
    RANLIBINSTFLAGS =
                 RM = rm -f
             RM_CMD = $(RM) ,* .emacs_* *..c *.BAK *.CKP *.a *.bak *.ln *.o a.out core errs make.log make.out tags TAGS
              TROFF = psroff

                TOP = ../../../../.
        CURRENT_DIR = ./src/bin/ibuild/LINUX

              IVSRC = $(TOP)/src
             BINSRC = $(IVSRC)/bin
          CONFIGSRC = $(IVSRC)/config
             INCSRC = $(IVSRC)/include
             LIBSRC = $(IVSRC)/lib
             MANSRC = $(IVSRC)/man
          SCRIPTSRC = $(BINSRC)/scripts

             BINDIR = $(TOP)/installed/bin/$(ARCH)
          CONFIGDIR = $(TOP)/installed/config
             INCDIR = $(TOP)/installed/include
             LIBDIR = $(TOP)/installed/lib/$(ARCH)
          LIBALLDIR = $(TOP)/installed/lib/all
             MANDIR = $(TOP)/installed/man

       ABSCONFIGDIR = /interviews/config
          ABSLIBDIR = /interviews/lib/$(ARCH)
       ABSLIBALLDIR = /interviews/lib/all
         XCONFIGDIR = /usr/lib/X11/config
            XINCDIR = /usr/include
            XLIBDIR = /usr/lib
          PSFONTDIR = /usr/lib/ps

all::

Makefile::
	-@if [ -f Makefile ]; then \
	$(RM) Makefile.bak; \
	$(MV) Makefile Makefile.bak; \
	else exit 0; fi
	$(IMAKE) $(IMAKEFLAGS) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT_DIR)
Makefiles::
depend::
install::

clean::
	@$(RM_CMD) "#"*

# -------------------------------------------------------------------------

#
# ibuild - InterViews user interface builder
#

 DEPLIBUNIDRAW = $(LIBSRC)/Unidraw/$(ARCH)/libUnidraw.a
 DEPLIBIV = $(LIBSRC)/IV/$(ARCH)/libIV.a
 DEPLIBXEXT =
 DEPLIBX11 =
 DEPLIBM =

 LIBDIRPATH =
 LDLIBUNIDRAW = -L$(LIBSRC)/Unidraw/$(ARCH) -lUnidraw
 LDLIBIV = -L$(LIBSRC)/IV/$(ARCH) -lIV
 XLIBDIRPATH =
 LDLIBXEXT = -lXext
 LDLIBX11 = -lX11
 LDLIBM = -lm
 ABSLIBDIRPATH =

 BACKWARD_CCDEFINES = -Div2_6_compatible
BACKWARD_CCINCLUDES = -I$(INCSRC)/IV-2_6

PROGRAM	= ibuild

all:: $(AOUT)

$(AOUT):  $(CCDEPLIBS)
	-@if [ ! -w $@ ]; then $(RM) $@; else exit 0; fi
	$(CCDRIVER) $(CCLDFLAGS) -o $@ $(OBJS) $(CCLDLIBS)

install:: $(AOUT)
	-@if [ -d $(BINDIR) ]; then exit 0; \
	else (set -x; $(MKDIRHIER) $(BINDIR)); fi
	$(INSTALL) -c $(INSTPGMFLAGS) $(INSTBINFLAGS) $(AOUT) $(BINDIR)/$(PROGRAM)
	$(RM) $(AOUT)

depend::
	$(DEPEND) -s "# DO NOT DELETE" -- $(DEPEND_CCFLAGS) -- $(SRCS)

$(AOUT): ibadjuster.o
ibadjuster.o: $(SRC)/ibadjuster.$(CCSUFFIX)
	@$(RM) ibadjuster.o ibadjuster..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibadjuster.$(CCSUFFIX)

$(AOUT): ibbitmap.o
ibbitmap.o: $(SRC)/ibbitmap.$(CCSUFFIX)
	@$(RM) ibbitmap.o ibbitmap..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibbitmap.$(CCSUFFIX)

$(AOUT): ibborder.o
ibborder.o: $(SRC)/ibborder.$(CCSUFFIX)
	@$(RM) ibborder.o ibborder..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibborder.$(CCSUFFIX)

$(AOUT): ibbox.o
ibbox.o: $(SRC)/ibbox.$(CCSUFFIX)
	@$(RM) ibbox.o ibbox..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibbox.$(CCSUFFIX)

$(AOUT): ibbutton.o
ibbutton.o: $(SRC)/ibbutton.$(CCSUFFIX)
	@$(RM) ibbutton.o ibbutton..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibbutton.$(CCSUFFIX)

$(AOUT): ibcatalog.o
ibcatalog.o: $(SRC)/ibcatalog.$(CCSUFFIX)
	@$(RM) ibcatalog.o ibcatalog..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibcatalog.$(CCSUFFIX)

$(AOUT): ibcmds.o
ibcmds.o: $(SRC)/ibcmds.$(CCSUFFIX)
	@$(RM) ibcmds.o ibcmds..c
	$(CCDRIVER) -I$(INCSRC) -DCC_SUFFIX='".$(CCSUFFIX)"' $(CCFLAGS) -c $(SRC)/ibcmds.$(CCSUFFIX)

$(AOUT): ibcode.o
ibcode.o: $(SRC)/ibcode.$(CCSUFFIX)
	@$(RM) ibcode.o ibcode..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibcode.$(CCSUFFIX)

$(AOUT): ibcommandctrl.o
ibcommandctrl.o: $(SRC)/ibcommandctrl.$(CCSUFFIX)
	@$(RM) ibcommandctrl.o ibcommandctrl..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibcommandctrl.$(CCSUFFIX)

$(AOUT): ibcomp.o
ibcomp.o: $(SRC)/ibcomp.$(CCSUFFIX)
	@$(RM) ibcomp.o ibcomp..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibcomp.$(CCSUFFIX)

$(AOUT): ibcreator.o
ibcreator.o: $(SRC)/ibcreator.$(CCSUFFIX)
	@$(RM) ibcreator.o ibcreator..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibcreator.$(CCSUFFIX)

$(AOUT): ibctrl.o
ibctrl.o: $(SRC)/ibctrl.$(CCSUFFIX)
	@$(RM) ibctrl.o ibctrl..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibctrl.$(CCSUFFIX)

$(AOUT): ibdeck.o
ibdeck.o: $(SRC)/ibdeck.$(CCSUFFIX)
	@$(RM) ibdeck.o ibdeck..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibdeck.$(CCSUFFIX)

$(AOUT): ibdialog.o
ibdialog.o: $(SRC)/ibdialog.$(CCSUFFIX)
	@$(RM) ibdialog.o ibdialog..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibdialog.$(CCSUFFIX)

$(AOUT): ibdialogs.o
ibdialogs.o: $(SRC)/ibdialogs.$(CCSUFFIX)
	@$(RM) ibdialogs.o ibdialogs..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibdialogs.$(CCSUFFIX)

$(AOUT): ibed.o
ibed.o: $(SRC)/ibed.$(CCSUFFIX)
	@$(RM) ibed.o ibed..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibed.$(CCSUFFIX)

$(AOUT): ibeditor.o
ibeditor.o: $(SRC)/ibeditor.$(CCSUFFIX)
	@$(RM) ibeditor.o ibeditor..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibeditor.$(CCSUFFIX)

$(AOUT): ibellipse.o
ibellipse.o: $(SRC)/ibellipse.$(CCSUFFIX)
	@$(RM) ibellipse.o ibellipse..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibellipse.$(CCSUFFIX)

$(AOUT): ibfbrowser.o
ibfbrowser.o: $(SRC)/ibfbrowser.$(CCSUFFIX)
	@$(RM) ibfbrowser.o ibfbrowser..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibfbrowser.$(CCSUFFIX)

$(AOUT): ibframe.o
ibframe.o: $(SRC)/ibframe.$(CCSUFFIX)
	@$(RM) ibframe.o ibframe..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibframe.$(CCSUFFIX)

$(AOUT): ibglue.o
ibglue.o: $(SRC)/ibglue.$(CCSUFFIX)
	@$(RM) ibglue.o ibglue..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibglue.$(CCSUFFIX)

$(AOUT): ibgraphic.o
ibgraphic.o: $(SRC)/ibgraphic.$(CCSUFFIX)
	@$(RM) ibgraphic.o ibgraphic..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibgraphic.$(CCSUFFIX)

$(AOUT): ibgrblock.o
ibgrblock.o: $(SRC)/ibgrblock.$(CCSUFFIX)
	@$(RM) ibgrblock.o ibgrblock..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibgrblock.$(CCSUFFIX)

$(AOUT): ibgrcomp.o
ibgrcomp.o: $(SRC)/ibgrcomp.$(CCSUFFIX)
	@$(RM) ibgrcomp.o ibgrcomp..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibgrcomp.$(CCSUFFIX)

$(AOUT): ibinteractor.o
ibinteractor.o: $(SRC)/ibinteractor.$(CCSUFFIX)
	@$(RM) ibinteractor.o ibinteractor..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibinteractor.$(CCSUFFIX)

$(AOUT): ibkybd.o
ibkybd.o: $(SRC)/ibkybd.$(CCSUFFIX)
	@$(RM) ibkybd.o ibkybd..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibkybd.$(CCSUFFIX)

$(AOUT): ibline.o
ibline.o: $(SRC)/ibline.$(CCSUFFIX)
	@$(RM) ibline.o ibline..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibline.$(CCSUFFIX)

$(AOUT): ibmanips.o
ibmanips.o: $(SRC)/ibmanips.$(CCSUFFIX)
	@$(RM) ibmanips.o ibmanips..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibmanips.$(CCSUFFIX)

$(AOUT): ibmenu.o
ibmenu.o: $(SRC)/ibmenu.$(CCSUFFIX)
	@$(RM) ibmenu.o ibmenu..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibmenu.$(CCSUFFIX)

$(AOUT): ibmessage.o
ibmessage.o: $(SRC)/ibmessage.$(CCSUFFIX)
	@$(RM) ibmessage.o ibmessage..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibmessage.$(CCSUFFIX)

$(AOUT): ibpanelctrl.o
ibpanelctrl.o: $(SRC)/ibpanelctrl.$(CCSUFFIX)
	@$(RM) ibpanelctrl.o ibpanelctrl..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibpanelctrl.$(CCSUFFIX)

$(AOUT): ibpanner.o
ibpanner.o: $(SRC)/ibpanner.$(CCSUFFIX)
	@$(RM) ibpanner.o ibpanner..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibpanner.$(CCSUFFIX)

$(AOUT): ibpolygon.o
ibpolygon.o: $(SRC)/ibpolygon.$(CCSUFFIX)
	@$(RM) ibpolygon.o ibpolygon..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibpolygon.$(CCSUFFIX)

$(AOUT): ibprocs.o
ibprocs.o: $(SRC)/ibprocs.$(CCSUFFIX)
	@$(RM) ibprocs.o ibprocs..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibprocs.$(CCSUFFIX)

$(AOUT): ibprops.o
ibprops.o: $(SRC)/ibprops.$(CCSUFFIX)
	@$(RM) ibprops.o ibprops..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibprops.$(CCSUFFIX)

$(AOUT): ibraster.o
ibraster.o: $(SRC)/ibraster.$(CCSUFFIX)
	@$(RM) ibraster.o ibraster..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibraster.$(CCSUFFIX)

$(AOUT): ibrect.o
ibrect.o: $(SRC)/ibrect.$(CCSUFFIX)
	@$(RM) ibrect.o ibrect..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibrect.$(CCSUFFIX)

$(AOUT): ibrubrect.o
ibrubrect.o: $(SRC)/ibrubrect.$(CCSUFFIX)
	@$(RM) ibrubrect.o ibrubrect..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibrubrect.$(CCSUFFIX)

$(AOUT): ibscene.o
ibscene.o: $(SRC)/ibscene.$(CCSUFFIX)
	@$(RM) ibscene.o ibscene..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibscene.$(CCSUFFIX)

$(AOUT): ibscroller.o
ibscroller.o: $(SRC)/ibscroller.$(CCSUFFIX)
	@$(RM) ibscroller.o ibscroller..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibscroller.$(CCSUFFIX)

$(AOUT): ibshaper.o
ibshaper.o: $(SRC)/ibshaper.$(CCSUFFIX)
	@$(RM) ibshaper.o ibshaper..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibshaper.$(CCSUFFIX)

$(AOUT): ibslider.o
ibslider.o: $(SRC)/ibslider.$(CCSUFFIX)
	@$(RM) ibslider.o ibslider..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibslider.$(CCSUFFIX)

$(AOUT): ibspline.o
ibspline.o: $(SRC)/ibspline.$(CCSUFFIX)
	@$(RM) ibspline.o ibspline..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibspline.$(CCSUFFIX)

$(AOUT): ibstencil.o
ibstencil.o: $(SRC)/ibstencil.$(CCSUFFIX)
	@$(RM) ibstencil.o ibstencil..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibstencil.$(CCSUFFIX)

$(AOUT): ibstrbrowser.o
ibstrbrowser.o: $(SRC)/ibstrbrowser.$(CCSUFFIX)
	@$(RM) ibstrbrowser.o ibstrbrowser..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibstrbrowser.$(CCSUFFIX)

$(AOUT): ibstred.o
ibstred.o: $(SRC)/ibstred.$(CCSUFFIX)
	@$(RM) ibstred.o ibstred..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibstred.$(CCSUFFIX)

$(AOUT): ibtext.o
ibtext.o: $(SRC)/ibtext.$(CCSUFFIX)
	@$(RM) ibtext.o ibtext..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibtext.$(CCSUFFIX)

$(AOUT): ibtextedit.o
ibtextedit.o: $(SRC)/ibtextedit.$(CCSUFFIX)
	@$(RM) ibtextedit.o ibtextedit..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibtextedit.$(CCSUFFIX)

$(AOUT): ibtoolpanel.o
ibtoolpanel.o: $(SRC)/ibtoolpanel.$(CCSUFFIX)
	@$(RM) ibtoolpanel.o ibtoolpanel..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibtoolpanel.$(CCSUFFIX)

$(AOUT): ibtools.o
ibtools.o: $(SRC)/ibtools.$(CCSUFFIX)
	@$(RM) ibtools.o ibtools..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibtools.$(CCSUFFIX)

$(AOUT): ibvars.o
ibvars.o: $(SRC)/ibvars.$(CCSUFFIX)
	@$(RM) ibvars.o ibvars..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibvars.$(CCSUFFIX)

$(AOUT): ibvarviews.o
ibvarviews.o: $(SRC)/ibvarviews.$(CCSUFFIX)
	@$(RM) ibvarviews.o ibvarviews..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibvarviews.$(CCSUFFIX)

$(AOUT): ibviewer.o
ibviewer.o: $(SRC)/ibviewer.$(CCSUFFIX)
	@$(RM) ibviewer.o ibviewer..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibviewer.$(CCSUFFIX)

$(AOUT): ibviewport.o
ibviewport.o: $(SRC)/ibviewport.$(CCSUFFIX)
	@$(RM) ibviewport.o ibviewport..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/ibviewport.$(CCSUFFIX)

$(AOUT): main.o
main.o: $(SRC)/main.$(CCSUFFIX)
	@$(RM) main.o main..c
	$(CCDRIVER)  $(CCFLAGS) -c $(SRC)/main.$(CCSUFFIX)

