I have been working on a menuing program that is driven from plain text
files, that I got from gatekeeper (volume 22).  It is slick, powerful,
and easy to use.  Best of all, I didn't write it :-)

I am setting it up so that Linux installation and administration
can be done from a menu driven environment.  Aside from reducing 
installation problems, it could also help new users learn "how to"
under Linux, because the commands are all freely viewable as text
files.  Additionally, the install script should be fully reversable
in that it can fully uninstall its software.  Finally, installation
can also install new menus which hook into the menu program!

I would like to see this used by the time Linux 1.0 hits the press.
Much of this is basically done already (roughly), and weighs in at
under the 50k range, including the context sensitive help, 
so inclusion on the root disk should not be a problem. But, 
in order to make it work, some concrete decisions need to 
be made.  Off the top of my head, the following:

1 - Create the directory /usr/linux for kernel source code

2 - All software distributed in tar archives that assume untarring from /

3 - All such archives contain a file /usr/install/XXXX.inst (XXXX=some 
	unique name) that can be invoked with no arguments after 
	untarring, to complete the installation, or with the argument
	"remove", to remove the package.

4 - Modify fdisk to allow using single commands from command line,
	to allow simplified hard disk setup.


Since I don't wish to get involved in yet another flame war, I 
thought I would pass this by you three first, since you are the keepers
of the biggest components, and solicit your opinions.
