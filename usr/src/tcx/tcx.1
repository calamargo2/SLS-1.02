.TH TCX 1 "19 March 1993"
.UC Melb
.SH NAME
tcx \- Transparantly compress executables
.SH SYNOPSIS
tcx filename
.SH DESCRIPTION
.B Tcx
will replace an executable with a compressed version of it that is still
capable of being executed.  The amount of savings will depend on the
compression algorithm configured for use by tcx.
An executable compressed with tcx can be run as per normal with (hopefully) no
side effects other than a minor delay in startup time.
.PP
Executables local to the system (not NFS mounted) are uncompressed in place
and recompressed again some time after it stops being used.  The standard
timeout is 1/2 an hour.
.PP
Executables residing on NFS mounted directores are unpacked to a directory local
to the system and run from there.  These executables lie around for about one
minute after disuse, after which time they get deleted.
.PP
All this action is transparant to the user, but executables residing on NFS
mounted filesystems actually get the benefit of not hanging, in the event of
paging activity, if the NFS server on which they live goes down.  This fact
will also improve the performance of executables on machines short of memory.
.SH SEE ALSO
untcx(1)
.SH CAVEATS
Tcx will try to maintain permissions but in order to allow execution
of a program on an NFS mounted filesystem to which another machine may
not have root access to, it also sets the read bits on the executable
corresponding to the execute bits.  This may be a slight security flaw
and if it causes you problems on particular executables, do not use it on them.
.PP
NFS mounted shell scripts which rely on `dirname $0` being set to something
meaningful will probably break, as the TCX system can't fool the shell
with a dummy argv[0] through the exec() call.
.PP
Tcx requires the corresponding untcx(1) program to be available otherwise
transparency is not assured.  Yell at your Systems Programmer if tcx'ed
executables fail to execute.
.SH BUGS
Tcx is still in beta test stage, so there are bound to be some.
Please report any bugs or "patch"-style bug fixes (or new system ports)
or even just suggested improvements, via email to slf@cs.mu.OZ.AU
.SH AUTHOR
Stewart Forster, University Of Melbourne, 1993
