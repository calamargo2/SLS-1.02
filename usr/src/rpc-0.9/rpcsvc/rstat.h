/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _RSTAT_H_RPCGEN
#define _RSTAT_H_RPCGEN

#include <rpc/rpc.h>

/*
 * Sun RPC is a product of Sun Microsystems, Inc. and is provided for
 * unrestricted use provided that this legend is included on all tape
 * media and as a part of the software program in whole or part.  Users
 * may copy or modify Sun RPC without charge, but are not authorized
 * to license or distribute it to anyone else except as part of a product or
 * program developed by the user or with the express written consent of
 * Sun Microsystems, Inc.
 *
 * SUN RPC IS PROVIDED AS IS WITH NO WARRANTIES OF ANY KIND INCLUDING THE
 * WARRANTIES OF DESIGN, MERCHANTIBILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE, OR ARISING FROM A COURSE OF DEALING, USAGE OR TRADE PRACTICE.
 *
 * Sun RPC is provided with no support and without any obligation on the
 * part of Sun Microsystems, Inc. to assist in its use, correction,
 * modification or enhancement.
 *
 * SUN MICROSYSTEMS, INC. SHALL HAVE NO LIABILITY WITH RESPECT TO THE
 * INFRINGEMENT OF COPYRIGHTS, TRADE SECRETS OR ANY PATENTS BY SUN RPC
 * OR ANY PART THEREOF.
 *
 * In no event will Sun Microsystems, Inc. be liable for any lost revenue
 * or profits or other special, indirect and consequential damages, even if
 * Sun has been advised of the possibility of such damages.
 *
 * Sun Microsystems, Inc.
 * 2550 Garcia Avenue
 * Mountain View, California  94043
 */
/*
 * Copyright (c) 1985, 1990 by Sun Microsystems, Inc.
 */

/* from @(#)rstat.x	1.9 91/03/11 TIRPC 1.0 */

#ifndef _rpcsvc_rstat_h
#define _rpcsvc_rstat_h

#ifndef FSCALE
/*
 * Scale factor for scaled integers used to count load averages.
 */
#define FSHIFT  8               /* bits to right of fixed binary point */
#define FSCALE  (1<<FSHIFT)

#endif /* ndef FSCALE */
#ifndef DST_NONE
#include <sys/time.h>          /* The time struct defined below is meant to */
#endif                         /* match struct timeval.                     */


#define RSTAT_CPUSTATES 4
#define RSTAT_DK_NDRIVE 4

struct rstat_timeval {
	u_int tv_sec;
	u_int tv_usec;
};
typedef struct rstat_timeval rstat_timeval;
#ifdef __cplusplus 
extern "C" bool_t xdr_rstat_timeval(XDR *, rstat_timeval*);
#elif __STDC__ 
extern  bool_t xdr_rstat_timeval(XDR *, rstat_timeval*);
#else /* Old Style C */ 
bool_t xdr_rstat_timeval();
#endif /* Old Style C */ 


struct statsvar {
	struct {
		u_int cp_time_len;
		int *cp_time_val;
	} cp_time;
	struct {
		u_int dk_xfer_len;
		int *dk_xfer_val;
	} dk_xfer;
	u_int v_pgpgin;
	u_int v_pgpgout;
	u_int v_pswpin;
	u_int v_pswpout;
	u_int v_intr;
	int if_ipackets;
	int if_ierrors;
	int if_opackets;
	int if_oerrors;
	int if_collisions;
	u_int v_swtch;
	long avenrun[3];
	rstat_timeval boottime;
	rstat_timeval curtime;
};
typedef struct statsvar statsvar;
#ifdef __cplusplus 
extern "C" bool_t xdr_statsvar(XDR *, statsvar*);
#elif __STDC__ 
extern  bool_t xdr_statsvar(XDR *, statsvar*);
#else /* Old Style C */ 
bool_t xdr_statsvar();
#endif /* Old Style C */ 


struct statstime {
	int cp_time[RSTAT_CPUSTATES];
	int dk_xfer[RSTAT_DK_NDRIVE];
	u_int v_pgpgin;
	u_int v_pgpgout;
	u_int v_pswpin;
	u_int v_pswpout;
	u_int v_intr;
	int if_ipackets;
	int if_ierrors;
	int if_oerrors;
	int if_collisions;
	u_int v_swtch;
	int avenrun[3];
	rstat_timeval boottime;
	rstat_timeval curtime;
	int if_opackets;
};
typedef struct statstime statstime;
#ifdef __cplusplus 
extern "C" bool_t xdr_statstime(XDR *, statstime*);
#elif __STDC__ 
extern  bool_t xdr_statstime(XDR *, statstime*);
#else /* Old Style C */ 
bool_t xdr_statstime();
#endif /* Old Style C */ 


struct statsswtch {
	int cp_time[RSTAT_CPUSTATES];
	int dk_xfer[RSTAT_DK_NDRIVE];
	u_int v_pgpgin;
	u_int v_pgpgout;
	u_int v_pswpin;
	u_int v_pswpout;
	u_int v_intr;
	int if_ipackets;
	int if_ierrors;
	int if_oerrors;
	int if_collisions;
	u_int v_swtch;
	u_int avenrun[3];
	rstat_timeval boottime;
	int if_opackets;
};
typedef struct statsswtch statsswtch;
#ifdef __cplusplus 
extern "C" bool_t xdr_statsswtch(XDR *, statsswtch*);
#elif __STDC__ 
extern  bool_t xdr_statsswtch(XDR *, statsswtch*);
#else /* Old Style C */ 
bool_t xdr_statsswtch();
#endif /* Old Style C */ 


struct stats {
	int cp_time[RSTAT_CPUSTATES];
	int dk_xfer[RSTAT_DK_NDRIVE];
	u_int v_pgpgin;
	u_int v_pgpgout;
	u_int v_pswpin;
	u_int v_pswpout;
	u_int v_intr;
	int if_ipackets;
	int if_ierrors;
	int if_oerrors;
	int if_collisions;
	int if_opackets;
};
typedef struct stats stats;
#ifdef __cplusplus 
extern "C" bool_t xdr_stats(XDR *, stats*);
#elif __STDC__ 
extern  bool_t xdr_stats(XDR *, stats*);
#else /* Old Style C */ 
bool_t xdr_stats();
#endif /* Old Style C */ 

int havedisk();

#endif /*!_rpcsvc_rstat_h*/

#define RSTATPROG ((u_long)100001)
#define RSTATVERS_VAR ((u_long)4)

#ifdef __cplusplus
#define RSTATPROC_STATS ((u_long)1)
extern "C" statsvar * rstatproc_stats_4(void *, CLIENT *);
extern "C" statsvar * rstatproc_stats_4_svc(void *, struct svc_req *);
#define RSTATPROC_HAVEDISK ((u_long)2)
extern "C" u_int * rstatproc_havedisk_4(void *, CLIENT *);
extern "C" u_int * rstatproc_havedisk_4_svc(void *, struct svc_req *);

#elif __STDC__
#define RSTATPROC_STATS ((u_long)1)
extern  statsvar * rstatproc_stats_4(void *, CLIENT *);
extern  statsvar * rstatproc_stats_4_svc(void *, struct svc_req *);
#define RSTATPROC_HAVEDISK ((u_long)2)
extern  u_int * rstatproc_havedisk_4(void *, CLIENT *);
extern  u_int * rstatproc_havedisk_4_svc(void *, struct svc_req *);

#else /* Old Style C */ 
#define RSTATPROC_STATS ((u_long)1)
extern  statsvar * rstatproc_stats_4();
extern  statsvar * rstatproc_stats_4_svc();
#define RSTATPROC_HAVEDISK ((u_long)2)
extern  u_int * rstatproc_havedisk_4();
extern  u_int * rstatproc_havedisk_4_svc();
#endif /* Old Style C */ 
#define RSTATVERS_TIME ((u_long)3)

#ifdef __cplusplus
extern "C" statstime * rstatproc_stats_3(void *, CLIENT *);
extern "C" statstime * rstatproc_stats_3_svc(void *, struct svc_req *);
extern "C" u_int * rstatproc_havedisk_3(void *, CLIENT *);
extern "C" u_int * rstatproc_havedisk_3_svc(void *, struct svc_req *);

#elif __STDC__
extern  statstime * rstatproc_stats_3(void *, CLIENT *);
extern  statstime * rstatproc_stats_3_svc(void *, struct svc_req *);
extern  u_int * rstatproc_havedisk_3(void *, CLIENT *);
extern  u_int * rstatproc_havedisk_3_svc(void *, struct svc_req *);

#else /* Old Style C */ 
extern  statstime * rstatproc_stats_3();
extern  statstime * rstatproc_stats_3_svc();
extern  u_int * rstatproc_havedisk_3();
extern  u_int * rstatproc_havedisk_3_svc();
#endif /* Old Style C */ 
#define RSTATVERS_SWTCH ((u_long)2)

#ifdef __cplusplus
extern "C" statsswtch * rstatproc_stats_2(void *, CLIENT *);
extern "C" statsswtch * rstatproc_stats_2_svc(void *, struct svc_req *);
extern "C" u_int * rstatproc_havedisk_2(void *, CLIENT *);
extern "C" u_int * rstatproc_havedisk_2_svc(void *, struct svc_req *);

#elif __STDC__
extern  statsswtch * rstatproc_stats_2(void *, CLIENT *);
extern  statsswtch * rstatproc_stats_2_svc(void *, struct svc_req *);
extern  u_int * rstatproc_havedisk_2(void *, CLIENT *);
extern  u_int * rstatproc_havedisk_2_svc(void *, struct svc_req *);

#else /* Old Style C */ 
extern  statsswtch * rstatproc_stats_2();
extern  statsswtch * rstatproc_stats_2_svc();
extern  u_int * rstatproc_havedisk_2();
extern  u_int * rstatproc_havedisk_2_svc();
#endif /* Old Style C */ 
#define RSTATVERS_ORIG ((u_long)1)

#ifdef __cplusplus
extern "C" stats * rstatproc_stats_1(void *, CLIENT *);
extern "C" stats * rstatproc_stats_1_svc(void *, struct svc_req *);
extern "C" u_int * rstatproc_havedisk_1(void *, CLIENT *);
extern "C" u_int * rstatproc_havedisk_1_svc(void *, struct svc_req *);

#elif __STDC__
extern  stats * rstatproc_stats_1(void *, CLIENT *);
extern  stats * rstatproc_stats_1_svc(void *, struct svc_req *);
extern  u_int * rstatproc_havedisk_1(void *, CLIENT *);
extern  u_int * rstatproc_havedisk_1_svc(void *, struct svc_req *);

#else /* Old Style C */ 
extern  stats * rstatproc_stats_1();
extern  stats * rstatproc_stats_1_svc();
extern  u_int * rstatproc_havedisk_1();
extern  u_int * rstatproc_havedisk_1_svc();
#endif /* Old Style C */ 

#endif /* !_RSTAT_H_RPCGEN */
