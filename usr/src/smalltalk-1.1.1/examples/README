This directory contains some working example GNU Smalltalk programs.
The programs are:

printHier.st	prints out the class hierarchy, indented according to
		the number of super classes a class has.

suntool.st	This is a simple demonstration of interfacing to the SunView
		graphical user interface.  You'll need to make a copy of
		the distribution in a separate directory, then copy
		suntool.st, win.c CFuncs.st and Makefile to that directory.
		You then need to edit mstcint.c to uncomment the line
		that defines SUN_WIN_HACKS.  Recompile the system (your Sun
		will have to have the SunView programmer's library loaded
		on it; it's an optional piece of software on your SunOS
		distribution tapes).  Run the system via "mst -V suntool.st"
		After creating a new binary image and saving it, and after
		a little while loading suntool.st, you should see
		a SunView window appear with a few graphical objects on it
		that you can interact with.

mem-usage.st	This is really more of a test suite kind of program.  It
		iterates through all the objects in the system, counting
		up how much storage has been used by each, and printing a
		total at the end.  It has found more bugs in the memory
		management system than I care to admit.

Host.st		Not yet implemented...intended to be an interface to the
		internet name lookup services and socket creation
		primitives.

defwin.c	Standalone C program for creating parts of the suntool.st
		demo system.

pids.c		Provides primitives for doing UNIX process hacking from
		within GNU Smalltalk.  Copy into a directory with a working
		Smalltalk, edit mstcint.c to call definePidFuncs()
		along with the other Smalltalk-callable C function definitions
		and edit the Makefile to make USER_OBJS include pids.c.
		up.st provides the interface from within Smalltalk; load it
		and have fun.

RandomInteger.st
		Provides methods that generate a random integer in a specific
		range.


See also the files in ../stix for a more extensive example of a Smalltalk
application that interfaces to C code (and X Window).

