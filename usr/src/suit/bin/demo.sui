/* SUIT version 2.3 */

#define THE_SCREEN_WIDTH 960
#define THE_SCREEN_HEIGHT 600
#define THE_SCREEN_DEPTH 7

#include "suit.h"


/*--------------------------------------------------------------------------------*/
/*                                                                                */
/*                                  NOTE:                                         */
/*                                                                                */
/*    This file contains all the permanent properties of this application's       */
/*    objects and is read in as a data file.  Compiling this file as part of      */
/*    your application "hard codes" your interface.  Please see "shipping"        */
/*    in the SUIT reference manual for further information.                       */
/*                                                                                */
/*                                                                                */
/*                              !! DANGER !!                                      */
/*                                                                                */
/*      This file is machine-generated, and its contents are very important.      */
/*                                                                                */
/*          If you must edit this file, do so with extreme caution!               */
/*                                                                                */
/*                              !! DANGER !!                                      */
/*                                                                                */
/*--------------------------------------------------------------------------------*/


extern void SUIT_interiorInitFromCode (char *programName, SUIT_functionPointer suiRoutine,
                                       int width, int height, int depth);

extern SUIT_type *si_getType(char *typeName);

extern void si_addChildToObject(SUIT_object, SUIT_object, boolean);

static void MAKE (char *name, char *class, char *parent, boolean interactive) 
{ 
    SUIT_object o = SUIT_name(name); 
    SUIT_object p = SUIT_name(parent); 
    if (p != NULL) {
        if (o == NULL) 
            o = SUIT_createObjectByClass(name, class); 
    	if (interactive) {
    	    SUIT_setBoolean (o, INTERACTIVELY_CREATED, TRUE);
    	    SUIT_makePropertyTemporary (o, INTERACTIVELY_CREATED, OBJECT);
    	}
        si_addChildToObject(SUIT_name(parent), o, FALSE); 
    }
} 
 


static void SET (char *objOrClass, char *propertyName, char *propertyType, boolean atClass,
                 boolean locked, char *stringValue) 
{ 
    SUIT_type	*type; 
    boolean	errorStatus; 
    Pointer	retval; 
    SUIT_level level = OBJECT; 
    SUIT_object o; 
     
    if (atClass) 
        level = CLASS; 
    if (level == CLASS) 
        o = SUIT_dummyObjectInClass(objOrClass); 
    else 
        o = SUIT_name(objOrClass); 
    type = si_getType(propertyType); 
    retval = type->convertFromAscii(stringValue, &errorStatus); 
    if (errorStatus == FALSE) 
	SUIT_setProperty(o, propertyName, propertyType, retval, level); 

    if (locked) 
        SUIT_lockProperty(o, propertyName, level); 
}


static void INIT_suiRoutine(void)
{
/* This line is for parsing simplicity -- do NOT remove it!  @ */
MAKE("second ball","bouncing ball","ROOT",1);
MAKE("first ball","bouncing ball","ROOT",1);
MAKE("Abort","button","ROOT",1);
MAKE("Done","button","ROOT",1);
MAKE("Polygon Widget","label","ROOT",1);
MAKE("my poly","polygon","ROOT",1);
MAKE("my radio buttons","radio buttons","ROOT",1);
MAKE("my menu: menu","menu","ROOT",1);
MAKE("Monday","button","my menu: menu",1);
MAKE("Tuesday","button","my menu: menu",1);
MAKE("Wednesday","button","my menu: menu",1);
MAKE("Thursday","button","my menu: menu",1);
MAKE("Friday","button","my menu: menu",1);
MAKE("my menu","pulldown menu","ROOT",1);
MAKE("my text editor","text editor","ROOT",1);
MAKE("my typein box","type in box","ROOT",1);
MAKE("my UVAlogo","uva logo","ROOT",1);
MAKE("list of SUIT words","scrollable list","ROOT",1);
MAKE("list of SUIT words: scrollbar","bounded value","list of SUIT words",1);
MAKE("list of SUIT words: list","list","list of SUIT words",1);
MAKE("my color chips","color chips","ROOT",1);
MAKE("my switch","on/off switch","ROOT",1);
MAKE("my bounded value","bounded value","ROOT",1);
MAKE("Button Widgets","label","ROOT",1);
MAKE("Radio Button Widget","label","ROOT",1);
MAKE("On/Off Switch Widget","label","ROOT",1);
MAKE("UVa Logo Widget","label","ROOT",1);
MAKE("Scrollable List Widget","label","ROOT",1);
MAKE("Text Editor Widget","label","ROOT",1);
MAKE("Type In Widget","label","ROOT",1);
MAKE("Menu Widget","label","ROOT",1);
MAKE("Bounded Value Widget","label","ROOT",1);
MAKE("Color Chips Widget","label","ROOT",1);
MAKE("The Simple User Interface Toolkit","label","ROOT",1);
MAKE("SUIT","label","ROOT",1);
SET("arrow button","border raised","boolean",1,0,"no");
SET("arrow button","changed class","boolean",1,0,"no");
SET("arrow button","darken background","boolean",1,0,"yes");
SET("arrow button","direction","SUIT_enum",1,0,"\"up\" of {\"up\" \"down\" \"left\" \"right\"}");
SET("arrow button","draw filled","boolean",1,0,"no");
SET("arrow button","has background","boolean",1,0,"no");
SET("arrow button","intermediate feedback","boolean",1,0,"no");
SET("arrow button","shadow thickness","int",1,0,"3");
SET("billboard","border raised","boolean",1,0,"no");
SET("billboard","changed class","boolean",1,0,"no");
SET("borderless bulletin board","border raised","boolean",1,0,"no");
SET("borderless bulletin board","changed class","boolean",1,0,"no");
SET("borderless bulletin board","has border","boolean",1,0,"no");
SET("bouncing ball","background color","GP_color",1,0,"black, white");
SET("bouncing ball","ball size","double",1,0,"0.100000");
SET("bouncing ball","ball x","double",1,0,"0.000000");
SET("bouncing ball","ball y","double",1,0,"0.000000");
SET("bouncing ball","changed class","boolean",1,0,"no");
SET("bouncing ball","filled","boolean",1,0,"yes");
SET("bouncing ball","foreground color","GP_color",1,0,"red, black");
SET("bouncing ball","pixels per second","int",1,0,"100");
SET("bounded value","arrowhead angle","int",1,0,"10");
SET("bounded value","arrowhead length","double",1,0,"0.200000");
SET("bounded value","button background color","GP_color",1,0,"black, black");
SET("bounded value","button foreground color","GP_color",1,0,"grey, white");
SET("bounded value","changed class","boolean",1,0,"no");
SET("bounded value","current value","double",1,0,"0.000000");
SET("bounded value","granularity","double",1,0,"0.000000");
SET("bounded value","has arrow","boolean",1,0,"yes");
SET("bounded value","has tick marks","boolean",1,0,"yes");
SET("bounded value","increase clockwise","boolean",1,0,"yes");
SET("bounded value","minimum value","double",1,0,"0.000000");
SET("bounded value","needle color","GP_color",1,0,"black, black");
SET("bounded value","start angle","double",1,0,"0.000000");
SET("button","changed class","boolean",1,0,"no");
SET("button","disabled color","GP_color",1,0,"grey, black");
SET("button","hotkey","text",1,0,"");
SET("button","justification","SUIT_enum",1,0,"\"center\" of {\"left\" \"center\" \"right\"}");
SET("button","shrink to fit","boolean",1,0,"yes");
SET("color chips","changed class","boolean",1,0,"no");
SET("color chips","chip border","double",1,0,"0.080000");
SET("color chips","current value","GP_color",1,0,"black, black");
SET("color chips","has background","boolean",1,0,"no");
SET("color chips","highlight color","GP_color",1,0,"black, black");
SET("color chips","previous value","GP_color",1,0,"black, black");
SET("dialog box","border type","SUIT_enum",1,0,"\"fancy motif\" of {\"simple\" \"motif\" \"fancy motif\"}");
SET("dialog box","border width","int",1,0,"8");
SET("dialog box","cache using canvas","boolean",1,0,"yes");
SET("dialog box","changed class","boolean",1,0,"no");
SET("elevator","border raised","boolean",1,0,"no");
SET("elevator","changed class","boolean",1,0,"no");
SET("elevator","has background","boolean",1,0,"no");
SET("font panel","border raised","boolean",1,0,"no");
SET("font panel","changed class","boolean",1,0,"no");
SET("font panel","has border","boolean",1,0,"no");
SET("label","changed class","boolean",1,0,"no");
SET("label","has border","boolean",1,0,"no");
SET("label","justification","SUIT_enum",1,0,"\"center\" of {\"left\" \"center\" \"right\"}");
SET("label","shrink to fit","boolean",1,0,"yes");
SET("list","border raised","boolean",1,0,"no");
SET("list","changed class","boolean",1,0,"no");
SET("list","text spacing","double",1,0,"1.200000");
SET("menu","cache using canvas","boolean",1,0,"yes");
SET("menu","changed class","boolean",1,0,"no");
SET("on/off switch","changed class","boolean",1,0,"no");
SET("on/off switch","disabled color","GP_color",1,0,"grey, black");
SET("on/off switch","shrink to fit","boolean",1,0,"yes");
SET("p.e.collection","border raised","boolean",1,0,"no");
SET("p.e.collection","changed class","boolean",1,0,"no");
SET("place mat","border raised","boolean",1,0,"no");
SET("place mat","changed class","boolean",1,0,"no");
SET("property editor","border raised","boolean",1,0,"no");
SET("property editor","changed class","boolean",1,0,"no");
SET("property list","border raised","boolean",1,0,"no");
SET("property list","changed class","boolean",1,0,"no");
SET("property list","text spacing","double",1,0,"1.500000");
SET("radio buttons","changed class","boolean",1,0,"no");
SET("radio buttons","current value","SUIT_enum",1,0,"\"default value\" of {\"default value\"}");
SET("scrollable list","border raised","boolean",1,0,"no");
SET("scrollable list","changed class","boolean",1,0,"no");
SET("scrollable list","has background","boolean",1,0,"no");
SET("scrollable list","has border","boolean",1,0,"no");
SET("scrollable property list","border raised","boolean",1,0,"no");
SET("scrollable property list","changed class","boolean",1,0,"no");
SET("scrollable property list","has background","boolean",1,0,"no");
SET("scrollable property list","has border","boolean",1,0,"no");
SET("stacker","changed class","boolean",1,0,"no");
SET("stacker","shrink to fit","boolean",1,0,"yes");
SET("text editor","any keystroke triggers","boolean",1,0,"no");
SET("text editor","backward char key","text",1,0,"C-b");
SET("text editor","beginning of line key","text",1,0,"C-a");
SET("text editor","beginning of text key","text",1,0,"M-<");
SET("text editor","border raised","boolean",1,0,"no");
SET("text editor","changed class","boolean",1,0,"no");
SET("text editor","cursor color","GP_color",1,0,"black, black");
SET("text editor","cursor style","SUIT_enum",1,0,"\"vertical bar\" of {\"i-beam\" \"vertical bar\"}");
SET("text editor","delete char key","text",1,0,"C-d");
SET("text editor","delete entire line key","text",1,0,"C-u");
SET("text editor","done editing key","text",1,0,"C-x");
SET("text editor","end of line key","text",1,0,"C-e");
SET("text editor","end of text key","text",1,0,"M->");
SET("text editor","forward char key","text",1,0,"C-f");
SET("text editor","has a tab","boolean",1,0,"no");
SET("text editor","kill line key","text",1,0,"C-k");
SET("text editor","newline key","text",1,0,"C-m");
SET("text editor","next line key","text",1,0,"C-n");
SET("text editor","open line key","text",1,0,"C-o");
SET("text editor","previous line key","text",1,0,"C-p");
SET("text editor","repaint key","text",1,0,"C-l");
SET("text editor","scroll down key","text",1,0,"M-v");
SET("text editor","scroll up key","text",1,0,"C-v");
SET("text editor","set mark key","text",1,0,"C-`");
SET("text editor","spacing gap","int",1,0,"3");
SET("text editor","tab key","text",1,0,"C-i");
SET("text editor","tab length","int",1,0,"5");
SET("text editor","time between clicks for double click","double",1,0,"400000.000000");
SET("text editor","wipe block key","text",1,0,"C-w");
SET("text editor","yank key","text",1,0,"C-y");
SET("type in box","any keystroke triggers","boolean",1,0,"no");
SET("type in box","backward char key","text",1,0,"C-b");
SET("type in box","beginning of line key","text",1,0,"C-a");
SET("type in box","beginning of text key","text",1,0,"M-<");
SET("type in box","border raised","boolean",1,0,"no");
SET("type in box","changed class","boolean",1,0,"no");
SET("type in box","cursor color","GP_color",1,0,"black, black");
SET("type in box","cursor style","SUIT_enum",1,0,"\"vertical bar\" of {\"i-beam\" \"vertical bar\"}");
SET("type in box","delete char key","text",1,0,"C-d");
SET("type in box","delete entire line key","text",1,0,"C-u");
SET("type in box","done editing key","text",1,0,"C-x");
SET("type in box","end of line key","text",1,0,"C-e");
SET("type in box","end of text key","text",1,0,"M->");
SET("type in box","forward char key","text",1,0,"C-f");
SET("type in box","has a tab","boolean",1,0,"no");
SET("type in box","kill line key","text",1,0,"C-k");
SET("type in box","newline key","text",1,0,"C-m");
SET("type in box","next line key","text",1,0,"C-n");
SET("type in box","open line key","text",1,0,"C-o");
SET("type in box","previous line key","text",1,0,"C-p");
SET("type in box","repaint key","text",1,0,"C-l");
SET("type in box","scroll down key","text",1,0,"M-v");
SET("type in box","scroll up key","text",1,0,"C-v");
SET("type in box","set mark key","text",1,0,"C-`");
SET("type in box","shrink to fit","boolean",1,0,"yes");
SET("type in box","spacing gap","int",1,0,"3");
SET("type in box","tab key","text",1,0,"C-i");
SET("type in box","tab length","int",1,0,"5");
SET("type in box","time between clicks for double click","double",1,0,"400000.000000");
SET("type in box","wipe block key","text",1,0,"C-w");
SET("type in box","yank key","text",1,0,"C-y");
SET("uva logo","changed class","boolean",1,0,"no");
SET("uva logo","line width","int",1,0,"0");
SET("ROOT","animated","boolean",0,0,"no");
SET("ROOT","background color","GP_color",0,0,"grey, white");
SET("ROOT","border color","GP_color",0,0,"grey, black");
SET("ROOT","border raised","boolean",0,0,"yes");
SET("ROOT","border type","SUIT_enum",0,0,"\"motif\" of {\"simple\" \"motif\" \"fancy motif\"}");
SET("ROOT","border width","int",0,0,"2");
SET("ROOT","changed class","boolean",0,0,"no");
SET("ROOT","clip to viewport","boolean",0,0,"yes");
SET("ROOT","default object height","int",0,0,"80");
SET("ROOT","default object width","int",0,0,"80");
SET("ROOT","draw border on inside","boolean",0,0,"no");
SET("ROOT","font","GP_font",0,0,"new century schoolbook,,14.000000");
SET("ROOT","foreground color","GP_color",0,0,"black, black");
SET("ROOT","has background","boolean",0,0,"yes");
SET("ROOT","has border","boolean",0,0,"yes");
SET("ROOT","margin","int",0,0,"5");
SET("ROOT","show temporary properties","boolean",0,0,"no");
SET("ROOT","shrink to fit","boolean",0,0,"no");
SET("ROOT","springiness","SUIT_springiness",0,0,"63");
SET("ROOT","SUIT system font","GP_font",0,0,"helvetica,,14.000000");
SET("ROOT","viewport","viewport",0,1,"0 0 959 599");
SET("ROOT","visible","boolean",0,0,"yes");
SET("ROOT","window","window",0,1,"0.000000 0.000000 1.000000 1.000000");
SET("second ball","active display","SUIT_enum",0,0,"\"standard\" of {\"square\" \"standard\"}");
SET("second ball","animated","boolean",0,0,"yes");
SET("second ball","ball x","double",0,0,"0.815278");
SET("second ball","ball y","double",0,0,"0.638095");
SET("second ball","viewport","viewport",0,0,"145 510 225 590");
SET("first ball","active display","SUIT_enum",0,0,"\"standard\" of {\"square\" \"standard\"}");
SET("first ball","animated","boolean",0,0,"yes");
SET("first ball","ball x","double",0,0,"0.154017");
SET("first ball","ball y","double",0,0,"0.366700");
SET("first ball","foreground color","GP_color",0,0,"yellow, black");
SET("first ball","viewport","viewport",0,0,"736 510 815 590");
SET("Abort","abort callback function","SUIT_functionPointer",0,0,"function ptr");
SET("Abort","active display","SUIT_enum",0,0,"\"standard\" of {\"button with hotkey\" \"standard\"}");
SET("Abort","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("Abort","disabled","boolean",0,0,"no");
SET("Abort","label","text",0,0,"Abort");
SET("Abort","viewport","viewport",0,0,"844 65 890 91");
SET("Done","active display","SUIT_enum",0,0,"\"standard\" of {\"button with hotkey\" \"standard\"}");
SET("Done","border raised","boolean",0,0,"yes");
SET("Done","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("Done","disabled","boolean",0,0,"no");
SET("Done","done callback function","SUIT_functionPointer",0,0,"function ptr");
SET("Done","has background","boolean",0,0,"yes");
SET("Done","label","text",0,0,"Done");
SET("Done","viewport","viewport",0,0,"845 19 889 45");
SET("Polygon Widget","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("Polygon Widget","label","text",0,0,"Polygon Widget");
SET("Polygon Widget","viewport","viewport",0,0,"265 437 379 463");
SET("my poly","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("my poly","filled","boolean",0,0,"yes");
SET("my poly","foreground color","GP_color",0,0,"red, black");
SET("my poly","number of sides","int",0,0,"7");
SET("my poly","viewport","viewport",0,0,"282 346 362 426");
SET("my radio buttons","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("my radio buttons","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("my radio buttons","current value","SUIT_enum",0,0,"\"Vanilla\" of {\"Chocolate\" \"Vanilla\" \"Strawberry\" \"Rocky Road\"}");
SET("my radio buttons","shrink to fit","boolean",0,0,"no");
SET("my radio buttons","viewport","viewport",0,0,"30 330 176 434");
SET("my menu: menu","active display","SUIT_enum",0,0,"\"vertical\" of {\"vertical\"}");
SET("my menu: menu","stuck down","boolean",0,0,"no");
SET("my menu: menu","viewport","viewport",0,0,"539 263 635 414");
SET("my menu: menu","visible","boolean",0,0,"no");
SET("Monday","active display","SUIT_enum",0,0,"\"standard\" of {\"button with hotkey\" \"standard\"}");
SET("Monday","border raised","boolean",0,0,"yes");
SET("Monday","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("Monday","disabled","boolean",0,0,"no");
SET("Monday","has background","boolean",0,0,"yes");
SET("Monday","has border","boolean",0,0,"no");
SET("Monday","label","text",0,0,"Monday");
SET("Monday","shrink to fit","boolean",0,0,"no");
SET("Monday","viewport","viewport",0,0,"3 122 93 149");
SET("Tuesday","active display","SUIT_enum",0,0,"\"standard\" of {\"button with hotkey\" \"standard\"}");
SET("Tuesday","border raised","boolean",0,0,"yes");
SET("Tuesday","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("Tuesday","disabled","boolean",0,0,"no");
SET("Tuesday","has background","boolean",0,0,"yes");
SET("Tuesday","has border","boolean",0,0,"no");
SET("Tuesday","label","text",0,0,"Tuesday");
SET("Tuesday","shrink to fit","boolean",0,0,"no");
SET("Tuesday","viewport","viewport",0,0,"3 92 93 118");
SET("Wednesday","active display","SUIT_enum",0,0,"\"standard\" of {\"button with hotkey\" \"standard\"}");
SET("Wednesday","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("Wednesday","disabled","boolean",0,0,"no");
SET("Wednesday","has border","boolean",0,0,"no");
SET("Wednesday","label","text",0,0,"Wednesday");
SET("Wednesday","shrink to fit","boolean",0,0,"no");
SET("Wednesday","viewport","viewport",0,0,"3 62 93 88");
SET("Thursday","active display","SUIT_enum",0,0,"\"standard\" of {\"button with hotkey\" \"standard\"}");
SET("Thursday","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("Thursday","disabled","boolean",0,0,"no");
SET("Thursday","has border","boolean",0,0,"no");
SET("Thursday","label","text",0,0,"Thursday");
SET("Thursday","shrink to fit","boolean",0,0,"no");
SET("Thursday","viewport","viewport",0,0,"3 32 93 58");
SET("Friday","active display","SUIT_enum",0,0,"\"standard\" of {\"button with hotkey\" \"standard\"}");
SET("Friday","border raised","boolean",0,0,"yes");
SET("Friday","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("Friday","disabled","boolean",0,0,"no");
SET("Friday","has background","boolean",0,0,"yes");
SET("Friday","has border","boolean",0,0,"no");
SET("Friday","label","text",0,0,"Friday");
SET("Friday","shrink to fit","boolean",0,0,"no");
SET("Friday","viewport","viewport",0,0,"3 2 93 28");
SET("my menu","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("my menu","has border","boolean",0,0,"yes");
SET("my menu","label","text",0,0,"my menu");
SET("my menu","viewport","viewport",0,0,"539 419 613 445");
SET("my text editor","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("my text editor","altered","boolean",0,0,"yes");
SET("my text editor","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("my text editor","current value","text",0,0,"This text editor
supports emacs-style
key bindings
");
SET("my text editor","cut buffer","text",0,0,"");
SET("my text editor","has a tab","boolean",0,0,"no");
SET("my text editor","number of lines","int",0,0,"4");
SET("my text editor","paint block only","boolean",0,0,"yes");
SET("my text editor","read only","boolean",0,0,"no");
SET("my text editor","viewport","viewport",0,0,"490 147 680 290");
SET("my typein box","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("my typein box","altered","boolean",0,0,"no");
SET("my typein box","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("my typein box","current value","text",0,0,"");
SET("my typein box","cut buffer","text",0,0,"");
SET("my typein box","number of lines","int",0,0,"1");
SET("my typein box","paint block only","boolean",0,0,"no");
SET("my typein box","read only","boolean",0,0,"no");
SET("my typein box","viewport","viewport",0,0,"239 190 381 216");
SET("my UVAlogo","active display","SUIT_enum",0,0,"\"rotunda\" of {\"big v\" \"rotunda\" \"uva\"}");
SET("my UVAlogo","background color","GP_color",0,0,"blue, black");
SET("my UVAlogo","foreground color","GP_color",0,0,"orange, white");
SET("my UVAlogo","viewport","viewport",0,0,"545 16 625 96");
SET("list of SUIT words","active display","SUIT_enum",0,0,"\"bulletin board\" of {\"bulletin board\"}");
SET("list of SUIT words","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("list of SUIT words","current row","int",0,0,"-1");
SET("list of SUIT words","current value","text",0,0,"");
SET("list of SUIT words","label","text",0,0,"");
SET("list of SUIT words","list","SUIT_textList",0,0,"besuit
cosuitor
countersuit
demisuit
dissuit
dissuitable
dissuited
Jesuit
Jesuited
Jesuitess
Jesuitic
Jesuitical
Jesuitically
Jesuitish
Jesuitism
Jesuitist
Jesuitize
Jesuitocracy
Jesuitry
lawsuit
lawsuiting
mispursuit
nonpursuit
nonsuit
outsuitor
overunsuitable
playsuit
presuitability
presuitable
presuitably
pursuit
pursuitmeter
repursuit
resuit
snowsuit
suit
suitability
suitable
suitableness
suitably
suitcase
suite
suithold
suiting
suitor
suitoress
suitorship
suity
swimsuit
undersuit
unjesuited
unjesuitical
unjesuitically
unsuit
unsuitability
unsuitable
unsuitableness
unsuitably
unsuited
unsuiting
");
SET("list of SUIT words","viewport","viewport",0,0,"789 187 945 445");
SET("list of SUIT words: scrollbar","active display","SUIT_enum",0,0,"\"scroll bar\" of {\"scroll bar\" \"vertical thermometer\" \"horizontal thermometer\" \"pie slice\" \"speedometer\"}");
SET("list of SUIT words: scrollbar","border raised","boolean",0,0,"no");
SET("list of SUIT words: scrollbar","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("list of SUIT words: scrollbar","current value","double",0,0,"0.000000");
SET("list of SUIT words: scrollbar","granularity","double",0,0,"1.000000");
SET("list of SUIT words: scrollbar","maximum value","double",0,0,"47.000000");
SET("list of SUIT words: scrollbar","minimum value","double",0,0,"0.000000");
SET("list of SUIT words: scrollbar","percent full","double",0,0,"0.216667");
SET("list of SUIT words: scrollbar","springiness","SUIT_springiness",0,0,"17");
SET("list of SUIT words: scrollbar","viewport","viewport",0,0,"142 2 154 256");
SET("list of SUIT words: scrollbar: first arrow","active display","SUIT_enum",0,0,"\"motif\" of {\"simple arrow\" \"motif\"}");
SET("list of SUIT words: scrollbar: first arrow","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("list of SUIT words: scrollbar: first arrow","direction","SUIT_enum",0,0,"\"up\" of {\"up\" \"down\" \"left\" \"right\"}");
SET("list of SUIT words: scrollbar: first arrow","has border","boolean",0,0,"no");
SET("list of SUIT words: scrollbar: first arrow","viewport","viewport",0,0,"0 242 12 254");
SET("list of SUIT words: scrollbar: elevator","active display","SUIT_enum",0,0,"\"motif\" of {\"motif\"}");
SET("list of SUIT words: scrollbar: elevator","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("list of SUIT words: scrollbar: elevator","current value","double",0,0,"0.000000");
SET("list of SUIT words: scrollbar: elevator","has border","boolean",0,0,"no");
SET("list of SUIT words: scrollbar: elevator","percent full","double",0,0,"0.216667");
SET("list of SUIT words: scrollbar: elevator","viewport","viewport",0,0,"0 12 12 242");
SET("list of SUIT words: scrollbar: second arrow","active display","SUIT_enum",0,0,"\"motif\" of {\"simple arrow\" \"motif\"}");
SET("list of SUIT words: scrollbar: second arrow","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("list of SUIT words: scrollbar: second arrow","direction","SUIT_enum",0,0,"\"down\" of {\"up\" \"down\" \"left\" \"right\"}");
SET("list of SUIT words: scrollbar: second arrow","has border","boolean",0,0,"no");
SET("list of SUIT words: scrollbar: second arrow","viewport","viewport",0,0,"0 0 12 12");
SET("list of SUIT words: list","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("list of SUIT words: list","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("list of SUIT words: list","drawing viewport","viewport",0,0,"2 2 132 256");
SET("list of SUIT words: list","springiness","SUIT_springiness",0,0,"3");
SET("list of SUIT words: list","viewport","viewport",0,0,"2 2 132 256");
SET("my color chips","active display","SUIT_enum",0,0,"\"parquet\" of {\"standard\" \"parquet\"}");
SET("my color chips","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("my color chips","valid colors","int",0,0,"19");
SET("my color chips","viewport","viewport",0,0,"260 15 360 115");
SET("my switch","active display","SUIT_enum",0,0,"\"motif square\" of {\"dot in circle\" \"check box\" \"motif diamond\" \"motif square\"}");
SET("my switch","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("my switch","current value","boolean",0,0,"no");
SET("my switch","disabled","boolean",0,0,"no");
SET("my switch","label","text",0,0,"my switch");
SET("my switch","viewport","viewport",0,0,"45 206 149 232");
SET("my bounded value","active display","SUIT_enum",0,0,"\"speedometer\" of {\"scroll bar\" \"vertical thermometer\" \"horizontal thermometer\" \"pie slice\" \"speedometer\"}");
SET("my bounded value","callback function","SUIT_functionPointer",0,0,"function ptr");
SET("my bounded value","current value","double",0,0,"0.500000");
SET("my bounded value","granularity","double",0,0,"0.100000");
SET("my bounded value","maximum value","double",0,0,"1.000000");
SET("my bounded value","minimum value","double",0,0,"0.000000");
SET("my bounded value","percent full","double",0,0,"0.200000");
SET("my bounded value","viewport","viewport",0,0,"58 27 136 107");
SET("Button Widgets","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("Button Widgets","label","text",0,0,"Button Widgets");
SET("Button Widgets","viewport","viewport",0,0,"811 112 923 138");
SET("Radio Button Widget","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("Radio Button Widget","label","text",0,0,"Radio Button Widget");
SET("Radio Button Widget","viewport","viewport",0,0,"24 437 171 463");
SET("On/Off Switch Widget","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("On/Off Switch Widget","label","text",0,0,"On/Off Switch Widget");
SET("On/Off Switch Widget","viewport","viewport",0,0,"20 238 174 264");
SET("UVa Logo Widget","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("UVa Logo Widget","label","text",0,0,"UVa Logo Widget");
SET("UVa Logo Widget","viewport","viewport",0,0,"522 100 649 126");
SET("Scrollable List Widget","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("Scrollable List Widget","label","text",0,0,"Scrollable List Widget");
SET("Scrollable List Widget","viewport","viewport",0,0,"791 456 943 482");
SET("Text Editor Widget","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("Text Editor Widget","label","text",0,0,"Text Editor Widget");
SET("Text Editor Widget","viewport","viewport",0,0,"518 290 653 316");
SET("Type In Widget","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("Type In Widget","label","text",0,0,"Type In Widget");
SET("Type In Widget","viewport","viewport",0,0,"254 220 366 246");
SET("Menu Widget","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("Menu Widget","label","text",0,0,"Menu Widget");
SET("Menu Widget","viewport","viewport",0,0,"529 451 631 477");
SET("Bounded Value Widget","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("Bounded Value Widget","label","text",0,0,"Bounded Value Widget");
SET("Bounded Value Widget","viewport","viewport",0,0,"17 110 177 136");
SET("Color Chips Widget","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("Color Chips Widget","label","text",0,0,"Color Chips Widget");
SET("Color Chips Widget","viewport","viewport",0,0,"242 121 380 147");
SET("The Simple User Interface Toolkit","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("The Simple User Interface Toolkit","font","GP_font",0,0,"new century schoolbook,,18.000000");
SET("The Simple User Interface Toolkit","label","text",0,0,"The Simple User Interface Toolkit");
SET("The Simple User Interface Toolkit","viewport","viewport",0,0,"331 511 623 541");
SET("SUIT","active display","SUIT_enum",0,0,"\"standard\" of {\"standard\"}");
SET("SUIT","font","GP_font",0,0,"new century schoolbook,,24.000000");
SET("SUIT","label","text",0,0,"SUIT");
SET("SUIT","viewport","viewport",0,0,"442 553 512 589");


} /* end of INIT_suiRoutine */



void SUIT_initFromCode (char *programName)
{
    SUIT_interiorInitFromCode (programName, INIT_suiRoutine, THE_SCREEN_WIDTH,
                               THE_SCREEN_HEIGHT, THE_SCREEN_DEPTH);
}
