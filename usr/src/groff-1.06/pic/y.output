

Terminals which are not used:

   DEFINE
   UNDEF


Conflict in state 91 between rule 42 and token '-' resolved as shift.
Conflict in state 95 between rule 141 and token LEFT resolved as reduce.
Conflict in state 95 between rule 141 and token RIGHT resolved as reduce.
Conflict in state 95 between rule 141 and token DOT_N resolved as shift.
Conflict in state 95 between rule 141 and token DOT_E resolved as shift.
Conflict in state 95 between rule 141 and token DOT_W resolved as shift.
Conflict in state 95 between rule 141 and token DOT_S resolved as shift.
Conflict in state 95 between rule 141 and token DOT_NE resolved as shift.
Conflict in state 95 between rule 141 and token DOT_SE resolved as shift.
Conflict in state 95 between rule 141 and token DOT_NW resolved as shift.
Conflict in state 95 between rule 141 and token DOT_SW resolved as shift.
Conflict in state 95 between rule 141 and token DOT_C resolved as shift.
Conflict in state 95 between rule 141 and token DOT_START resolved as shift.
Conflict in state 95 between rule 141 and token DOT_END resolved as shift.
Conflict in state 95 between rule 141 and token TOP resolved as shift.
Conflict in state 95 between rule 141 and token BOTTOM resolved as shift.
Conflict in state 95 between rule 141 and token UPPER resolved as shift.
Conflict in state 95 between rule 141 and token LOWER resolved as shift.
Conflict in state 95 between rule 141 and token LEFT_CORNER resolved as shift.
Conflict in state 95 between rule 141 and token RIGHT_CORNER resolved as shift.
Conflict in state 95 between rule 141 and token CENTER resolved as shift.
Conflict in state 95 between rule 141 and token END resolved as shift.
Conflict in state 95 between rule 141 and token START resolved as shift.
Conflict in state 100 between rule 40 and token '-' resolved as shift.
Conflict in state 110 between rule 80 and token TEXT resolved as shift.
Conflict in state 110 between rule 80 and token SPRINTF resolved as shift.
Conflict in state 110 between rule 80 and token '-' resolved as shift.
Conflict in state 123 between rule 89 and token LABEL resolved as shift.
Conflict in state 123 between rule 89 and token VARIABLE resolved as shift.
Conflict in state 123 between rule 89 and token NUMBER resolved as shift.
Conflict in state 123 between rule 89 and token ORDINAL resolved as shift.
Conflict in state 123 between rule 89 and token LAST resolved as shift.
Conflict in state 123 between rule 89 and token LEFT resolved as reduce.
Conflict in state 123 between rule 89 and token RIGHT resolved as reduce.
Conflict in state 123 between rule 89 and token HERE resolved as shift.
Conflict in state 123 between rule 89 and token DOT_N resolved as shift.
Conflict in state 123 between rule 89 and token DOT_E resolved as shift.
Conflict in state 123 between rule 89 and token DOT_W resolved as shift.
Conflict in state 123 between rule 89 and token DOT_S resolved as shift.
Conflict in state 123 between rule 89 and token DOT_NE resolved as shift.
Conflict in state 123 between rule 89 and token DOT_SE resolved as shift.
Conflict in state 123 between rule 89 and token DOT_NW resolved as shift.
Conflict in state 123 between rule 89 and token DOT_SW resolved as shift.
Conflict in state 123 between rule 89 and token DOT_C resolved as shift.
Conflict in state 123 between rule 89 and token DOT_START resolved as shift.
Conflict in state 123 between rule 89 and token DOT_END resolved as shift.
Conflict in state 123 between rule 89 and token SIN resolved as shift.
Conflict in state 123 between rule 89 and token COS resolved as shift.
Conflict in state 123 between rule 89 and token ATAN2 resolved as shift.
Conflict in state 123 between rule 89 and token LOG resolved as shift.
Conflict in state 123 between rule 89 and token EXP resolved as shift.
Conflict in state 123 between rule 89 and token SQRT resolved as shift.
Conflict in state 123 between rule 89 and token MAX resolved as shift.
Conflict in state 123 between rule 89 and token MIN resolved as shift.
Conflict in state 123 between rule 89 and token INT resolved as shift.
Conflict in state 123 between rule 89 and token RAND resolved as shift.
Conflict in state 123 between rule 89 and token TOP resolved as shift.
Conflict in state 123 between rule 89 and token BOTTOM resolved as shift.
Conflict in state 123 between rule 89 and token UPPER resolved as shift.
Conflict in state 123 between rule 89 and token LOWER resolved as shift.
Conflict in state 123 between rule 89 and token LEFT_CORNER resolved as shift.
Conflict in state 123 between rule 89 and token RIGHT_CORNER resolved as shift.
Conflict in state 123 between rule 89 and token CENTER resolved as shift.
Conflict in state 123 between rule 89 and token END resolved as shift.
Conflict in state 123 between rule 89 and token START resolved as shift.
Conflict in state 123 between rule 89 and token '(' resolved as shift.
Conflict in state 123 between rule 89 and token '`' resolved as shift.
Conflict in state 123 between rule 89 and token '-' resolved as shift.
Conflict in state 123 between rule 89 and token '!' resolved as shift.
Conflict in state 124 between rule 91 and token LABEL resolved as shift.
Conflict in state 124 between rule 91 and token VARIABLE resolved as shift.
Conflict in state 124 between rule 91 and token NUMBER resolved as shift.
Conflict in state 124 between rule 91 and token ORDINAL resolved as shift.
Conflict in state 124 between rule 91 and token LAST resolved as shift.
Conflict in state 124 between rule 91 and token LEFT resolved as reduce.
Conflict in state 124 between rule 91 and token RIGHT resolved as reduce.
Conflict in state 124 between rule 91 and token HERE resolved as shift.
Conflict in state 124 between rule 91 and token DOT_N resolved as shift.
Conflict in state 124 between rule 91 and token DOT_E resolved as shift.
Conflict in state 124 between rule 91 and token DOT_W resolved as shift.
Conflict in state 124 between rule 91 and token DOT_S resolved as shift.
Conflict in state 124 between rule 91 and token DOT_NE resolved as shift.
Conflict in state 124 between rule 91 and token DOT_SE resolved as shift.
Conflict in state 124 between rule 91 and token DOT_NW resolved as shift.
Conflict in state 124 between rule 91 and token DOT_SW resolved as shift.
Conflict in state 124 between rule 91 and token DOT_C resolved as shift.
Conflict in state 124 between rule 91 and token DOT_START resolved as shift.
Conflict in state 124 between rule 91 and token DOT_END resolved as shift.
Conflict in state 124 between rule 91 and token SIN resolved as shift.
Conflict in state 124 between rule 91 and token COS resolved as shift.
Conflict in state 124 between rule 91 and token ATAN2 resolved as shift.
Conflict in state 124 between rule 91 and token LOG resolved as shift.
Conflict in state 124 between rule 91 and token EXP resolved as shift.
Conflict in state 124 between rule 91 and token SQRT resolved as shift.
Conflict in state 124 between rule 91 and token MAX resolved as shift.
Conflict in state 124 between rule 91 and token MIN resolved as shift.
Conflict in state 124 between rule 91 and token INT resolved as shift.
Conflict in state 124 between rule 91 and token RAND resolved as shift.
Conflict in state 124 between rule 91 and token TOP resolved as shift.
Conflict in state 124 between rule 91 and token BOTTOM resolved as shift.
Conflict in state 124 between rule 91 and token UPPER resolved as shift.
Conflict in state 124 between rule 91 and token LOWER resolved as shift.
Conflict in state 124 between rule 91 and token LEFT_CORNER resolved as shift.
Conflict in state 124 between rule 91 and token RIGHT_CORNER resolved as shift.
Conflict in state 124 between rule 91 and token CENTER resolved as shift.
Conflict in state 124 between rule 91 and token END resolved as shift.
Conflict in state 124 between rule 91 and token START resolved as shift.
Conflict in state 124 between rule 91 and token '(' resolved as shift.
Conflict in state 124 between rule 91 and token '`' resolved as shift.
Conflict in state 124 between rule 91 and token '-' resolved as shift.
Conflict in state 124 between rule 91 and token '!' resolved as shift.
Conflict in state 125 between rule 95 and token LABEL resolved as shift.
Conflict in state 125 between rule 95 and token VARIABLE resolved as shift.
Conflict in state 125 between rule 95 and token NUMBER resolved as shift.
Conflict in state 125 between rule 95 and token ORDINAL resolved as shift.
Conflict in state 125 between rule 95 and token LAST resolved as shift.
Conflict in state 125 between rule 95 and token LEFT resolved as reduce.
Conflict in state 125 between rule 95 and token RIGHT resolved as reduce.
Conflict in state 125 between rule 95 and token HERE resolved as shift.
Conflict in state 125 between rule 95 and token DOT_N resolved as shift.
Conflict in state 125 between rule 95 and token DOT_E resolved as shift.
Conflict in state 125 between rule 95 and token DOT_W resolved as shift.
Conflict in state 125 between rule 95 and token DOT_S resolved as shift.
Conflict in state 125 between rule 95 and token DOT_NE resolved as shift.
Conflict in state 125 between rule 95 and token DOT_SE resolved as shift.
Conflict in state 125 between rule 95 and token DOT_NW resolved as shift.
Conflict in state 125 between rule 95 and token DOT_SW resolved as shift.
Conflict in state 125 between rule 95 and token DOT_C resolved as shift.
Conflict in state 125 between rule 95 and token DOT_START resolved as shift.
Conflict in state 125 between rule 95 and token DOT_END resolved as shift.
Conflict in state 125 between rule 95 and token SIN resolved as shift.
Conflict in state 125 between rule 95 and token COS resolved as shift.
Conflict in state 125 between rule 95 and token ATAN2 resolved as shift.
Conflict in state 125 between rule 95 and token LOG resolved as shift.
Conflict in state 125 between rule 95 and token EXP resolved as shift.
Conflict in state 125 between rule 95 and token SQRT resolved as shift.
Conflict in state 125 between rule 95 and token MAX resolved as shift.
Conflict in state 125 between rule 95 and token MIN resolved as shift.
Conflict in state 125 between rule 95 and token INT resolved as shift.
Conflict in state 125 between rule 95 and token RAND resolved as shift.
Conflict in state 125 between rule 95 and token TOP resolved as shift.
Conflict in state 125 between rule 95 and token BOTTOM resolved as shift.
Conflict in state 125 between rule 95 and token UPPER resolved as shift.
Conflict in state 125 between rule 95 and token LOWER resolved as shift.
Conflict in state 125 between rule 95 and token LEFT_CORNER resolved as shift.
Conflict in state 125 between rule 95 and token RIGHT_CORNER resolved as shift.
Conflict in state 125 between rule 95 and token CENTER resolved as shift.
Conflict in state 125 between rule 95 and token END resolved as shift.
Conflict in state 125 between rule 95 and token START resolved as shift.
Conflict in state 125 between rule 95 and token '(' resolved as shift.
Conflict in state 125 between rule 95 and token '`' resolved as shift.
Conflict in state 125 between rule 95 and token '-' resolved as shift.
Conflict in state 125 between rule 95 and token '!' resolved as shift.
Conflict in state 125 between rule 187 and token LABEL resolved as shift.
Conflict in state 125 between rule 187 and token ORDINAL resolved as shift.
Conflict in state 125 between rule 187 and token LAST resolved as shift.
Conflict in state 125 between rule 187 and token '`' resolved as shift.
Conflict in state 126 between rule 93 and token LABEL resolved as shift.
Conflict in state 126 between rule 93 and token VARIABLE resolved as shift.
Conflict in state 126 between rule 93 and token NUMBER resolved as shift.
Conflict in state 126 between rule 93 and token ORDINAL resolved as shift.
Conflict in state 126 between rule 93 and token LAST resolved as shift.
Conflict in state 126 between rule 93 and token LEFT resolved as reduce.
Conflict in state 126 between rule 93 and token RIGHT resolved as reduce.
Conflict in state 126 between rule 93 and token HERE resolved as shift.
Conflict in state 126 between rule 93 and token DOT_N resolved as shift.
Conflict in state 126 between rule 93 and token DOT_E resolved as shift.
Conflict in state 126 between rule 93 and token DOT_W resolved as shift.
Conflict in state 126 between rule 93 and token DOT_S resolved as shift.
Conflict in state 126 between rule 93 and token DOT_NE resolved as shift.
Conflict in state 126 between rule 93 and token DOT_SE resolved as shift.
Conflict in state 126 between rule 93 and token DOT_NW resolved as shift.
Conflict in state 126 between rule 93 and token DOT_SW resolved as shift.
Conflict in state 126 between rule 93 and token DOT_C resolved as shift.
Conflict in state 126 between rule 93 and token DOT_START resolved as shift.
Conflict in state 126 between rule 93 and token DOT_END resolved as shift.
Conflict in state 126 between rule 93 and token SIN resolved as shift.
Conflict in state 126 between rule 93 and token COS resolved as shift.
Conflict in state 126 between rule 93 and token ATAN2 resolved as shift.
Conflict in state 126 between rule 93 and token LOG resolved as shift.
Conflict in state 126 between rule 93 and token EXP resolved as shift.
Conflict in state 126 between rule 93 and token SQRT resolved as shift.
Conflict in state 126 between rule 93 and token MAX resolved as shift.
Conflict in state 126 between rule 93 and token MIN resolved as shift.
Conflict in state 126 between rule 93 and token INT resolved as shift.
Conflict in state 126 between rule 93 and token RAND resolved as shift.
Conflict in state 126 between rule 93 and token TOP resolved as shift.
Conflict in state 126 between rule 93 and token BOTTOM resolved as shift.
Conflict in state 126 between rule 93 and token UPPER resolved as shift.
Conflict in state 126 between rule 93 and token LOWER resolved as shift.
Conflict in state 126 between rule 93 and token LEFT_CORNER resolved as shift.
Conflict in state 126 between rule 93 and token RIGHT_CORNER resolved as shift.
Conflict in state 126 between rule 93 and token CENTER resolved as shift.
Conflict in state 126 between rule 93 and token END resolved as shift.
Conflict in state 126 between rule 93 and token START resolved as shift.
Conflict in state 126 between rule 93 and token '(' resolved as shift.
Conflict in state 126 between rule 93 and token '`' resolved as shift.
Conflict in state 126 between rule 93 and token '-' resolved as shift.
Conflict in state 126 between rule 93 and token '!' resolved as shift.
Conflict in state 126 between rule 188 and token LABEL resolved as shift.
Conflict in state 126 between rule 188 and token ORDINAL resolved as shift.
Conflict in state 126 between rule 188 and token LAST resolved as shift.
Conflict in state 126 between rule 188 and token '`' resolved as shift.
Conflict in state 137 between rule 103 and token LABEL resolved as shift.
Conflict in state 137 between rule 103 and token VARIABLE resolved as shift.
Conflict in state 137 between rule 103 and token NUMBER resolved as shift.
Conflict in state 137 between rule 103 and token ORDINAL resolved as shift.
Conflict in state 137 between rule 103 and token LAST resolved as shift.
Conflict in state 137 between rule 103 and token LEFT resolved as reduce.
Conflict in state 137 between rule 103 and token RIGHT resolved as reduce.
Conflict in state 137 between rule 103 and token HERE resolved as shift.
Conflict in state 137 between rule 103 and token DOT_N resolved as shift.
Conflict in state 137 between rule 103 and token DOT_E resolved as shift.
Conflict in state 137 between rule 103 and token DOT_W resolved as shift.
Conflict in state 137 between rule 103 and token DOT_S resolved as shift.
Conflict in state 137 between rule 103 and token DOT_NE resolved as shift.
Conflict in state 137 between rule 103 and token DOT_SE resolved as shift.
Conflict in state 137 between rule 103 and token DOT_NW resolved as shift.
Conflict in state 137 between rule 103 and token DOT_SW resolved as shift.
Conflict in state 137 between rule 103 and token DOT_C resolved as shift.
Conflict in state 137 between rule 103 and token DOT_START resolved as shift.
Conflict in state 137 between rule 103 and token DOT_END resolved as shift.
Conflict in state 137 between rule 103 and token SIN resolved as shift.
Conflict in state 137 between rule 103 and token COS resolved as shift.
Conflict in state 137 between rule 103 and token ATAN2 resolved as shift.
Conflict in state 137 between rule 103 and token LOG resolved as shift.
Conflict in state 137 between rule 103 and token EXP resolved as shift.
Conflict in state 137 between rule 103 and token SQRT resolved as shift.
Conflict in state 137 between rule 103 and token MAX resolved as shift.
Conflict in state 137 between rule 103 and token MIN resolved as shift.
Conflict in state 137 between rule 103 and token INT resolved as shift.
Conflict in state 137 between rule 103 and token RAND resolved as shift.
Conflict in state 137 between rule 103 and token TOP resolved as shift.
Conflict in state 137 between rule 103 and token BOTTOM resolved as shift.
Conflict in state 137 between rule 103 and token UPPER resolved as shift.
Conflict in state 137 between rule 103 and token LOWER resolved as shift.
Conflict in state 137 between rule 103 and token LEFT_CORNER resolved as shift.
Conflict in state 137 between rule 103 and token RIGHT_CORNER resolved as shift.
Conflict in state 137 between rule 103 and token CENTER resolved as shift.
Conflict in state 137 between rule 103 and token END resolved as shift.
Conflict in state 137 between rule 103 and token START resolved as shift.
Conflict in state 137 between rule 103 and token '(' resolved as shift.
Conflict in state 137 between rule 103 and token '`' resolved as shift.
Conflict in state 137 between rule 103 and token '-' resolved as shift.
Conflict in state 137 between rule 103 and token '!' resolved as shift.
Conflict in state 138 between rule 105 and token LABEL resolved as shift.
Conflict in state 138 between rule 105 and token VARIABLE resolved as shift.
Conflict in state 138 between rule 105 and token NUMBER resolved as shift.
Conflict in state 138 between rule 105 and token ORDINAL resolved as shift.
Conflict in state 138 between rule 105 and token LAST resolved as shift.
Conflict in state 138 between rule 105 and token LEFT resolved as reduce.
Conflict in state 138 between rule 105 and token RIGHT resolved as reduce.
Conflict in state 138 between rule 105 and token HERE resolved as shift.
Conflict in state 138 between rule 105 and token DOT_N resolved as shift.
Conflict in state 138 between rule 105 and token DOT_E resolved as shift.
Conflict in state 138 between rule 105 and token DOT_W resolved as shift.
Conflict in state 138 between rule 105 and token DOT_S resolved as shift.
Conflict in state 138 between rule 105 and token DOT_NE resolved as shift.
Conflict in state 138 between rule 105 and token DOT_SE resolved as shift.
Conflict in state 138 between rule 105 and token DOT_NW resolved as shift.
Conflict in state 138 between rule 105 and token DOT_SW resolved as shift.
Conflict in state 138 between rule 105 and token DOT_C resolved as shift.
Conflict in state 138 between rule 105 and token DOT_START resolved as shift.
Conflict in state 138 between rule 105 and token DOT_END resolved as shift.
Conflict in state 138 between rule 105 and token SIN resolved as shift.
Conflict in state 138 between rule 105 and token COS resolved as shift.
Conflict in state 138 between rule 105 and token ATAN2 resolved as shift.
Conflict in state 138 between rule 105 and token LOG resolved as shift.
Conflict in state 138 between rule 105 and token EXP resolved as shift.
Conflict in state 138 between rule 105 and token SQRT resolved as shift.
Conflict in state 138 between rule 105 and token MAX resolved as shift.
Conflict in state 138 between rule 105 and token MIN resolved as shift.
Conflict in state 138 between rule 105 and token INT resolved as shift.
Conflict in state 138 between rule 105 and token RAND resolved as shift.
Conflict in state 138 between rule 105 and token TOP resolved as shift.
Conflict in state 138 between rule 105 and token BOTTOM resolved as shift.
Conflict in state 138 between rule 105 and token UPPER resolved as shift.
Conflict in state 138 between rule 105 and token LOWER resolved as shift.
Conflict in state 138 between rule 105 and token LEFT_CORNER resolved as shift.
Conflict in state 138 between rule 105 and token RIGHT_CORNER resolved as shift.
Conflict in state 138 between rule 105 and token CENTER resolved as shift.
Conflict in state 138 between rule 105 and token END resolved as shift.
Conflict in state 138 between rule 105 and token START resolved as shift.
Conflict in state 138 between rule 105 and token '(' resolved as shift.
Conflict in state 138 between rule 105 and token '`' resolved as shift.
Conflict in state 138 between rule 105 and token '-' resolved as shift.
Conflict in state 138 between rule 105 and token '!' resolved as shift.
Conflict in state 139 between rule 109 and token LABEL resolved as shift.
Conflict in state 139 between rule 109 and token VARIABLE resolved as shift.
Conflict in state 139 between rule 109 and token NUMBER resolved as shift.
Conflict in state 139 between rule 109 and token ORDINAL resolved as shift.
Conflict in state 139 between rule 109 and token LAST resolved as shift.
Conflict in state 139 between rule 109 and token LEFT resolved as reduce.
Conflict in state 139 between rule 109 and token RIGHT resolved as reduce.
Conflict in state 139 between rule 109 and token HERE resolved as shift.
Conflict in state 139 between rule 109 and token DOT_N resolved as shift.
Conflict in state 139 between rule 109 and token DOT_E resolved as shift.
Conflict in state 139 between rule 109 and token DOT_W resolved as shift.
Conflict in state 139 between rule 109 and token DOT_S resolved as shift.
Conflict in state 139 between rule 109 and token DOT_NE resolved as shift.
Conflict in state 139 between rule 109 and token DOT_SE resolved as shift.
Conflict in state 139 between rule 109 and token DOT_NW resolved as shift.
Conflict in state 139 between rule 109 and token DOT_SW resolved as shift.
Conflict in state 139 between rule 109 and token DOT_C resolved as shift.
Conflict in state 139 between rule 109 and token DOT_START resolved as shift.
Conflict in state 139 between rule 109 and token DOT_END resolved as shift.
Conflict in state 139 between rule 109 and token SIN resolved as shift.
Conflict in state 139 between rule 109 and token COS resolved as shift.
Conflict in state 139 between rule 109 and token ATAN2 resolved as shift.
Conflict in state 139 between rule 109 and token LOG resolved as shift.
Conflict in state 139 between rule 109 and token EXP resolved as shift.
Conflict in state 139 between rule 109 and token SQRT resolved as shift.
Conflict in state 139 between rule 109 and token MAX resolved as shift.
Conflict in state 139 between rule 109 and token MIN resolved as shift.
Conflict in state 139 between rule 109 and token INT resolved as shift.
Conflict in state 139 between rule 109 and token RAND resolved as shift.
Conflict in state 139 between rule 109 and token TOP resolved as shift.
Conflict in state 139 between rule 109 and token BOTTOM resolved as shift.
Conflict in state 139 between rule 109 and token UPPER resolved as shift.
Conflict in state 139 between rule 109 and token LOWER resolved as shift.
Conflict in state 139 between rule 109 and token LEFT_CORNER resolved as shift.
Conflict in state 139 between rule 109 and token RIGHT_CORNER resolved as shift.
Conflict in state 139 between rule 109 and token CENTER resolved as shift.
Conflict in state 139 between rule 109 and token END resolved as shift.
Conflict in state 139 between rule 109 and token START resolved as shift.
Conflict in state 139 between rule 109 and token '(' resolved as shift.
Conflict in state 139 between rule 109 and token '`' resolved as shift.
Conflict in state 139 between rule 109 and token '-' resolved as shift.
Conflict in state 139 between rule 109 and token '!' resolved as shift.
Conflict in state 149 between rule 107 and token LABEL resolved as shift.
Conflict in state 149 between rule 107 and token VARIABLE resolved as shift.
Conflict in state 149 between rule 107 and token NUMBER resolved as shift.
Conflict in state 149 between rule 107 and token ORDINAL resolved as shift.
Conflict in state 149 between rule 107 and token LAST resolved as shift.
Conflict in state 149 between rule 107 and token LEFT resolved as reduce.
Conflict in state 149 between rule 107 and token RIGHT resolved as reduce.
Conflict in state 149 between rule 107 and token HERE resolved as shift.
Conflict in state 149 between rule 107 and token DOT_N resolved as shift.
Conflict in state 149 between rule 107 and token DOT_E resolved as shift.
Conflict in state 149 between rule 107 and token DOT_W resolved as shift.
Conflict in state 149 between rule 107 and token DOT_S resolved as shift.
Conflict in state 149 between rule 107 and token DOT_NE resolved as shift.
Conflict in state 149 between rule 107 and token DOT_SE resolved as shift.
Conflict in state 149 between rule 107 and token DOT_NW resolved as shift.
Conflict in state 149 between rule 107 and token DOT_SW resolved as shift.
Conflict in state 149 between rule 107 and token DOT_C resolved as shift.
Conflict in state 149 between rule 107 and token DOT_START resolved as shift.
Conflict in state 149 between rule 107 and token DOT_END resolved as shift.
Conflict in state 149 between rule 107 and token SIN resolved as shift.
Conflict in state 149 between rule 107 and token COS resolved as shift.
Conflict in state 149 between rule 107 and token ATAN2 resolved as shift.
Conflict in state 149 between rule 107 and token LOG resolved as shift.
Conflict in state 149 between rule 107 and token EXP resolved as shift.
Conflict in state 149 between rule 107 and token SQRT resolved as shift.
Conflict in state 149 between rule 107 and token MAX resolved as shift.
Conflict in state 149 between rule 107 and token MIN resolved as shift.
Conflict in state 149 between rule 107 and token INT resolved as shift.
Conflict in state 149 between rule 107 and token RAND resolved as shift.
Conflict in state 149 between rule 107 and token TOP resolved as shift.
Conflict in state 149 between rule 107 and token BOTTOM resolved as shift.
Conflict in state 149 between rule 107 and token UPPER resolved as shift.
Conflict in state 149 between rule 107 and token LOWER resolved as shift.
Conflict in state 149 between rule 107 and token LEFT_CORNER resolved as shift.
Conflict in state 149 between rule 107 and token RIGHT_CORNER resolved as shift.
Conflict in state 149 between rule 107 and token CENTER resolved as shift.
Conflict in state 149 between rule 107 and token END resolved as shift.
Conflict in state 149 between rule 107 and token START resolved as shift.
Conflict in state 149 between rule 107 and token '(' resolved as shift.
Conflict in state 149 between rule 107 and token '`' resolved as shift.
Conflict in state 149 between rule 107 and token '-' resolved as shift.
Conflict in state 149 between rule 107 and token '!' resolved as shift.
Conflict in state 152 between rule 88 and token '-' resolved as shift.
Conflict in state 182 between rule 215 and token ANDAND resolved as reduce.
Conflict in state 182 between rule 215 and token OROR resolved as reduce.
Conflict in state 182 between rule 215 and token NOTEQUAL resolved as reduce.
Conflict in state 182 between rule 215 and token EQUALEQUAL resolved as reduce.
Conflict in state 182 between rule 215 and token LESSEQUAL resolved as reduce.
Conflict in state 182 between rule 215 and token GREATEREQUAL resolved as reduce.
Conflict in state 182 between rule 215 and token '<' resolved as reduce.
Conflict in state 182 between rule 215 and token '>' resolved as reduce.
Conflict in state 182 between rule 215 and token '+' resolved as reduce.
Conflict in state 182 between rule 215 and token '-' resolved as reduce.
Conflict in state 182 between rule 215 and token '*' resolved as reduce.
Conflict in state 182 between rule 215 and token '/' resolved as reduce.
Conflict in state 182 between rule 215 and token '%' resolved as reduce.
Conflict in state 182 between rule 215 and token '^' resolved as shift.
Conflict in state 183 between rule 236 and token ANDAND resolved as reduce.
Conflict in state 183 between rule 236 and token OROR resolved as reduce.
Conflict in state 183 between rule 236 and token NOTEQUAL resolved as reduce.
Conflict in state 183 between rule 236 and token EQUALEQUAL resolved as reduce.
Conflict in state 183 between rule 236 and token LESSEQUAL resolved as reduce.
Conflict in state 183 between rule 236 and token GREATEREQUAL resolved as reduce.
Conflict in state 183 between rule 236 and token '<' resolved as reduce.
Conflict in state 183 between rule 236 and token '>' resolved as reduce.
Conflict in state 183 between rule 236 and token '+' resolved as reduce.
Conflict in state 183 between rule 236 and token '-' resolved as reduce.
Conflict in state 183 between rule 236 and token '*' resolved as reduce.
Conflict in state 183 between rule 236 and token '/' resolved as reduce.
Conflict in state 183 between rule 236 and token '%' resolved as reduce.
Conflict in state 183 between rule 236 and token '^' resolved as shift.
Conflict in state 227 between rule 57 and token ANDAND resolved as reduce.
Conflict in state 227 between rule 57 and token OROR resolved as reduce.
Conflict in state 228 between rule 236 and token ANDAND resolved as reduce.
Conflict in state 228 between rule 236 and token OROR resolved as reduce.
Conflict in state 228 between rule 236 and token NOTEQUAL resolved as reduce.
Conflict in state 228 between rule 236 and token EQUALEQUAL resolved as reduce.
Conflict in state 228 between rule 236 and token LESSEQUAL resolved as reduce.
Conflict in state 228 between rule 236 and token GREATEREQUAL resolved as reduce.
Conflict in state 228 between rule 236 and token '<' resolved as reduce.
Conflict in state 228 between rule 236 and token '>' resolved as reduce.
Conflict in state 228 between rule 236 and token '+' resolved as reduce.
Conflict in state 228 between rule 236 and token '-' resolved as reduce.
Conflict in state 228 between rule 236 and token '*' resolved as reduce.
Conflict in state 228 between rule 236 and token '/' resolved as reduce.
Conflict in state 228 between rule 236 and token '%' resolved as reduce.
Conflict in state 228 between rule 236 and token '^' resolved as shift.
Conflict in state 245 between rule 90 and token '-' resolved as shift.
Conflict in state 246 between rule 92 and token '-' resolved as shift.
Conflict in state 247 between rule 96 and token '-' resolved as shift.
Conflict in state 248 between rule 94 and token '-' resolved as shift.
Conflict in state 249 between rule 84 and token '-' resolved as shift.
Conflict in state 250 between rule 85 and token '-' resolved as shift.
Conflict in state 251 between rule 86 and token '-' resolved as shift.
Conflict in state 252 between rule 87 and token '-' resolved as shift.
Conflict in state 253 between rule 97 and token '-' resolved as shift.
Conflict in state 255 between rule 98 and token '-' resolved as shift.
Conflict in state 256 between rule 99 and token '-' resolved as shift.
Conflict in state 261 between rule 167 and token LEFT resolved as shift.
Conflict in state 261 between rule 167 and token RIGHT resolved as shift.
Conflict in state 261 between rule 167 and token DOT_N resolved as shift.
Conflict in state 261 between rule 167 and token DOT_E resolved as shift.
Conflict in state 261 between rule 167 and token DOT_W resolved as shift.
Conflict in state 261 between rule 167 and token DOT_S resolved as shift.
Conflict in state 261 between rule 167 and token DOT_NE resolved as shift.
Conflict in state 261 between rule 167 and token DOT_SE resolved as shift.
Conflict in state 261 between rule 167 and token DOT_NW resolved as shift.
Conflict in state 261 between rule 167 and token DOT_SW resolved as shift.
Conflict in state 261 between rule 167 and token DOT_C resolved as shift.
Conflict in state 261 between rule 167 and token DOT_START resolved as shift.
Conflict in state 261 between rule 167 and token DOT_END resolved as shift.
Conflict in state 261 between rule 167 and token TOP resolved as shift.
Conflict in state 261 between rule 167 and token BOTTOM resolved as shift.
Conflict in state 261 between rule 167 and token UPPER resolved as shift.
Conflict in state 261 between rule 167 and token LOWER resolved as shift.
Conflict in state 261 between rule 167 and token LEFT_CORNER resolved as shift.
Conflict in state 261 between rule 167 and token RIGHT_CORNER resolved as shift.
Conflict in state 261 between rule 167 and token CENTER resolved as shift.
Conflict in state 261 between rule 167 and token END resolved as shift.
Conflict in state 261 between rule 167 and token START resolved as shift.
Conflict in state 268 between rule 104 and token '-' resolved as shift.
Conflict in state 269 between rule 106 and token '-' resolved as shift.
Conflict in state 270 between rule 110 and token '-' resolved as shift.
Conflict in state 271 between rule 123 and token '-' resolved as shift.
Conflict in state 272 between rule 108 and token '-' resolved as shift.
Conflict in state 305 between rule 234 and token ANDAND resolved as reduce.
Conflict in state 305 between rule 234 and token OROR resolved as reduce.
Conflict in state 305 between rule 234 and token NOTEQUAL resolved as shift.
Conflict in state 305 between rule 234 and token EQUALEQUAL resolved as shift.
Conflict in state 305 between rule 234 and token LESSEQUAL resolved as shift.
Conflict in state 305 between rule 234 and token GREATEREQUAL resolved as shift.
Conflict in state 305 between rule 234 and token '<' resolved as shift.
Conflict in state 305 between rule 234 and token '>' resolved as shift.
Conflict in state 305 between rule 234 and token '+' resolved as shift.
Conflict in state 305 between rule 234 and token '-' resolved as shift.
Conflict in state 305 between rule 234 and token '*' resolved as shift.
Conflict in state 305 between rule 234 and token '/' resolved as shift.
Conflict in state 305 between rule 234 and token '%' resolved as shift.
Conflict in state 305 between rule 234 and token '^' resolved as shift.
Conflict in state 306 between rule 235 and token ANDAND resolved as shift.
Conflict in state 306 between rule 235 and token OROR resolved as reduce.
Conflict in state 306 between rule 235 and token NOTEQUAL resolved as shift.
Conflict in state 306 between rule 235 and token EQUALEQUAL resolved as shift.
Conflict in state 306 between rule 235 and token LESSEQUAL resolved as shift.
Conflict in state 306 between rule 235 and token GREATEREQUAL resolved as shift.
Conflict in state 306 between rule 235 and token '<' resolved as shift.
Conflict in state 306 between rule 235 and token '>' resolved as shift.
Conflict in state 306 between rule 235 and token '+' resolved as shift.
Conflict in state 306 between rule 235 and token '-' resolved as shift.
Conflict in state 306 between rule 235 and token '*' resolved as shift.
Conflict in state 306 between rule 235 and token '/' resolved as shift.
Conflict in state 306 between rule 235 and token '%' resolved as shift.
Conflict in state 306 between rule 235 and token '^' resolved as shift.
Conflict in state 307 between rule 233 and token ANDAND resolved as reduce.
Conflict in state 307 between rule 233 and token OROR resolved as reduce.
Conflict in state 307 between rule 233 and token NOTEQUAL resolved as reduce.
Conflict in state 307 between rule 233 and token EQUALEQUAL resolved as reduce.
Conflict in state 307 between rule 233 and token LESSEQUAL resolved as shift.
Conflict in state 307 between rule 233 and token GREATEREQUAL resolved as shift.
Conflict in state 307 between rule 233 and token '<' resolved as shift.
Conflict in state 307 between rule 233 and token '>' resolved as shift.
Conflict in state 307 between rule 233 and token '+' resolved as shift.
Conflict in state 307 between rule 233 and token '-' resolved as shift.
Conflict in state 307 between rule 233 and token '*' resolved as shift.
Conflict in state 307 between rule 233 and token '/' resolved as shift.
Conflict in state 307 between rule 233 and token '%' resolved as shift.
Conflict in state 307 between rule 233 and token '^' resolved as shift.
Conflict in state 308 between rule 232 and token ANDAND resolved as reduce.
Conflict in state 308 between rule 232 and token OROR resolved as reduce.
Conflict in state 308 between rule 232 and token NOTEQUAL resolved as reduce.
Conflict in state 308 between rule 232 and token EQUALEQUAL resolved as reduce.
Conflict in state 308 between rule 232 and token LESSEQUAL resolved as shift.
Conflict in state 308 between rule 232 and token GREATEREQUAL resolved as shift.
Conflict in state 308 between rule 232 and token '<' resolved as shift.
Conflict in state 308 between rule 232 and token '>' resolved as shift.
Conflict in state 308 between rule 232 and token '+' resolved as shift.
Conflict in state 308 between rule 232 and token '-' resolved as shift.
Conflict in state 308 between rule 232 and token '*' resolved as shift.
Conflict in state 308 between rule 232 and token '/' resolved as shift.
Conflict in state 308 between rule 232 and token '%' resolved as shift.
Conflict in state 308 between rule 232 and token '^' resolved as shift.
Conflict in state 309 between rule 229 and token ANDAND resolved as reduce.
Conflict in state 309 between rule 229 and token OROR resolved as reduce.
Conflict in state 309 between rule 229 and token NOTEQUAL resolved as reduce.
Conflict in state 309 between rule 229 and token EQUALEQUAL resolved as reduce.
Conflict in state 309 between rule 229 and token LESSEQUAL resolved as reduce.
Conflict in state 309 between rule 229 and token GREATEREQUAL resolved as reduce.
Conflict in state 309 between rule 229 and token '<' resolved as reduce.
Conflict in state 309 between rule 229 and token '>' resolved as reduce.
Conflict in state 309 between rule 229 and token '+' resolved as shift.
Conflict in state 309 between rule 229 and token '-' resolved as shift.
Conflict in state 309 between rule 229 and token '*' resolved as shift.
Conflict in state 309 between rule 229 and token '/' resolved as shift.
Conflict in state 309 between rule 229 and token '%' resolved as shift.
Conflict in state 309 between rule 229 and token '^' resolved as shift.
Conflict in state 310 between rule 231 and token ANDAND resolved as reduce.
Conflict in state 310 between rule 231 and token OROR resolved as reduce.
Conflict in state 310 between rule 231 and token NOTEQUAL resolved as reduce.
Conflict in state 310 between rule 231 and token EQUALEQUAL resolved as reduce.
Conflict in state 310 between rule 231 and token LESSEQUAL resolved as reduce.
Conflict in state 310 between rule 231 and token GREATEREQUAL resolved as reduce.
Conflict in state 310 between rule 231 and token '<' resolved as reduce.
Conflict in state 310 between rule 231 and token '>' resolved as reduce.
Conflict in state 310 between rule 231 and token '+' resolved as shift.
Conflict in state 310 between rule 231 and token '-' resolved as shift.
Conflict in state 310 between rule 231 and token '*' resolved as shift.
Conflict in state 310 between rule 231 and token '/' resolved as shift.
Conflict in state 310 between rule 231 and token '%' resolved as shift.
Conflict in state 310 between rule 231 and token '^' resolved as shift.
Conflict in state 311 between rule 139 and token '>' resolved as shift.
Conflict in state 311 between rule 139 and token '+' resolved as shift.
Conflict in state 311 between rule 139 and token '-' resolved as shift.
Conflict in state 313 between rule 228 and token OF resolved as shift.
Conflict in state 313 between rule 228 and token BETWEEN resolved as shift.
Conflict in state 313 between rule 228 and token ANDAND resolved as reduce.
Conflict in state 313 between rule 228 and token OROR resolved as reduce.
Conflict in state 313 between rule 228 and token NOTEQUAL resolved as reduce.
Conflict in state 313 between rule 228 and token EQUALEQUAL resolved as reduce.
Conflict in state 313 between rule 228 and token LESSEQUAL resolved as reduce.
Conflict in state 313 between rule 228 and token GREATEREQUAL resolved as reduce.
Conflict in state 313 between rule 228 and token ',' resolved as reduce.
Conflict in state 313 between rule 228 and token '<' resolved as reduce.
Conflict in state 313 between rule 228 and token '>' resolved as reduce.
Conflict in state 313 between rule 228 and token '+' resolved as shift.
Conflict in state 313 between rule 228 and token '-' resolved as shift.
Conflict in state 313 between rule 228 and token '*' resolved as shift.
Conflict in state 313 between rule 228 and token '/' resolved as shift.
Conflict in state 313 between rule 228 and token '%' resolved as shift.
Conflict in state 313 between rule 228 and token '^' resolved as shift.
Conflict in state 314 between rule 230 and token ANDAND resolved as reduce.
Conflict in state 314 between rule 230 and token OROR resolved as reduce.
Conflict in state 314 between rule 230 and token NOTEQUAL resolved as reduce.
Conflict in state 314 between rule 230 and token EQUALEQUAL resolved as reduce.
Conflict in state 314 between rule 230 and token LESSEQUAL resolved as reduce.
Conflict in state 314 between rule 230 and token GREATEREQUAL resolved as reduce.
Conflict in state 314 between rule 230 and token '<' resolved as reduce.
Conflict in state 314 between rule 230 and token '>' resolved as reduce.
Conflict in state 314 between rule 230 and token '+' resolved as shift.
Conflict in state 314 between rule 230 and token '-' resolved as shift.
Conflict in state 314 between rule 230 and token '*' resolved as shift.
Conflict in state 314 between rule 230 and token '/' resolved as shift.
Conflict in state 314 between rule 230 and token '%' resolved as shift.
Conflict in state 314 between rule 230 and token '^' resolved as shift.
Conflict in state 315 between rule 209 and token ANDAND resolved as reduce.
Conflict in state 315 between rule 209 and token OROR resolved as reduce.
Conflict in state 315 between rule 209 and token NOTEQUAL resolved as reduce.
Conflict in state 315 between rule 209 and token EQUALEQUAL resolved as reduce.
Conflict in state 315 between rule 209 and token LESSEQUAL resolved as reduce.
Conflict in state 315 between rule 209 and token GREATEREQUAL resolved as reduce.
Conflict in state 315 between rule 209 and token '<' resolved as reduce.
Conflict in state 315 between rule 209 and token '>' resolved as reduce.
Conflict in state 315 between rule 209 and token '+' resolved as reduce.
Conflict in state 315 between rule 209 and token '-' resolved as reduce.
Conflict in state 315 between rule 209 and token '*' resolved as shift.
Conflict in state 315 between rule 209 and token '/' resolved as shift.
Conflict in state 315 between rule 209 and token '%' resolved as shift.
Conflict in state 315 between rule 209 and token '^' resolved as shift.
Conflict in state 316 between rule 210 and token ANDAND resolved as reduce.
Conflict in state 316 between rule 210 and token OROR resolved as reduce.
Conflict in state 316 between rule 210 and token NOTEQUAL resolved as reduce.
Conflict in state 316 between rule 210 and token EQUALEQUAL resolved as reduce.
Conflict in state 316 between rule 210 and token LESSEQUAL resolved as reduce.
Conflict in state 316 between rule 210 and token GREATEREQUAL resolved as reduce.
Conflict in state 316 between rule 210 and token '<' resolved as reduce.
Conflict in state 316 between rule 210 and token '>' resolved as reduce.
Conflict in state 316 between rule 210 and token '+' resolved as reduce.
Conflict in state 316 between rule 210 and token '-' resolved as reduce.
Conflict in state 316 between rule 210 and token '*' resolved as shift.
Conflict in state 316 between rule 210 and token '/' resolved as shift.
Conflict in state 316 between rule 210 and token '%' resolved as shift.
Conflict in state 316 between rule 210 and token '^' resolved as shift.
Conflict in state 317 between rule 211 and token ANDAND resolved as reduce.
Conflict in state 317 between rule 211 and token OROR resolved as reduce.
Conflict in state 317 between rule 211 and token NOTEQUAL resolved as reduce.
Conflict in state 317 between rule 211 and token EQUALEQUAL resolved as reduce.
Conflict in state 317 between rule 211 and token LESSEQUAL resolved as reduce.
Conflict in state 317 between rule 211 and token GREATEREQUAL resolved as reduce.
Conflict in state 317 between rule 211 and token '<' resolved as reduce.
Conflict in state 317 between rule 211 and token '>' resolved as reduce.
Conflict in state 317 between rule 211 and token '+' resolved as reduce.
Conflict in state 317 between rule 211 and token '-' resolved as reduce.
Conflict in state 317 between rule 211 and token '*' resolved as reduce.
Conflict in state 317 between rule 211 and token '/' resolved as reduce.
Conflict in state 317 between rule 211 and token '%' resolved as reduce.
Conflict in state 317 between rule 211 and token '^' resolved as shift.
Conflict in state 318 between rule 212 and token ANDAND resolved as reduce.
Conflict in state 318 between rule 212 and token OROR resolved as reduce.
Conflict in state 318 between rule 212 and token NOTEQUAL resolved as reduce.
Conflict in state 318 between rule 212 and token EQUALEQUAL resolved as reduce.
Conflict in state 318 between rule 212 and token LESSEQUAL resolved as reduce.
Conflict in state 318 between rule 212 and token GREATEREQUAL resolved as reduce.
Conflict in state 318 between rule 212 and token '<' resolved as reduce.
Conflict in state 318 between rule 212 and token '>' resolved as reduce.
Conflict in state 318 between rule 212 and token '+' resolved as reduce.
Conflict in state 318 between rule 212 and token '-' resolved as reduce.
Conflict in state 318 between rule 212 and token '*' resolved as reduce.
Conflict in state 318 between rule 212 and token '/' resolved as reduce.
Conflict in state 318 between rule 212 and token '%' resolved as reduce.
Conflict in state 318 between rule 212 and token '^' resolved as shift.
Conflict in state 319 between rule 213 and token ANDAND resolved as reduce.
Conflict in state 319 between rule 213 and token OROR resolved as reduce.
Conflict in state 319 between rule 213 and token NOTEQUAL resolved as reduce.
Conflict in state 319 between rule 213 and token EQUALEQUAL resolved as reduce.
Conflict in state 319 between rule 213 and token LESSEQUAL resolved as reduce.
Conflict in state 319 between rule 213 and token GREATEREQUAL resolved as reduce.
Conflict in state 319 between rule 213 and token '<' resolved as reduce.
Conflict in state 319 between rule 213 and token '>' resolved as reduce.
Conflict in state 319 between rule 213 and token '+' resolved as reduce.
Conflict in state 319 between rule 213 and token '-' resolved as reduce.
Conflict in state 319 between rule 213 and token '*' resolved as reduce.
Conflict in state 319 between rule 213 and token '/' resolved as reduce.
Conflict in state 319 between rule 213 and token '%' resolved as reduce.
Conflict in state 319 between rule 213 and token '^' resolved as shift.
Conflict in state 320 between rule 214 and token ANDAND resolved as reduce.
Conflict in state 320 between rule 214 and token OROR resolved as reduce.
Conflict in state 320 between rule 214 and token NOTEQUAL resolved as reduce.
Conflict in state 320 between rule 214 and token EQUALEQUAL resolved as reduce.
Conflict in state 320 between rule 214 and token LESSEQUAL resolved as reduce.
Conflict in state 320 between rule 214 and token GREATEREQUAL resolved as reduce.
Conflict in state 320 between rule 214 and token '<' resolved as reduce.
Conflict in state 320 between rule 214 and token '>' resolved as reduce.
Conflict in state 320 between rule 214 and token '+' resolved as reduce.
Conflict in state 320 between rule 214 and token '-' resolved as reduce.
Conflict in state 320 between rule 214 and token '*' resolved as reduce.
Conflict in state 320 between rule 214 and token '/' resolved as reduce.
Conflict in state 320 between rule 214 and token '%' resolved as reduce.
Conflict in state 320 between rule 214 and token '^' resolved as shift.
Conflict in state 324 between rule 51 and token ANDAND resolved as reduce.
Conflict in state 324 between rule 51 and token OROR resolved as reduce.
Conflict in state 325 between rule 52 and token ANDAND resolved as reduce.
Conflict in state 325 between rule 52 and token OROR resolved as reduce.
Conflict in state 326 between rule 54 and token ANDAND resolved as shift.
Conflict in state 326 between rule 54 and token OROR resolved as reduce.
Conflict in state 327 between rule 55 and token ANDAND resolved as shift.
Conflict in state 327 between rule 55 and token OROR resolved as reduce.
Conflict in state 330 between rule 53 and token ANDAND resolved as reduce.
Conflict in state 330 between rule 53 and token OROR resolved as reduce.
Conflict in state 331 between rule 234 and token ANDAND resolved as reduce.
Conflict in state 331 between rule 234 and token OROR resolved as reduce.
Conflict in state 331 between rule 234 and token NOTEQUAL resolved as shift.
Conflict in state 331 between rule 234 and token EQUALEQUAL resolved as shift.
Conflict in state 331 between rule 234 and token LESSEQUAL resolved as shift.
Conflict in state 331 between rule 234 and token GREATEREQUAL resolved as shift.
Conflict in state 331 between rule 234 and token '<' resolved as shift.
Conflict in state 331 between rule 234 and token '>' resolved as shift.
Conflict in state 331 between rule 234 and token '+' resolved as shift.
Conflict in state 331 between rule 234 and token '-' resolved as shift.
Conflict in state 331 between rule 234 and token '*' resolved as shift.
Conflict in state 331 between rule 234 and token '/' resolved as shift.
Conflict in state 331 between rule 234 and token '%' resolved as shift.
Conflict in state 331 between rule 234 and token '^' resolved as shift.
Conflict in state 332 between rule 56 and token ANDAND resolved as shift.
Conflict in state 332 between rule 56 and token OROR resolved as reduce.
Conflict in state 333 between rule 235 and token ANDAND resolved as shift.
Conflict in state 333 between rule 235 and token OROR resolved as reduce.
Conflict in state 333 between rule 235 and token NOTEQUAL resolved as shift.
Conflict in state 333 between rule 235 and token EQUALEQUAL resolved as shift.
Conflict in state 333 between rule 235 and token LESSEQUAL resolved as shift.
Conflict in state 333 between rule 235 and token GREATEREQUAL resolved as shift.
Conflict in state 333 between rule 235 and token '<' resolved as shift.
Conflict in state 333 between rule 235 and token '>' resolved as shift.
Conflict in state 333 between rule 235 and token '+' resolved as shift.
Conflict in state 333 between rule 235 and token '-' resolved as shift.
Conflict in state 333 between rule 235 and token '*' resolved as shift.
Conflict in state 333 between rule 235 and token '/' resolved as shift.
Conflict in state 333 between rule 235 and token '%' resolved as shift.
Conflict in state 333 between rule 235 and token '^' resolved as shift.
Conflict in state 334 between rule 228 and token ANDAND resolved as reduce.
Conflict in state 334 between rule 228 and token OROR resolved as reduce.
Conflict in state 334 between rule 228 and token NOTEQUAL resolved as reduce.
Conflict in state 334 between rule 228 and token EQUALEQUAL resolved as reduce.
Conflict in state 334 between rule 228 and token LESSEQUAL resolved as reduce.
Conflict in state 334 between rule 228 and token GREATEREQUAL resolved as reduce.
Conflict in state 334 between rule 228 and token '<' resolved as reduce.
Conflict in state 334 between rule 228 and token '>' resolved as reduce.
Conflict in state 334 between rule 228 and token '+' resolved as shift.
Conflict in state 334 between rule 228 and token '-' resolved as shift.
Conflict in state 334 between rule 228 and token '*' resolved as shift.
Conflict in state 334 between rule 228 and token '/' resolved as shift.
Conflict in state 334 between rule 228 and token '%' resolved as shift.
Conflict in state 334 between rule 228 and token '^' resolved as shift.
Conflict in state 382 between rule 135 and token '+' resolved as shift.
Conflict in state 382 between rule 135 and token '-' resolved as shift.

Grammar
rule 1    top -> optional_separator
rule 2    top -> element_list
rule 3    element_list -> optional_separator middle_element_list optional_separator
rule 4    middle_element_list -> element
rule 5    middle_element_list -> middle_element_list separator element
rule 6    optional_separator ->		/* empty */
rule 7    optional_separator -> separator
rule 8    separator -> ';'
rule 9    separator -> separator ';'
rule 10   placeless_element -> VARIABLE '=' any_expr
rule 11   placeless_element -> VARIABLE ':' '=' any_expr
rule 12   placeless_element -> UP
rule 13   placeless_element -> DOWN
rule 14   placeless_element -> LEFT
rule 15   placeless_element -> RIGHT
rule 16   placeless_element -> COMMAND_LINE
rule 17   placeless_element -> COMMAND print_args
rule 18   placeless_element -> PRINT print_args
rule 19   @1 ->		/* empty */
rule 20   placeless_element -> SH @1 DELIMITED
rule 21   placeless_element -> COPY TEXT
rule 22   @2 ->		/* empty */
rule 23   @3 ->		/* empty */
rule 24   placeless_element -> COPY TEXT THRU @2 DELIMITED @3 until
rule 25   @4 ->		/* empty */
rule 26   @5 ->		/* empty */
rule 27   placeless_element -> COPY THRU @4 DELIMITED @5 until
rule 28   @6 ->		/* empty */
rule 29   placeless_element -> FOR VARIABLE '=' expr TO expr optional_by DO @6 DELIMITED
rule 30   placeless_element -> simple_if
rule 31   @7 ->		/* empty */
rule 32   placeless_element -> simple_if ELSE @7 DELIMITED
rule 33   placeless_element -> reset_variables
rule 34   placeless_element -> RESET
rule 35   reset_variables -> RESET VARIABLE
rule 36   reset_variables -> reset_variables VARIABLE
rule 37   reset_variables -> reset_variables ',' VARIABLE
rule 38   print_args -> print_arg
rule 39   print_args -> print_args print_arg
rule 40   print_arg -> expr
rule 41   print_arg -> text
rule 42   print_arg -> position
rule 43   @8 ->		/* empty */
rule 44   simple_if -> IF any_expr THEN @8 DELIMITED
rule 45   until ->		/* empty */
rule 46   until -> UNTIL TEXT
rule 47   any_expr -> expr
rule 48   any_expr -> text_expr
rule 49   text_expr -> text EQUALEQUAL text
rule 50   text_expr -> text NOTEQUAL text
rule 51   text_expr -> text_expr ANDAND text_expr
rule 52   text_expr -> text_expr ANDAND expr
rule 53   text_expr -> expr ANDAND text_expr
rule 54   text_expr -> text_expr OROR text_expr
rule 55   text_expr -> text_expr OROR expr
rule 56   text_expr -> expr OROR text_expr
rule 57   text_expr -> '!' text_expr
rule 58   optional_by ->		/* empty */
rule 59   optional_by -> BY expr
rule 60   optional_by -> BY '*' expr
rule 61   element -> object_spec
rule 62   element -> LABEL ':' optional_separator element
rule 63   element -> LABEL ':' optional_separator position_not_place
rule 64   element -> LABEL ':' optional_separator place
rule 65   @9 ->		/* empty */
rule 66   @10 ->		/* empty */
rule 67   element -> '{' @9 element_list '}' @10 optional_element
rule 68   element -> placeless_element
rule 69   optional_element ->		/* empty */
rule 70   optional_element -> element
rule 71   object_spec -> BOX
rule 72   object_spec -> CIRCLE
rule 73   object_spec -> ELLIPSE
rule 74   object_spec -> ARC
rule 75   object_spec -> LINE
rule 76   object_spec -> ARROW
rule 77   object_spec -> MOVE
rule 78   object_spec -> SPLINE
rule 79   object_spec -> text
rule 80   object_spec -> PLOT expr
rule 81   object_spec -> PLOT expr text
rule 82   @11 ->		/* empty */
rule 83   object_spec -> '[' @11 element_list ']'
rule 84   object_spec -> object_spec HEIGHT expr
rule 85   object_spec -> object_spec RADIUS expr
rule 86   object_spec -> object_spec WIDTH expr
rule 87   object_spec -> object_spec DIAMETER expr
rule 88   object_spec -> object_spec expr
rule 89   object_spec -> object_spec UP
rule 90   object_spec -> object_spec UP expr
rule 91   object_spec -> object_spec DOWN
rule 92   object_spec -> object_spec DOWN expr
rule 93   object_spec -> object_spec RIGHT
rule 94   object_spec -> object_spec RIGHT expr
rule 95   object_spec -> object_spec LEFT
rule 96   object_spec -> object_spec LEFT expr
rule 97   object_spec -> object_spec FROM position
rule 98   object_spec -> object_spec TO position
rule 99   object_spec -> object_spec AT position
rule 100  object_spec -> object_spec WITH path
rule 101  object_spec -> object_spec BY expr_pair
rule 102  object_spec -> object_spec THEN
rule 103  object_spec -> object_spec DOTTED
rule 104  object_spec -> object_spec DOTTED expr
rule 105  object_spec -> object_spec DASHED
rule 106  object_spec -> object_spec DASHED expr
rule 107  object_spec -> object_spec FILL
rule 108  object_spec -> object_spec FILL expr
rule 109  object_spec -> object_spec CHOP
rule 110  object_spec -> object_spec CHOP expr
rule 111  object_spec -> object_spec SAME
rule 112  object_spec -> object_spec INVISIBLE
rule 113  object_spec -> object_spec LEFT_ARROW_HEAD
rule 114  object_spec -> object_spec RIGHT_ARROW_HEAD
rule 115  object_spec -> object_spec DOUBLE_ARROW_HEAD
rule 116  object_spec -> object_spec CW
rule 117  object_spec -> object_spec CCW
rule 118  object_spec -> object_spec text
rule 119  object_spec -> object_spec LJUST
rule 120  object_spec -> object_spec RJUST
rule 121  object_spec -> object_spec ABOVE
rule 122  object_spec -> object_spec BELOW
rule 123  object_spec -> object_spec THICKNESS expr
rule 124  object_spec -> object_spec ALIGNED
rule 125  text -> TEXT
rule 126  text -> SPRINTF '(' TEXT sprintf_args ')'
rule 127  sprintf_args ->		/* empty */
rule 128  sprintf_args -> sprintf_args ',' expr
rule 129  position -> position_not_place
rule 130  position -> place
rule 131  position_not_place -> expr_pair
rule 132  position_not_place -> position '+' expr_pair
rule 133  position_not_place -> position '-' expr_pair
rule 134  position_not_place -> '(' position ',' position ')'
rule 135  position_not_place -> expr between position AND position
rule 136  position_not_place -> expr '<' position ',' position '>'
rule 137  between -> BETWEEN
rule 138  between -> OF THE WAY BETWEEN
rule 139  expr_pair -> expr ',' expr
rule 140  expr_pair -> '(' expr_pair ')'
rule 141  place -> label
rule 142  place -> label corner
rule 143  place -> corner label
rule 144  place -> corner OF label
rule 145  place -> HERE
rule 146  label -> LABEL
rule 147  label -> nth_primitive
rule 148  label -> label '.' LABEL
rule 149  ordinal -> ORDINAL
rule 150  ordinal -> '`' any_expr TH
rule 151  optional_ordinal_last -> LAST
rule 152  optional_ordinal_last -> ordinal LAST
rule 153  nth_primitive -> ordinal object_type
rule 154  nth_primitive -> optional_ordinal_last object_type
rule 155  object_type -> BOX
rule 156  object_type -> CIRCLE
rule 157  object_type -> ELLIPSE
rule 158  object_type -> ARC
rule 159  object_type -> LINE
rule 160  object_type -> ARROW
rule 161  object_type -> SPLINE
rule 162  object_type -> '[' ']'
rule 163  object_type -> TEXT
rule 164  label_path -> '.' LABEL
rule 165  label_path -> label_path '.' LABEL
rule 166  relative_path -> corner
rule 167  relative_path -> label_path
rule 168  relative_path -> label_path corner
rule 169  path -> relative_path
rule 170  path -> ORDINAL LAST object_type relative_path
rule 171  path -> LAST object_type relative_path
rule 172  path -> ORDINAL object_type relative_path
rule 173  path -> LABEL relative_path
rule 174  corner -> DOT_N
rule 175  corner -> DOT_E
rule 176  corner -> DOT_W
rule 177  corner -> DOT_S
rule 178  corner -> DOT_NE
rule 179  corner -> DOT_SE
rule 180  corner -> DOT_NW
rule 181  corner -> DOT_SW
rule 182  corner -> DOT_C
rule 183  corner -> DOT_START
rule 184  corner -> DOT_END
rule 185  corner -> TOP
rule 186  corner -> BOTTOM
rule 187  corner -> LEFT
rule 188  corner -> RIGHT
rule 189  corner -> UPPER LEFT
rule 190  corner -> LOWER LEFT
rule 191  corner -> UPPER RIGHT
rule 192  corner -> LOWER RIGHT
rule 193  corner -> LEFT_CORNER
rule 194  corner -> RIGHT_CORNER
rule 195  corner -> UPPER LEFT_CORNER
rule 196  corner -> LOWER LEFT_CORNER
rule 197  corner -> UPPER RIGHT_CORNER
rule 198  corner -> LOWER RIGHT_CORNER
rule 199  corner -> CENTER
rule 200  corner -> START
rule 201  corner -> END
rule 202  expr -> VARIABLE
rule 203  expr -> NUMBER
rule 204  expr -> place DOT_X
rule 205  expr -> place DOT_Y
rule 206  expr -> place DOT_HT
rule 207  expr -> place DOT_WID
rule 208  expr -> place DOT_RAD
rule 209  expr -> expr '+' expr
rule 210  expr -> expr '-' expr
rule 211  expr -> expr '*' expr
rule 212  expr -> expr '/' expr
rule 213  expr -> expr '%' expr
rule 214  expr -> expr '^' expr
rule 215  expr -> '-' expr
rule 216  expr -> '(' any_expr ')'
rule 217  expr -> SIN '(' any_expr ')'
rule 218  expr -> COS '(' any_expr ')'
rule 219  expr -> ATAN2 '(' any_expr ',' any_expr ')'
rule 220  expr -> LOG '(' any_expr ')'
rule 221  expr -> EXP '(' any_expr ')'
rule 222  expr -> SQRT '(' any_expr ')'
rule 223  expr -> MAX '(' any_expr ',' any_expr ')'
rule 224  expr -> MIN '(' any_expr ',' any_expr ')'
rule 225  expr -> INT '(' any_expr ')'
rule 226  expr -> RAND '(' any_expr ')'
rule 227  expr -> RAND '(' ')'
rule 228  expr -> expr '<' expr
rule 229  expr -> expr LESSEQUAL expr
rule 230  expr -> expr '>' expr
rule 231  expr -> expr GREATEREQUAL expr
rule 232  expr -> expr EQUALEQUAL expr
rule 233  expr -> expr NOTEQUAL expr
rule 234  expr -> expr ANDAND expr
rule 235  expr -> expr OROR expr
rule 236  expr -> '!' expr

Terminals, with rules where they appear

$ (-1)
'!' (33) 57 236
'%' (37) 213
'(' (40) 126 134 140 216 217 218 219 220 221 222 223 224 225 226 227
')' (41) 126 134 140 216 217 218 219 220 221 222 223 224 225 226 227
'*' (42) 60 211
'+' (43) 132 209
',' (44) 37 128 134 136 139 219 223 224
'-' (45) 133 210 215
'.' (46) 148 164 165
'/' (47) 212
':' (58) 11 62 63 64
';' (59) 8 9
'<' (60) 136 228
'=' (61) 10 11 29
'>' (62) 136 230
'[' (91) 83 162
']' (93) 83 162
'^' (94) 214
'`' (96) 150
'{' (123) 67
'}' (125) 67
error (256)
LABEL (258) 62 63 64 146 148 164 165 173
VARIABLE (259) 10 11 29 35 36 37 202
NUMBER (260) 203
TEXT (261) 21 24 46 125 126 163
COMMAND_LINE (262) 16
DELIMITED (263) 20 24 27 29 32 44
ORDINAL (264) 149 170 172
TH (265) 150
LEFT_ARROW_HEAD (266) 113
RIGHT_ARROW_HEAD (267) 114
DOUBLE_ARROW_HEAD (268) 115
LAST (269) 151 152 170 171
UP (270) 12 89 90
DOWN (271) 13 91 92
LEFT (272) 14 95 96 187 189 190
RIGHT (273) 15 93 94 188 191 192
BOX (274) 71 155
CIRCLE (275) 72 156
ELLIPSE (276) 73 157
ARC (277) 74 158
LINE (278) 75 159
ARROW (279) 76 160
MOVE (280) 77
SPLINE (281) 78 161
HEIGHT (282) 84
RADIUS (283) 85
WIDTH (284) 86
DIAMETER (285) 87
FROM (286) 97
TO (287) 29 98
AT (288) 99
WITH (289) 100
BY (290) 59 60 101
THEN (291) 44 102
DOTTED (292) 103 104
DASHED (293) 105 106
CHOP (294) 109 110
SAME (295) 111
INVISIBLE (296) 112
LJUST (297) 119
RJUST (298) 120
ABOVE (299) 121
BELOW (300) 122
OF (301) 138 144
THE (302) 138
WAY (303) 138
BETWEEN (304) 137 138
AND (305) 135
HERE (306) 145
DOT_N (307) 174
DOT_E (308) 175
DOT_W (309) 176
DOT_S (310) 177
DOT_NE (311) 178
DOT_SE (312) 179
DOT_NW (313) 180
DOT_SW (314) 181
DOT_C (315) 182
DOT_START (316) 183
DOT_END (317) 184
DOT_X (318) 204
DOT_Y (319) 205
DOT_HT (320) 206
DOT_WID (321) 207
DOT_RAD (322) 208
SIN (323) 217
COS (324) 218
ATAN2 (325) 219
LOG (326) 220
EXP (327) 221
SQRT (328) 222
MAX (329) 223
MIN (330) 224
INT (331) 225
RAND (332) 226 227
COPY (333) 21 24 27
THRU (334) 24 27
TOP (335) 185
BOTTOM (336) 186
UPPER (337) 189 191 195 197
LOWER (338) 190 192 196 198
SH (339) 20
PRINT (340) 18
CW (341) 116
CCW (342) 117
FOR (343) 29
DO (344) 29
IF (345) 44
ELSE (346) 32
ANDAND (347) 51 52 53 234
OROR (348) 54 55 56 235
NOTEQUAL (349) 50 233
EQUALEQUAL (350) 49 232
LESSEQUAL (351) 229
GREATEREQUAL (352) 231
LEFT_CORNER (353) 193 195 196
RIGHT_CORNER (354) 194 197 198
CENTER (355) 199
END (356) 201
START (357) 200
RESET (358) 34 35
UNTIL (359) 46
PLOT (360) 80 81
THICKNESS (361) 123
FILL (362) 107 108
ALIGNED (363) 124
SPRINTF (364) 126
COMMAND (365) 17
DEFINE (366)
UNDEF (367)

Nonterminals, with rules where they appear

top (134)
    on left: 1 2
element_list (135)
    on left: 3, on right: 2 67 83
middle_element_list (136)
    on left: 4 5, on right: 3 5
optional_separator (137)
    on left: 6 7, on right: 1 3 62 63 64
separator (138)
    on left: 8 9, on right: 5 7 9
placeless_element (139)
    on left: 10 11 12 13 14 15 16 17 18 20 21 24 27 29 30 32 33 34
   , on right: 68
@1 (140)
    on left: 19, on right: 20
@2 (141)
    on left: 22, on right: 24
@3 (142)
    on left: 23, on right: 24
@4 (143)
    on left: 25, on right: 27
@5 (144)
    on left: 26, on right: 27
@6 (145)
    on left: 28, on right: 29
@7 (146)
    on left: 31, on right: 32
reset_variables (147)
    on left: 35 36 37, on right: 33 36 37
print_args (148)
    on left: 38 39, on right: 17 18 39
print_arg (149)
    on left: 40 41 42, on right: 38 39
simple_if (150)
    on left: 44, on right: 30 32
@8 (151)
    on left: 43, on right: 44
until (152)
    on left: 45 46, on right: 24 27
any_expr (153)
    on left: 47 48, on right: 10 11 44 150 216 217 218 219 220 221
    222 223 224 225 226
text_expr (154)
    on left: 49 50 51 52 53 54 55 56 57, on right: 48 51 52 53 54 55
    56 57
optional_by (155)
    on left: 58 59 60, on right: 29
element (156)
    on left: 61 62 63 64 67 68, on right: 4 5 62 70
@9 (157)
    on left: 65, on right: 67
@10 (158)
    on left: 66, on right: 67
optional_element (159)
    on left: 69 70, on right: 67
object_spec (160)
    on left: 71 72 73 74 75 76 77 78 79 80 81 83 84 85 86 87 88 89
    90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108
    109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124
   , on right: 61 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100
    101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116
    117 118 119 120 121 122 123 124
@11 (161)
    on left: 82, on right: 83
text (162)
    on left: 125 126, on right: 41 49 50 79 81 118
sprintf_args (163)
    on left: 127 128, on right: 126 128
position (164)
    on left: 129 130, on right: 42 97 98 99 132 133 134 135 136
position_not_place (165)
    on left: 131 132 133 134 135 136, on right: 63 129
between (166)
    on left: 137 138, on right: 135
expr_pair (167)
    on left: 139 140, on right: 101 131 132 133 140
place (168)
    on left: 141 142 143 144 145, on right: 64 130 204 205 206 207
    208
label (169)
    on left: 146 147 148, on right: 141 142 143 144 148
ordinal (170)
    on left: 149 150, on right: 152 153
optional_ordinal_last (171)
    on left: 151 152, on right: 154
nth_primitive (172)
    on left: 153 154, on right: 147
object_type (173)
    on left: 155 156 157 158 159 160 161 162 163, on right: 153 154
    170 171 172
label_path (174)
    on left: 164 165, on right: 165 167 168
relative_path (175)
    on left: 166 167 168, on right: 169 170 171 172 173
path (176)
    on left: 169 170 171 172 173, on right: 100
corner (177)
    on left: 174 175 176 177 178 179 180 181 182 183 184 185 186 187
    188 189 190 191 192 193 194 195 196 197 198 199 200 201,
    on right: 142 143 144 166 168
expr (178)
    on left: 202 203 204 205 206 207 208 209 210 211 212 213 214 215
    216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231
    232 233 234 235 236, on right: 29 40 47 52 53 55 56 59 60 80 81
    84 85 86 87 88 90 92 94 96 104 106 108 110 123 128 135 136 139
    209 210 211 212 213 214 215 228 229 230 231 232 233 234 235 236


state 0

    ';' 	shift, and go to state 1

    $default	reduce using rule 6 (optional_separator)

    top 	go to state 402
    element_list	go to state 2
    optional_separator	go to state 3
    separator	go to state 4



state 1

    separator  ->  ';' .   (rule 8)

    $default	reduce using rule 8 (separator)



state 2

    top  ->  element_list .   (rule 2)

    $default	reduce using rule 2 (top)



state 3

    top  ->  optional_separator .   (rule 1)
    element_list  ->  optional_separator . middle_element_list optional_separator   (rule 3)

    LABEL	shift, and go to state 5
    VARIABLE	shift, and go to state 6
    TEXT	shift, and go to state 7
    COMMAND_LINE	shift, and go to state 8
    UP  	shift, and go to state 9
    DOWN	shift, and go to state 10
    LEFT	shift, and go to state 11
    RIGHT	shift, and go to state 12
    BOX 	shift, and go to state 13
    CIRCLE	shift, and go to state 14
    ELLIPSE	shift, and go to state 15
    ARC 	shift, and go to state 16
    LINE	shift, and go to state 17
    ARROW	shift, and go to state 18
    MOVE	shift, and go to state 19
    SPLINE	shift, and go to state 20
    COPY	shift, and go to state 21
    SH  	shift, and go to state 22
    PRINT	shift, and go to state 23
    FOR 	shift, and go to state 24
    IF  	shift, and go to state 25
    RESET	shift, and go to state 26
    PLOT	shift, and go to state 27
    SPRINTF	shift, and go to state 28
    COMMAND	shift, and go to state 29
    '{' 	shift, and go to state 30
    '[' 	shift, and go to state 31

    $default	reduce using rule 1 (top)

    middle_element_list	go to state 32
    placeless_element	go to state 33
    reset_variables	go to state 34
    simple_if	go to state 35
    element	go to state 36
    object_spec	go to state 37
    text	go to state 38



state 4

    optional_separator  ->  separator .   (rule 7)
    separator  ->  separator . ';'   (rule 9)

    ';' 	shift, and go to state 39

    $default	reduce using rule 7 (optional_separator)



state 5

    element  ->  LABEL . ':' optional_separator element   (rule 62)
    element  ->  LABEL . ':' optional_separator position_not_place   (rule 63)
    element  ->  LABEL . ':' optional_separator place   (rule 64)

    ':' 	shift, and go to state 40



state 6

    placeless_element  ->  VARIABLE . '=' any_expr   (rule 10)
    placeless_element  ->  VARIABLE . ':' '=' any_expr   (rule 11)

    '=' 	shift, and go to state 41
    ':' 	shift, and go to state 42



state 7

    text  ->  TEXT .   (rule 125)

    $default	reduce using rule 125 (text)



state 8

    placeless_element  ->  COMMAND_LINE .   (rule 16)

    $default	reduce using rule 16 (placeless_element)



state 9

    placeless_element  ->  UP .   (rule 12)

    $default	reduce using rule 12 (placeless_element)



state 10

    placeless_element  ->  DOWN .   (rule 13)

    $default	reduce using rule 13 (placeless_element)



state 11

    placeless_element  ->  LEFT .   (rule 14)

    $default	reduce using rule 14 (placeless_element)



state 12

    placeless_element  ->  RIGHT .   (rule 15)

    $default	reduce using rule 15 (placeless_element)



state 13

    object_spec  ->  BOX .   (rule 71)

    $default	reduce using rule 71 (object_spec)



state 14

    object_spec  ->  CIRCLE .   (rule 72)

    $default	reduce using rule 72 (object_spec)



state 15

    object_spec  ->  ELLIPSE .   (rule 73)

    $default	reduce using rule 73 (object_spec)



state 16

    object_spec  ->  ARC .   (rule 74)

    $default	reduce using rule 74 (object_spec)



state 17

    object_spec  ->  LINE .   (rule 75)

    $default	reduce using rule 75 (object_spec)



state 18

    object_spec  ->  ARROW .   (rule 76)

    $default	reduce using rule 76 (object_spec)



state 19

    object_spec  ->  MOVE .   (rule 77)

    $default	reduce using rule 77 (object_spec)



state 20

    object_spec  ->  SPLINE .   (rule 78)

    $default	reduce using rule 78 (object_spec)



state 21

    placeless_element  ->  COPY . TEXT   (rule 21)
    placeless_element  ->  COPY . TEXT THRU @2 DELIMITED @3 until   (rule 24)
    placeless_element  ->  COPY . THRU @4 DELIMITED @5 until   (rule 27)

    TEXT	shift, and go to state 43
    THRU	shift, and go to state 44



state 22

    placeless_element  ->  SH . @1 DELIMITED   (rule 20)

    $default	reduce using rule 19 (@1)

    @1  	go to state 45



state 23

    placeless_element  ->  PRINT . print_args   (rule 18)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    TEXT	shift, and go to state 7
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    SPRINTF	shift, and go to state 28
    '(' 	shift, and go to state 84
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    print_args	go to state 88
    print_arg	go to state 89
    text	go to state 90
    position	go to state 91
    position_not_place	go to state 92
    expr_pair	go to state 93
    place	go to state 94
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 100



state 24

    placeless_element  ->  FOR . VARIABLE '=' expr TO expr optional_by DO @6 DELIMITED   (rule 29)

    VARIABLE	shift, and go to state 101



state 25

    simple_if  ->  IF . any_expr THEN @8 DELIMITED   (rule 44)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    TEXT	shift, and go to state 7
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    SPRINTF	shift, and go to state 28
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 103

    any_expr	go to state 104
    text_expr	go to state 105
    text	go to state 106
    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 108



state 26

    placeless_element  ->  RESET .   (rule 34)
    reset_variables  ->  RESET . VARIABLE   (rule 35)

    VARIABLE	shift, and go to state 109

    $default	reduce using rule 34 (placeless_element)



state 27

    object_spec  ->  PLOT . expr   (rule 80)
    object_spec  ->  PLOT . expr text   (rule 81)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 110



state 28

    text  ->  SPRINTF . '(' TEXT sprintf_args ')'   (rule 126)

    '(' 	shift, and go to state 111



state 29

    placeless_element  ->  COMMAND . print_args   (rule 17)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    TEXT	shift, and go to state 7
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    SPRINTF	shift, and go to state 28
    '(' 	shift, and go to state 84
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    print_args	go to state 112
    print_arg	go to state 89
    text	go to state 90
    position	go to state 91
    position_not_place	go to state 92
    expr_pair	go to state 93
    place	go to state 94
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 100



state 30

    element  ->  '{' . @9 element_list '}' @10 optional_element   (rule 67)

    $default	reduce using rule 65 (@9)

    @9  	go to state 113



state 31

    object_spec  ->  '[' . @11 element_list ']'   (rule 83)

    $default	reduce using rule 82 (@11)

    @11 	go to state 114



state 32

    element_list  ->  optional_separator middle_element_list . optional_separator   (rule 3)
    middle_element_list  ->  middle_element_list . separator element   (rule 5)

    ';' 	shift, and go to state 1

    $default	reduce using rule 6 (optional_separator)

    optional_separator	go to state 115
    separator	go to state 116



state 33

    element  ->  placeless_element .   (rule 68)

    $default	reduce using rule 68 (element)



state 34

    placeless_element  ->  reset_variables .   (rule 33)
    reset_variables  ->  reset_variables . VARIABLE   (rule 36)
    reset_variables  ->  reset_variables . ',' VARIABLE   (rule 37)

    VARIABLE	shift, and go to state 117
    ',' 	shift, and go to state 118

    $default	reduce using rule 33 (placeless_element)



state 35

    placeless_element  ->  simple_if .   (rule 30)
    placeless_element  ->  simple_if . ELSE @7 DELIMITED   (rule 32)

    ELSE	shift, and go to state 119

    $default	reduce using rule 30 (placeless_element)



state 36

    middle_element_list  ->  element .   (rule 4)

    $default	reduce using rule 4 (middle_element_list)



state 37

    element  ->  object_spec .   (rule 61)
    object_spec  ->  object_spec . HEIGHT expr   (rule 84)
    object_spec  ->  object_spec . RADIUS expr   (rule 85)
    object_spec  ->  object_spec . WIDTH expr   (rule 86)
    object_spec  ->  object_spec . DIAMETER expr   (rule 87)
    object_spec  ->  object_spec . expr   (rule 88)
    object_spec  ->  object_spec . UP   (rule 89)
    object_spec  ->  object_spec . UP expr   (rule 90)
    object_spec  ->  object_spec . DOWN   (rule 91)
    object_spec  ->  object_spec . DOWN expr   (rule 92)
    object_spec  ->  object_spec . RIGHT   (rule 93)
    object_spec  ->  object_spec . RIGHT expr   (rule 94)
    object_spec  ->  object_spec . LEFT   (rule 95)
    object_spec  ->  object_spec . LEFT expr   (rule 96)
    object_spec  ->  object_spec . FROM position   (rule 97)
    object_spec  ->  object_spec . TO position   (rule 98)
    object_spec  ->  object_spec . AT position   (rule 99)
    object_spec  ->  object_spec . WITH path   (rule 100)
    object_spec  ->  object_spec . BY expr_pair   (rule 101)
    object_spec  ->  object_spec . THEN   (rule 102)
    object_spec  ->  object_spec . DOTTED   (rule 103)
    object_spec  ->  object_spec . DOTTED expr   (rule 104)
    object_spec  ->  object_spec . DASHED   (rule 105)
    object_spec  ->  object_spec . DASHED expr   (rule 106)
    object_spec  ->  object_spec . FILL   (rule 107)
    object_spec  ->  object_spec . FILL expr   (rule 108)
    object_spec  ->  object_spec . CHOP   (rule 109)
    object_spec  ->  object_spec . CHOP expr   (rule 110)
    object_spec  ->  object_spec . SAME   (rule 111)
    object_spec  ->  object_spec . INVISIBLE   (rule 112)
    object_spec  ->  object_spec . LEFT_ARROW_HEAD   (rule 113)
    object_spec  ->  object_spec . RIGHT_ARROW_HEAD   (rule 114)
    object_spec  ->  object_spec . DOUBLE_ARROW_HEAD   (rule 115)
    object_spec  ->  object_spec . CW   (rule 116)
    object_spec  ->  object_spec . CCW   (rule 117)
    object_spec  ->  object_spec . text   (rule 118)
    object_spec  ->  object_spec . LJUST   (rule 119)
    object_spec  ->  object_spec . RJUST   (rule 120)
    object_spec  ->  object_spec . ABOVE   (rule 121)
    object_spec  ->  object_spec . BELOW   (rule 122)
    object_spec  ->  object_spec . THICKNESS expr   (rule 123)
    object_spec  ->  object_spec . ALIGNED   (rule 124)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    TEXT	shift, and go to state 7
    ORDINAL	shift, and go to state 49
    LEFT_ARROW_HEAD	shift, and go to state 120
    RIGHT_ARROW_HEAD	shift, and go to state 121
    DOUBLE_ARROW_HEAD	shift, and go to state 122
    LAST	shift, and go to state 50
    UP  	shift, and go to state 123
    DOWN	shift, and go to state 124
    LEFT	shift, and go to state 125
    RIGHT	shift, and go to state 126
    HEIGHT	shift, and go to state 127
    RADIUS	shift, and go to state 128
    WIDTH	shift, and go to state 129
    DIAMETER	shift, and go to state 130
    FROM	shift, and go to state 131
    TO  	shift, and go to state 132
    AT  	shift, and go to state 133
    WITH	shift, and go to state 134
    BY  	shift, and go to state 135
    THEN	shift, and go to state 136
    DOTTED	shift, and go to state 137
    DASHED	shift, and go to state 138
    CHOP	shift, and go to state 139
    SAME	shift, and go to state 140
    INVISIBLE	shift, and go to state 141
    LJUST	shift, and go to state 142
    RJUST	shift, and go to state 143
    ABOVE	shift, and go to state 144
    BELOW	shift, and go to state 145
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    CW  	shift, and go to state 146
    CCW 	shift, and go to state 147
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    THICKNESS	shift, and go to state 148
    FILL	shift, and go to state 149
    ALIGNED	shift, and go to state 150
    SPRINTF	shift, and go to state 28
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    $default	reduce using rule 61 (element)

    text	go to state 151
    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 152



state 38

    object_spec  ->  text .   (rule 79)

    $default	reduce using rule 79 (object_spec)



state 39

    separator  ->  separator ';' .   (rule 9)

    $default	reduce using rule 9 (separator)



state 40

    element  ->  LABEL ':' . optional_separator element   (rule 62)
    element  ->  LABEL ':' . optional_separator position_not_place   (rule 63)
    element  ->  LABEL ':' . optional_separator place   (rule 64)

    ';' 	shift, and go to state 1

    $default	reduce using rule 6 (optional_separator)

    optional_separator	go to state 153
    separator	go to state 4



state 41

    placeless_element  ->  VARIABLE '=' . any_expr   (rule 10)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    TEXT	shift, and go to state 7
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    SPRINTF	shift, and go to state 28
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 103

    any_expr	go to state 154
    text_expr	go to state 105
    text	go to state 106
    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 108



state 42

    placeless_element  ->  VARIABLE ':' . '=' any_expr   (rule 11)

    '=' 	shift, and go to state 155



state 43

    placeless_element  ->  COPY TEXT .   (rule 21)
    placeless_element  ->  COPY TEXT . THRU @2 DELIMITED @3 until   (rule 24)

    THRU	shift, and go to state 156

    $default	reduce using rule 21 (placeless_element)



state 44

    placeless_element  ->  COPY THRU . @4 DELIMITED @5 until   (rule 27)

    $default	reduce using rule 25 (@4)

    @4  	go to state 157



state 45

    placeless_element  ->  SH @1 . DELIMITED   (rule 20)

    DELIMITED	shift, and go to state 158



state 46

    label  ->  LABEL .   (rule 146)

    $default	reduce using rule 146 (label)



state 47

    expr  ->  VARIABLE .   (rule 202)

    $default	reduce using rule 202 (expr)



state 48

    expr  ->  NUMBER .   (rule 203)

    $default	reduce using rule 203 (expr)



state 49

    ordinal  ->  ORDINAL .   (rule 149)

    $default	reduce using rule 149 (ordinal)



state 50

    optional_ordinal_last  ->  LAST .   (rule 151)

    $default	reduce using rule 151 (optional_ordinal_last)



state 51

    corner  ->  LEFT .   (rule 187)

    $default	reduce using rule 187 (corner)



state 52

    corner  ->  RIGHT .   (rule 188)

    $default	reduce using rule 188 (corner)



state 53

    place  ->  HERE .   (rule 145)

    $default	reduce using rule 145 (place)



state 54

    corner  ->  DOT_N .   (rule 174)

    $default	reduce using rule 174 (corner)



state 55

    corner  ->  DOT_E .   (rule 175)

    $default	reduce using rule 175 (corner)



state 56

    corner  ->  DOT_W .   (rule 176)

    $default	reduce using rule 176 (corner)



state 57

    corner  ->  DOT_S .   (rule 177)

    $default	reduce using rule 177 (corner)



state 58

    corner  ->  DOT_NE .   (rule 178)

    $default	reduce using rule 178 (corner)



state 59

    corner  ->  DOT_SE .   (rule 179)

    $default	reduce using rule 179 (corner)



state 60

    corner  ->  DOT_NW .   (rule 180)

    $default	reduce using rule 180 (corner)



state 61

    corner  ->  DOT_SW .   (rule 181)

    $default	reduce using rule 181 (corner)



state 62

    corner  ->  DOT_C .   (rule 182)

    $default	reduce using rule 182 (corner)



state 63

    corner  ->  DOT_START .   (rule 183)

    $default	reduce using rule 183 (corner)



state 64

    corner  ->  DOT_END .   (rule 184)

    $default	reduce using rule 184 (corner)



state 65

    expr  ->  SIN . '(' any_expr ')'   (rule 217)

    '(' 	shift, and go to state 159



state 66

    expr  ->  COS . '(' any_expr ')'   (rule 218)

    '(' 	shift, and go to state 160



state 67

    expr  ->  ATAN2 . '(' any_expr ',' any_expr ')'   (rule 219)

    '(' 	shift, and go to state 161



state 68

    expr  ->  LOG . '(' any_expr ')'   (rule 220)

    '(' 	shift, and go to state 162



state 69

    expr  ->  EXP . '(' any_expr ')'   (rule 221)

    '(' 	shift, and go to state 163



state 70

    expr  ->  SQRT . '(' any_expr ')'   (rule 222)

    '(' 	shift, and go to state 164



state 71

    expr  ->  MAX . '(' any_expr ',' any_expr ')'   (rule 223)

    '(' 	shift, and go to state 165



state 72

    expr  ->  MIN . '(' any_expr ',' any_expr ')'   (rule 224)

    '(' 	shift, and go to state 166



state 73

    expr  ->  INT . '(' any_expr ')'   (rule 225)

    '(' 	shift, and go to state 167



state 74

    expr  ->  RAND . '(' any_expr ')'   (rule 226)
    expr  ->  RAND . '(' ')'   (rule 227)

    '(' 	shift, and go to state 168



state 75

    corner  ->  TOP .   (rule 185)

    $default	reduce using rule 185 (corner)



state 76

    corner  ->  BOTTOM .   (rule 186)

    $default	reduce using rule 186 (corner)



state 77

    corner  ->  UPPER . LEFT   (rule 189)
    corner  ->  UPPER . RIGHT   (rule 191)
    corner  ->  UPPER . LEFT_CORNER   (rule 195)
    corner  ->  UPPER . RIGHT_CORNER   (rule 197)

    LEFT	shift, and go to state 169
    RIGHT	shift, and go to state 170
    LEFT_CORNER	shift, and go to state 171
    RIGHT_CORNER	shift, and go to state 172



state 78

    corner  ->  LOWER . LEFT   (rule 190)
    corner  ->  LOWER . RIGHT   (rule 192)
    corner  ->  LOWER . LEFT_CORNER   (rule 196)
    corner  ->  LOWER . RIGHT_CORNER   (rule 198)

    LEFT	shift, and go to state 173
    RIGHT	shift, and go to state 174
    LEFT_CORNER	shift, and go to state 175
    RIGHT_CORNER	shift, and go to state 176



state 79

    corner  ->  LEFT_CORNER .   (rule 193)

    $default	reduce using rule 193 (corner)



state 80

    corner  ->  RIGHT_CORNER .   (rule 194)

    $default	reduce using rule 194 (corner)



state 81

    corner  ->  CENTER .   (rule 199)

    $default	reduce using rule 199 (corner)



state 82

    corner  ->  END .   (rule 201)

    $default	reduce using rule 201 (corner)



state 83

    corner  ->  START .   (rule 200)

    $default	reduce using rule 200 (corner)



state 84

    position_not_place  ->  '(' . position ',' position ')'   (rule 134)
    expr_pair  ->  '(' . expr_pair ')'   (rule 140)
    expr  ->  '(' . any_expr ')'   (rule 216)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    TEXT	shift, and go to state 7
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    SPRINTF	shift, and go to state 28
    '(' 	shift, and go to state 84
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 103

    any_expr	go to state 177
    text_expr	go to state 105
    text	go to state 106
    position	go to state 178
    position_not_place	go to state 92
    expr_pair	go to state 179
    place	go to state 94
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 180



state 85

    ordinal  ->  '`' . any_expr TH   (rule 150)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    TEXT	shift, and go to state 7
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    SPRINTF	shift, and go to state 28
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 103

    any_expr	go to state 181
    text_expr	go to state 105
    text	go to state 106
    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 108



state 86

    expr  ->  '-' . expr   (rule 215)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 182



state 87

    expr  ->  '!' . expr   (rule 236)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 183



state 88

    placeless_element  ->  PRINT print_args .   (rule 18)
    print_args  ->  print_args . print_arg   (rule 39)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    TEXT	shift, and go to state 7
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    SPRINTF	shift, and go to state 28
    '(' 	shift, and go to state 84
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    $default	reduce using rule 18 (placeless_element)

    print_arg	go to state 184
    text	go to state 90
    position	go to state 91
    position_not_place	go to state 92
    expr_pair	go to state 93
    place	go to state 94
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 100



state 89

    print_args  ->  print_arg .   (rule 38)

    $default	reduce using rule 38 (print_args)



state 90

    print_arg  ->  text .   (rule 41)

    $default	reduce using rule 41 (print_arg)



state 91

    print_arg  ->  position .   (rule 42)
    position_not_place  ->  position . '+' expr_pair   (rule 132)
    position_not_place  ->  position . '-' expr_pair   (rule 133)

    '+' 	shift, and go to state 185
    '-' 	shift, and go to state 186

    $default	reduce using rule 42 (print_arg)



state 92

    position  ->  position_not_place .   (rule 129)

    $default	reduce using rule 129 (position)



state 93

    position_not_place  ->  expr_pair .   (rule 131)

    $default	reduce using rule 131 (position_not_place)



state 94

    position  ->  place .   (rule 130)
    expr  ->  place . DOT_X   (rule 204)
    expr  ->  place . DOT_Y   (rule 205)
    expr  ->  place . DOT_HT   (rule 206)
    expr  ->  place . DOT_WID   (rule 207)
    expr  ->  place . DOT_RAD   (rule 208)

    DOT_X	shift, and go to state 187
    DOT_Y	shift, and go to state 188
    DOT_HT	shift, and go to state 189
    DOT_WID	shift, and go to state 190
    DOT_RAD	shift, and go to state 191

    $default	reduce using rule 130 (position)



state 95

    place  ->  label .   (rule 141)
    place  ->  label . corner   (rule 142)
    label  ->  label . '.' LABEL   (rule 148)

    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '.' 	shift, and go to state 192

    $default	reduce using rule 141 (place)

    corner	go to state 193



state 96

    optional_ordinal_last  ->  ordinal . LAST   (rule 152)
    nth_primitive  ->  ordinal . object_type   (rule 153)

    TEXT	shift, and go to state 194
    LAST	shift, and go to state 195
    BOX 	shift, and go to state 196
    CIRCLE	shift, and go to state 197
    ELLIPSE	shift, and go to state 198
    ARC 	shift, and go to state 199
    LINE	shift, and go to state 200
    ARROW	shift, and go to state 201
    SPLINE	shift, and go to state 202
    '[' 	shift, and go to state 203

    object_type	go to state 204



state 97

    nth_primitive  ->  optional_ordinal_last . object_type   (rule 154)

    TEXT	shift, and go to state 194
    BOX 	shift, and go to state 196
    CIRCLE	shift, and go to state 197
    ELLIPSE	shift, and go to state 198
    ARC 	shift, and go to state 199
    LINE	shift, and go to state 200
    ARROW	shift, and go to state 201
    SPLINE	shift, and go to state 202
    '[' 	shift, and go to state 203

    object_type	go to state 205



state 98

    label  ->  nth_primitive .   (rule 147)

    $default	reduce using rule 147 (label)



state 99

    place  ->  corner . label   (rule 143)
    place  ->  corner . OF label   (rule 144)

    LABEL	shift, and go to state 46
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    OF  	shift, and go to state 206
    '`' 	shift, and go to state 85

    label	go to state 207
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98



state 100

    print_arg  ->  expr .   (rule 40)
    position_not_place  ->  expr . between position AND position   (rule 135)
    position_not_place  ->  expr . '<' position ',' position '>'   (rule 136)
    expr_pair  ->  expr . ',' expr   (rule 139)
    expr  ->  expr . '+' expr   (rule 209)
    expr  ->  expr . '-' expr   (rule 210)
    expr  ->  expr . '*' expr   (rule 211)
    expr  ->  expr . '/' expr   (rule 212)
    expr  ->  expr . '%' expr   (rule 213)
    expr  ->  expr . '^' expr   (rule 214)
    expr  ->  expr . '<' expr   (rule 228)
    expr  ->  expr . LESSEQUAL expr   (rule 229)
    expr  ->  expr . '>' expr   (rule 230)
    expr  ->  expr . GREATEREQUAL expr   (rule 231)
    expr  ->  expr . EQUALEQUAL expr   (rule 232)
    expr  ->  expr . NOTEQUAL expr   (rule 233)
    expr  ->  expr . ANDAND expr   (rule 234)
    expr  ->  expr . OROR expr   (rule 235)

    OF  	shift, and go to state 208
    BETWEEN	shift, and go to state 209
    ANDAND	shift, and go to state 210
    OROR	shift, and go to state 211
    NOTEQUAL	shift, and go to state 212
    EQUALEQUAL	shift, and go to state 213
    LESSEQUAL	shift, and go to state 214
    GREATEREQUAL	shift, and go to state 215
    ',' 	shift, and go to state 216
    '<' 	shift, and go to state 217
    '>' 	shift, and go to state 218
    '+' 	shift, and go to state 219
    '-' 	shift, and go to state 220
    '*' 	shift, and go to state 221
    '/' 	shift, and go to state 222
    '%' 	shift, and go to state 223
    '^' 	shift, and go to state 224

    $default	reduce using rule 40 (print_arg)

    between	go to state 225



state 101

    placeless_element  ->  FOR VARIABLE . '=' expr TO expr optional_by DO @6 DELIMITED   (rule 29)

    '=' 	shift, and go to state 226



state 102

    expr  ->  '(' . any_expr ')'   (rule 216)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    TEXT	shift, and go to state 7
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    SPRINTF	shift, and go to state 28
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 103

    any_expr	go to state 177
    text_expr	go to state 105
    text	go to state 106
    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 108



state 103

    text_expr  ->  '!' . text_expr   (rule 57)
    expr  ->  '!' . expr   (rule 236)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    TEXT	shift, and go to state 7
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    SPRINTF	shift, and go to state 28
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 103

    text_expr	go to state 227
    text	go to state 106
    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 228



state 104

    simple_if  ->  IF any_expr . THEN @8 DELIMITED   (rule 44)

    THEN	shift, and go to state 229



state 105

    any_expr  ->  text_expr .   (rule 48)
    text_expr  ->  text_expr . ANDAND text_expr   (rule 51)
    text_expr  ->  text_expr . ANDAND expr   (rule 52)
    text_expr  ->  text_expr . OROR text_expr   (rule 54)
    text_expr  ->  text_expr . OROR expr   (rule 55)

    ANDAND	shift, and go to state 230
    OROR	shift, and go to state 231

    $default	reduce using rule 48 (any_expr)



state 106

    text_expr  ->  text . EQUALEQUAL text   (rule 49)
    text_expr  ->  text . NOTEQUAL text   (rule 50)

    NOTEQUAL	shift, and go to state 232
    EQUALEQUAL	shift, and go to state 233



state 107

    expr  ->  place . DOT_X   (rule 204)
    expr  ->  place . DOT_Y   (rule 205)
    expr  ->  place . DOT_HT   (rule 206)
    expr  ->  place . DOT_WID   (rule 207)
    expr  ->  place . DOT_RAD   (rule 208)

    DOT_X	shift, and go to state 187
    DOT_Y	shift, and go to state 188
    DOT_HT	shift, and go to state 189
    DOT_WID	shift, and go to state 190
    DOT_RAD	shift, and go to state 191



state 108

    any_expr  ->  expr .   (rule 47)
    text_expr  ->  expr . ANDAND text_expr   (rule 53)
    text_expr  ->  expr . OROR text_expr   (rule 56)
    expr  ->  expr . '+' expr   (rule 209)
    expr  ->  expr . '-' expr   (rule 210)
    expr  ->  expr . '*' expr   (rule 211)
    expr  ->  expr . '/' expr   (rule 212)
    expr  ->  expr . '%' expr   (rule 213)
    expr  ->  expr . '^' expr   (rule 214)
    expr  ->  expr . '<' expr   (rule 228)
    expr  ->  expr . LESSEQUAL expr   (rule 229)
    expr  ->  expr . '>' expr   (rule 230)
    expr  ->  expr . GREATEREQUAL expr   (rule 231)
    expr  ->  expr . EQUALEQUAL expr   (rule 232)
    expr  ->  expr . NOTEQUAL expr   (rule 233)
    expr  ->  expr . ANDAND expr   (rule 234)
    expr  ->  expr . OROR expr   (rule 235)

    ANDAND	shift, and go to state 234
    OROR	shift, and go to state 235
    NOTEQUAL	shift, and go to state 212
    EQUALEQUAL	shift, and go to state 213
    LESSEQUAL	shift, and go to state 214
    GREATEREQUAL	shift, and go to state 215
    '<' 	shift, and go to state 236
    '>' 	shift, and go to state 218
    '+' 	shift, and go to state 219
    '-' 	shift, and go to state 220
    '*' 	shift, and go to state 221
    '/' 	shift, and go to state 222
    '%' 	shift, and go to state 223
    '^' 	shift, and go to state 224

    $default	reduce using rule 47 (any_expr)



state 109

    reset_variables  ->  RESET VARIABLE .   (rule 35)

    $default	reduce using rule 35 (reset_variables)



state 110

    object_spec  ->  PLOT expr .   (rule 80)
    object_spec  ->  PLOT expr . text   (rule 81)
    expr  ->  expr . '+' expr   (rule 209)
    expr  ->  expr . '-' expr   (rule 210)
    expr  ->  expr . '*' expr   (rule 211)
    expr  ->  expr . '/' expr   (rule 212)
    expr  ->  expr . '%' expr   (rule 213)
    expr  ->  expr . '^' expr   (rule 214)
    expr  ->  expr . '<' expr   (rule 228)
    expr  ->  expr . LESSEQUAL expr   (rule 229)
    expr  ->  expr . '>' expr   (rule 230)
    expr  ->  expr . GREATEREQUAL expr   (rule 231)
    expr  ->  expr . EQUALEQUAL expr   (rule 232)
    expr  ->  expr . NOTEQUAL expr   (rule 233)
    expr  ->  expr . ANDAND expr   (rule 234)
    expr  ->  expr . OROR expr   (rule 235)

    TEXT	shift, and go to state 7
    ANDAND	shift, and go to state 210
    OROR	shift, and go to state 211
    NOTEQUAL	shift, and go to state 212
    EQUALEQUAL	shift, and go to state 213
    LESSEQUAL	shift, and go to state 214
    GREATEREQUAL	shift, and go to state 215
    SPRINTF	shift, and go to state 28
    '<' 	shift, and go to state 236
    '>' 	shift, and go to state 218
    '+' 	shift, and go to state 219
    '-' 	shift, and go to state 220
    '*' 	shift, and go to state 221
    '/' 	shift, and go to state 222
    '%' 	shift, and go to state 223
    '^' 	shift, and go to state 224

    $default	reduce using rule 80 (object_spec)

    text	go to state 237



state 111

    text  ->  SPRINTF '(' . TEXT sprintf_args ')'   (rule 126)

    TEXT	shift, and go to state 238



state 112

    placeless_element  ->  COMMAND print_args .   (rule 17)
    print_args  ->  print_args . print_arg   (rule 39)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    TEXT	shift, and go to state 7
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    SPRINTF	shift, and go to state 28
    '(' 	shift, and go to state 84
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    $default	reduce using rule 17 (placeless_element)

    print_arg	go to state 184
    text	go to state 90
    position	go to state 91
    position_not_place	go to state 92
    expr_pair	go to state 93
    place	go to state 94
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 100



state 113

    element  ->  '{' @9 . element_list '}' @10 optional_element   (rule 67)

    ';' 	shift, and go to state 1

    $default	reduce using rule 6 (optional_separator)

    element_list	go to state 239
    optional_separator	go to state 240
    separator	go to state 4



state 114

    object_spec  ->  '[' @11 . element_list ']'   (rule 83)

    ';' 	shift, and go to state 1

    $default	reduce using rule 6 (optional_separator)

    element_list	go to state 241
    optional_separator	go to state 240
    separator	go to state 4



state 115

    element_list  ->  optional_separator middle_element_list optional_separator .   (rule 3)

    $default	reduce using rule 3 (element_list)



state 116

    middle_element_list  ->  middle_element_list separator . element   (rule 5)
    optional_separator  ->  separator .   (rule 7)
    separator  ->  separator . ';'   (rule 9)

    LABEL	shift, and go to state 5
    VARIABLE	shift, and go to state 6
    TEXT	shift, and go to state 7
    COMMAND_LINE	shift, and go to state 8
    UP  	shift, and go to state 9
    DOWN	shift, and go to state 10
    LEFT	shift, and go to state 11
    RIGHT	shift, and go to state 12
    BOX 	shift, and go to state 13
    CIRCLE	shift, and go to state 14
    ELLIPSE	shift, and go to state 15
    ARC 	shift, and go to state 16
    LINE	shift, and go to state 17
    ARROW	shift, and go to state 18
    MOVE	shift, and go to state 19
    SPLINE	shift, and go to state 20
    COPY	shift, and go to state 21
    SH  	shift, and go to state 22
    PRINT	shift, and go to state 23
    FOR 	shift, and go to state 24
    IF  	shift, and go to state 25
    RESET	shift, and go to state 26
    PLOT	shift, and go to state 27
    SPRINTF	shift, and go to state 28
    COMMAND	shift, and go to state 29
    ';' 	shift, and go to state 39
    '{' 	shift, and go to state 30
    '[' 	shift, and go to state 31

    $default	reduce using rule 7 (optional_separator)

    placeless_element	go to state 33
    reset_variables	go to state 34
    simple_if	go to state 35
    element	go to state 242
    object_spec	go to state 37
    text	go to state 38



state 117

    reset_variables  ->  reset_variables VARIABLE .   (rule 36)

    $default	reduce using rule 36 (reset_variables)



state 118

    reset_variables  ->  reset_variables ',' . VARIABLE   (rule 37)

    VARIABLE	shift, and go to state 243



state 119

    placeless_element  ->  simple_if ELSE . @7 DELIMITED   (rule 32)

    $default	reduce using rule 31 (@7)

    @7  	go to state 244



state 120

    object_spec  ->  object_spec LEFT_ARROW_HEAD .   (rule 113)

    $default	reduce using rule 113 (object_spec)



state 121

    object_spec  ->  object_spec RIGHT_ARROW_HEAD .   (rule 114)

    $default	reduce using rule 114 (object_spec)



state 122

    object_spec  ->  object_spec DOUBLE_ARROW_HEAD .   (rule 115)

    $default	reduce using rule 115 (object_spec)



state 123

    object_spec  ->  object_spec UP .   (rule 89)
    object_spec  ->  object_spec UP . expr   (rule 90)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    $default	reduce using rule 89 (object_spec)

    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 245



state 124

    object_spec  ->  object_spec DOWN .   (rule 91)
    object_spec  ->  object_spec DOWN . expr   (rule 92)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    $default	reduce using rule 91 (object_spec)

    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 246



state 125

    object_spec  ->  object_spec LEFT .   (rule 95)
    object_spec  ->  object_spec LEFT . expr   (rule 96)
    corner  ->  LEFT .   (rule 187)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    BY  	[reduce using rule 95 (object_spec)]
    THEN	[reduce using rule 95 (object_spec)]
    DOTTED	[reduce using rule 95 (object_spec)]
    INVISIBLE	[reduce using rule 95 (object_spec)]
    OF  	[reduce using rule 187 (corner)]
    ']' 	[reduce using rule 95 (object_spec)]
    $default	reduce using rule 95 (object_spec)

    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 247



state 126

    object_spec  ->  object_spec RIGHT .   (rule 93)
    object_spec  ->  object_spec RIGHT . expr   (rule 94)
    corner  ->  RIGHT .   (rule 188)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    BY  	[reduce using rule 93 (object_spec)]
    THEN	[reduce using rule 93 (object_spec)]
    DOTTED	[reduce using rule 93 (object_spec)]
    INVISIBLE	[reduce using rule 93 (object_spec)]
    OF  	[reduce using rule 188 (corner)]
    ']' 	[reduce using rule 93 (object_spec)]
    $default	reduce using rule 93 (object_spec)

    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 248



state 127

    object_spec  ->  object_spec HEIGHT . expr   (rule 84)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 249



state 128

    object_spec  ->  object_spec RADIUS . expr   (rule 85)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 250



state 129

    object_spec  ->  object_spec WIDTH . expr   (rule 86)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 251



state 130

    object_spec  ->  object_spec DIAMETER . expr   (rule 87)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 252



state 131

    object_spec  ->  object_spec FROM . position   (rule 97)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '(' 	shift, and go to state 84
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    position	go to state 253
    position_not_place	go to state 92
    expr_pair	go to state 93
    place	go to state 94
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 254



state 132

    object_spec  ->  object_spec TO . position   (rule 98)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '(' 	shift, and go to state 84
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    position	go to state 255
    position_not_place	go to state 92
    expr_pair	go to state 93
    place	go to state 94
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 254



state 133

    object_spec  ->  object_spec AT . position   (rule 99)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '(' 	shift, and go to state 84
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    position	go to state 256
    position_not_place	go to state 92
    expr_pair	go to state 93
    place	go to state 94
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 254



state 134

    object_spec  ->  object_spec WITH . path   (rule 100)

    LABEL	shift, and go to state 257
    ORDINAL	shift, and go to state 258
    LAST	shift, and go to state 259
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '.' 	shift, and go to state 260

    label_path	go to state 261
    relative_path	go to state 262
    path	go to state 263
    corner	go to state 264



state 135

    object_spec  ->  object_spec BY . expr_pair   (rule 101)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '(' 	shift, and go to state 265
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    expr_pair	go to state 266
    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 267



state 136

    object_spec  ->  object_spec THEN .   (rule 102)

    $default	reduce using rule 102 (object_spec)



state 137

    object_spec  ->  object_spec DOTTED .   (rule 103)
    object_spec  ->  object_spec DOTTED . expr   (rule 104)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    $default	reduce using rule 103 (object_spec)

    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 268



state 138

    object_spec  ->  object_spec DASHED .   (rule 105)
    object_spec  ->  object_spec DASHED . expr   (rule 106)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    $default	reduce using rule 105 (object_spec)

    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 269



state 139

    object_spec  ->  object_spec CHOP .   (rule 109)
    object_spec  ->  object_spec CHOP . expr   (rule 110)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    $default	reduce using rule 109 (object_spec)

    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 270



state 140

    object_spec  ->  object_spec SAME .   (rule 111)

    $default	reduce using rule 111 (object_spec)



state 141

    object_spec  ->  object_spec INVISIBLE .   (rule 112)

    $default	reduce using rule 112 (object_spec)



state 142

    object_spec  ->  object_spec LJUST .   (rule 119)

    $default	reduce using rule 119 (object_spec)



state 143

    object_spec  ->  object_spec RJUST .   (rule 120)

    $default	reduce using rule 120 (object_spec)



state 144

    object_spec  ->  object_spec ABOVE .   (rule 121)

    $default	reduce using rule 121 (object_spec)



state 145

    object_spec  ->  object_spec BELOW .   (rule 122)

    $default	reduce using rule 122 (object_spec)



state 146

    object_spec  ->  object_spec CW .   (rule 116)

    $default	reduce using rule 116 (object_spec)



state 147

    object_spec  ->  object_spec CCW .   (rule 117)

    $default	reduce using rule 117 (object_spec)



state 148

    object_spec  ->  object_spec THICKNESS . expr   (rule 123)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 271



state 149

    object_spec  ->  object_spec FILL .   (rule 107)
    object_spec  ->  object_spec FILL . expr   (rule 108)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    $default	reduce using rule 107 (object_spec)

    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 272



state 150

    object_spec  ->  object_spec ALIGNED .   (rule 124)

    $default	reduce using rule 124 (object_spec)



state 151

    object_spec  ->  object_spec text .   (rule 118)

    $default	reduce using rule 118 (object_spec)



state 152

    object_spec  ->  object_spec expr .   (rule 88)
    expr  ->  expr . '+' expr   (rule 209)
    expr  ->  expr . '-' expr   (rule 210)
    expr  ->  expr . '*' expr   (rule 211)
    expr  ->  expr . '/' expr   (rule 212)
    expr  ->  expr . '%' expr   (rule 213)
    expr  ->  expr . '^' expr   (rule 214)
    expr  ->  expr . '<' expr   (rule 228)
    expr  ->  expr . LESSEQUAL expr   (rule 229)
    expr  ->  expr . '>' expr   (rule 230)
    expr  ->  expr . GREATEREQUAL expr   (rule 231)
    expr  ->  expr . EQUALEQUAL expr   (rule 232)
    expr  ->  expr . NOTEQUAL expr   (rule 233)
    expr  ->  expr . ANDAND expr   (rule 234)
    expr  ->  expr . OROR expr   (rule 235)

    ANDAND	shift, and go to state 210
    OROR	shift, and go to state 211
    NOTEQUAL	shift, and go to state 212
    EQUALEQUAL	shift, and go to state 213
    LESSEQUAL	shift, and go to state 214
    GREATEREQUAL	shift, and go to state 215
    '<' 	shift, and go to state 236
    '>' 	shift, and go to state 218
    '+' 	shift, and go to state 219
    '-' 	shift, and go to state 220
    '*' 	shift, and go to state 221
    '/' 	shift, and go to state 222
    '%' 	shift, and go to state 223
    '^' 	shift, and go to state 224

    $default	reduce using rule 88 (object_spec)



state 153

    element  ->  LABEL ':' optional_separator . element   (rule 62)
    element  ->  LABEL ':' optional_separator . position_not_place   (rule 63)
    element  ->  LABEL ':' optional_separator . place   (rule 64)

    LABEL	shift, and go to state 273
    VARIABLE	shift, and go to state 274
    NUMBER	shift, and go to state 48
    TEXT	shift, and go to state 7
    COMMAND_LINE	shift, and go to state 8
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    UP  	shift, and go to state 9
    DOWN	shift, and go to state 10
    LEFT	shift, and go to state 275
    RIGHT	shift, and go to state 276
    BOX 	shift, and go to state 13
    CIRCLE	shift, and go to state 14
    ELLIPSE	shift, and go to state 15
    ARC 	shift, and go to state 16
    LINE	shift, and go to state 17
    ARROW	shift, and go to state 18
    MOVE	shift, and go to state 19
    SPLINE	shift, and go to state 20
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    COPY	shift, and go to state 21
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    SH  	shift, and go to state 22
    PRINT	shift, and go to state 23
    FOR 	shift, and go to state 24
    IF  	shift, and go to state 25
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    RESET	shift, and go to state 26
    PLOT	shift, and go to state 27
    SPRINTF	shift, and go to state 28
    COMMAND	shift, and go to state 29
    '(' 	shift, and go to state 84
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87
    '{' 	shift, and go to state 30
    '[' 	shift, and go to state 31

    placeless_element	go to state 33
    reset_variables	go to state 34
    simple_if	go to state 35
    element	go to state 277
    object_spec	go to state 37
    text	go to state 38
    position	go to state 278
    position_not_place	go to state 279
    expr_pair	go to state 93
    place	go to state 280
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 254



state 154

    placeless_element  ->  VARIABLE '=' any_expr .   (rule 10)

    $default	reduce using rule 10 (placeless_element)



state 155

    placeless_element  ->  VARIABLE ':' '=' . any_expr   (rule 11)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    TEXT	shift, and go to state 7
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    SPRINTF	shift, and go to state 28
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 103

    any_expr	go to state 281
    text_expr	go to state 105
    text	go to state 106
    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 108



state 156

    placeless_element  ->  COPY TEXT THRU . @2 DELIMITED @3 until   (rule 24)

    $default	reduce using rule 22 (@2)

    @2  	go to state 282



state 157

    placeless_element  ->  COPY THRU @4 . DELIMITED @5 until   (rule 27)

    DELIMITED	shift, and go to state 283



state 158

    placeless_element  ->  SH @1 DELIMITED .   (rule 20)

    $default	reduce using rule 20 (placeless_element)



state 159

    expr  ->  SIN '(' . any_expr ')'   (rule 217)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    TEXT	shift, and go to state 7
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    SPRINTF	shift, and go to state 28
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 103

    any_expr	go to state 284
    text_expr	go to state 105
    text	go to state 106
    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 108



state 160

    expr  ->  COS '(' . any_expr ')'   (rule 218)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    TEXT	shift, and go to state 7
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    SPRINTF	shift, and go to state 28
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 103

    any_expr	go to state 285
    text_expr	go to state 105
    text	go to state 106
    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 108



state 161

    expr  ->  ATAN2 '(' . any_expr ',' any_expr ')'   (rule 219)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    TEXT	shift, and go to state 7
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    SPRINTF	shift, and go to state 28
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 103

    any_expr	go to state 286
    text_expr	go to state 105
    text	go to state 106
    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 108



state 162

    expr  ->  LOG '(' . any_expr ')'   (rule 220)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    TEXT	shift, and go to state 7
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    SPRINTF	shift, and go to state 28
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 103

    any_expr	go to state 287
    text_expr	go to state 105
    text	go to state 106
    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 108



state 163

    expr  ->  EXP '(' . any_expr ')'   (rule 221)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    TEXT	shift, and go to state 7
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    SPRINTF	shift, and go to state 28
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 103

    any_expr	go to state 288
    text_expr	go to state 105
    text	go to state 106
    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 108



state 164

    expr  ->  SQRT '(' . any_expr ')'   (rule 222)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    TEXT	shift, and go to state 7
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    SPRINTF	shift, and go to state 28
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 103

    any_expr	go to state 289
    text_expr	go to state 105
    text	go to state 106
    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 108



state 165

    expr  ->  MAX '(' . any_expr ',' any_expr ')'   (rule 223)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    TEXT	shift, and go to state 7
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    SPRINTF	shift, and go to state 28
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 103

    any_expr	go to state 290
    text_expr	go to state 105
    text	go to state 106
    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 108



state 166

    expr  ->  MIN '(' . any_expr ',' any_expr ')'   (rule 224)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    TEXT	shift, and go to state 7
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    SPRINTF	shift, and go to state 28
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 103

    any_expr	go to state 291
    text_expr	go to state 105
    text	go to state 106
    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 108



state 167

    expr  ->  INT '(' . any_expr ')'   (rule 225)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    TEXT	shift, and go to state 7
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    SPRINTF	shift, and go to state 28
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 103

    any_expr	go to state 292
    text_expr	go to state 105
    text	go to state 106
    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 108



state 168

    expr  ->  RAND '(' . any_expr ')'   (rule 226)
    expr  ->  RAND '(' . ')'   (rule 227)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    TEXT	shift, and go to state 7
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    SPRINTF	shift, and go to state 28
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 103
    ')' 	shift, and go to state 293

    any_expr	go to state 294
    text_expr	go to state 105
    text	go to state 106
    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 108



state 169

    corner  ->  UPPER LEFT .   (rule 189)

    $default	reduce using rule 189 (corner)



state 170

    corner  ->  UPPER RIGHT .   (rule 191)

    $default	reduce using rule 191 (corner)



state 171

    corner  ->  UPPER LEFT_CORNER .   (rule 195)

    $default	reduce using rule 195 (corner)



state 172

    corner  ->  UPPER RIGHT_CORNER .   (rule 197)

    $default	reduce using rule 197 (corner)



state 173

    corner  ->  LOWER LEFT .   (rule 190)

    $default	reduce using rule 190 (corner)



state 174

    corner  ->  LOWER RIGHT .   (rule 192)

    $default	reduce using rule 192 (corner)



state 175

    corner  ->  LOWER LEFT_CORNER .   (rule 196)

    $default	reduce using rule 196 (corner)



state 176

    corner  ->  LOWER RIGHT_CORNER .   (rule 198)

    $default	reduce using rule 198 (corner)



state 177

    expr  ->  '(' any_expr . ')'   (rule 216)

    ')' 	shift, and go to state 295



state 178

    position_not_place  ->  position . '+' expr_pair   (rule 132)
    position_not_place  ->  position . '-' expr_pair   (rule 133)
    position_not_place  ->  '(' position . ',' position ')'   (rule 134)

    ',' 	shift, and go to state 296
    '+' 	shift, and go to state 185
    '-' 	shift, and go to state 186



state 179

    position_not_place  ->  expr_pair .   (rule 131)
    expr_pair  ->  '(' expr_pair . ')'   (rule 140)

    ')' 	shift, and go to state 297

    $default	reduce using rule 131 (position_not_place)



state 180

    any_expr  ->  expr .   (rule 47)
    text_expr  ->  expr . ANDAND text_expr   (rule 53)
    text_expr  ->  expr . OROR text_expr   (rule 56)
    position_not_place  ->  expr . between position AND position   (rule 135)
    position_not_place  ->  expr . '<' position ',' position '>'   (rule 136)
    expr_pair  ->  expr . ',' expr   (rule 139)
    expr  ->  expr . '+' expr   (rule 209)
    expr  ->  expr . '-' expr   (rule 210)
    expr  ->  expr . '*' expr   (rule 211)
    expr  ->  expr . '/' expr   (rule 212)
    expr  ->  expr . '%' expr   (rule 213)
    expr  ->  expr . '^' expr   (rule 214)
    expr  ->  expr . '<' expr   (rule 228)
    expr  ->  expr . LESSEQUAL expr   (rule 229)
    expr  ->  expr . '>' expr   (rule 230)
    expr  ->  expr . GREATEREQUAL expr   (rule 231)
    expr  ->  expr . EQUALEQUAL expr   (rule 232)
    expr  ->  expr . NOTEQUAL expr   (rule 233)
    expr  ->  expr . ANDAND expr   (rule 234)
    expr  ->  expr . OROR expr   (rule 235)

    OF  	shift, and go to state 208
    BETWEEN	shift, and go to state 209
    ANDAND	shift, and go to state 234
    OROR	shift, and go to state 235
    NOTEQUAL	shift, and go to state 212
    EQUALEQUAL	shift, and go to state 213
    LESSEQUAL	shift, and go to state 214
    GREATEREQUAL	shift, and go to state 215
    ',' 	shift, and go to state 216
    '<' 	shift, and go to state 217
    '>' 	shift, and go to state 218
    '+' 	shift, and go to state 219
    '-' 	shift, and go to state 220
    '*' 	shift, and go to state 221
    '/' 	shift, and go to state 222
    '%' 	shift, and go to state 223
    '^' 	shift, and go to state 224

    $default	reduce using rule 47 (any_expr)

    between	go to state 225



state 181

    ordinal  ->  '`' any_expr . TH   (rule 150)

    TH  	shift, and go to state 298



state 182

    expr  ->  expr . '+' expr   (rule 209)
    expr  ->  expr . '-' expr   (rule 210)
    expr  ->  expr . '*' expr   (rule 211)
    expr  ->  expr . '/' expr   (rule 212)
    expr  ->  expr . '%' expr   (rule 213)
    expr  ->  expr . '^' expr   (rule 214)
    expr  ->  '-' expr .   (rule 215)
    expr  ->  expr . '<' expr   (rule 228)
    expr  ->  expr . LESSEQUAL expr   (rule 229)
    expr  ->  expr . '>' expr   (rule 230)
    expr  ->  expr . GREATEREQUAL expr   (rule 231)
    expr  ->  expr . EQUALEQUAL expr   (rule 232)
    expr  ->  expr . NOTEQUAL expr   (rule 233)
    expr  ->  expr . ANDAND expr   (rule 234)
    expr  ->  expr . OROR expr   (rule 235)

    '^' 	shift, and go to state 224

    $default	reduce using rule 215 (expr)



state 183

    expr  ->  expr . '+' expr   (rule 209)
    expr  ->  expr . '-' expr   (rule 210)
    expr  ->  expr . '*' expr   (rule 211)
    expr  ->  expr . '/' expr   (rule 212)
    expr  ->  expr . '%' expr   (rule 213)
    expr  ->  expr . '^' expr   (rule 214)
    expr  ->  expr . '<' expr   (rule 228)
    expr  ->  expr . LESSEQUAL expr   (rule 229)
    expr  ->  expr . '>' expr   (rule 230)
    expr  ->  expr . GREATEREQUAL expr   (rule 231)
    expr  ->  expr . EQUALEQUAL expr   (rule 232)
    expr  ->  expr . NOTEQUAL expr   (rule 233)
    expr  ->  expr . ANDAND expr   (rule 234)
    expr  ->  expr . OROR expr   (rule 235)
    expr  ->  '!' expr .   (rule 236)

    '^' 	shift, and go to state 224

    $default	reduce using rule 236 (expr)



state 184

    print_args  ->  print_args print_arg .   (rule 39)

    $default	reduce using rule 39 (print_args)



state 185

    position_not_place  ->  position '+' . expr_pair   (rule 132)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '(' 	shift, and go to state 265
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    expr_pair	go to state 299
    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 267



state 186

    position_not_place  ->  position '-' . expr_pair   (rule 133)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '(' 	shift, and go to state 265
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    expr_pair	go to state 300
    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 267



state 187

    expr  ->  place DOT_X .   (rule 204)

    $default	reduce using rule 204 (expr)



state 188

    expr  ->  place DOT_Y .   (rule 205)

    $default	reduce using rule 205 (expr)



state 189

    expr  ->  place DOT_HT .   (rule 206)

    $default	reduce using rule 206 (expr)



state 190

    expr  ->  place DOT_WID .   (rule 207)

    $default	reduce using rule 207 (expr)



state 191

    expr  ->  place DOT_RAD .   (rule 208)

    $default	reduce using rule 208 (expr)



state 192

    label  ->  label '.' . LABEL   (rule 148)

    LABEL	shift, and go to state 301



state 193

    place  ->  label corner .   (rule 142)

    $default	reduce using rule 142 (place)



state 194

    object_type  ->  TEXT .   (rule 163)

    $default	reduce using rule 163 (object_type)



state 195

    optional_ordinal_last  ->  ordinal LAST .   (rule 152)

    $default	reduce using rule 152 (optional_ordinal_last)



state 196

    object_type  ->  BOX .   (rule 155)

    $default	reduce using rule 155 (object_type)



state 197

    object_type  ->  CIRCLE .   (rule 156)

    $default	reduce using rule 156 (object_type)



state 198

    object_type  ->  ELLIPSE .   (rule 157)

    $default	reduce using rule 157 (object_type)



state 199

    object_type  ->  ARC .   (rule 158)

    $default	reduce using rule 158 (object_type)



state 200

    object_type  ->  LINE .   (rule 159)

    $default	reduce using rule 159 (object_type)



state 201

    object_type  ->  ARROW .   (rule 160)

    $default	reduce using rule 160 (object_type)



state 202

    object_type  ->  SPLINE .   (rule 161)

    $default	reduce using rule 161 (object_type)



state 203

    object_type  ->  '[' . ']'   (rule 162)

    ']' 	shift, and go to state 302



state 204

    nth_primitive  ->  ordinal object_type .   (rule 153)

    $default	reduce using rule 153 (nth_primitive)



state 205

    nth_primitive  ->  optional_ordinal_last object_type .   (rule 154)

    $default	reduce using rule 154 (nth_primitive)



state 206

    place  ->  corner OF . label   (rule 144)

    LABEL	shift, and go to state 46
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    '`' 	shift, and go to state 85

    label	go to state 303
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98



state 207

    place  ->  corner label .   (rule 143)
    label  ->  label . '.' LABEL   (rule 148)

    '.' 	shift, and go to state 192

    $default	reduce using rule 143 (place)



state 208

    between  ->  OF . THE WAY BETWEEN   (rule 138)

    THE 	shift, and go to state 304



state 209

    between  ->  BETWEEN .   (rule 137)

    $default	reduce using rule 137 (between)



state 210

    expr  ->  expr ANDAND . expr   (rule 234)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 305



state 211

    expr  ->  expr OROR . expr   (rule 235)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 306



state 212

    expr  ->  expr NOTEQUAL . expr   (rule 233)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 307



state 213

    expr  ->  expr EQUALEQUAL . expr   (rule 232)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 308



state 214

    expr  ->  expr LESSEQUAL . expr   (rule 229)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 309



state 215

    expr  ->  expr GREATEREQUAL . expr   (rule 231)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 310



state 216

    expr_pair  ->  expr ',' . expr   (rule 139)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 311



state 217

    position_not_place  ->  expr '<' . position ',' position '>'   (rule 136)
    expr  ->  expr '<' . expr   (rule 228)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '(' 	shift, and go to state 84
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    position	go to state 312
    position_not_place	go to state 92
    expr_pair	go to state 93
    place	go to state 94
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 313



state 218

    expr  ->  expr '>' . expr   (rule 230)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 314



state 219

    expr  ->  expr '+' . expr   (rule 209)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 315



state 220

    expr  ->  expr '-' . expr   (rule 210)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 316



state 221

    expr  ->  expr '*' . expr   (rule 211)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 317



state 222

    expr  ->  expr '/' . expr   (rule 212)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 318



state 223

    expr  ->  expr '%' . expr   (rule 213)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 319



state 224

    expr  ->  expr '^' . expr   (rule 214)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 320



state 225

    position_not_place  ->  expr between . position AND position   (rule 135)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '(' 	shift, and go to state 84
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    position	go to state 321
    position_not_place	go to state 92
    expr_pair	go to state 93
    place	go to state 94
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 254



state 226

    placeless_element  ->  FOR VARIABLE '=' . expr TO expr optional_by DO @6 DELIMITED   (rule 29)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 322



state 227

    text_expr  ->  text_expr . ANDAND text_expr   (rule 51)
    text_expr  ->  text_expr . ANDAND expr   (rule 52)
    text_expr  ->  text_expr . OROR text_expr   (rule 54)
    text_expr  ->  text_expr . OROR expr   (rule 55)
    text_expr  ->  '!' text_expr .   (rule 57)


    $default	reduce using rule 57 (text_expr)



state 228

    text_expr  ->  expr . ANDAND text_expr   (rule 53)
    text_expr  ->  expr . OROR text_expr   (rule 56)
    expr  ->  expr . '+' expr   (rule 209)
    expr  ->  expr . '-' expr   (rule 210)
    expr  ->  expr . '*' expr   (rule 211)
    expr  ->  expr . '/' expr   (rule 212)
    expr  ->  expr . '%' expr   (rule 213)
    expr  ->  expr . '^' expr   (rule 214)
    expr  ->  expr . '<' expr   (rule 228)
    expr  ->  expr . LESSEQUAL expr   (rule 229)
    expr  ->  expr . '>' expr   (rule 230)
    expr  ->  expr . GREATEREQUAL expr   (rule 231)
    expr  ->  expr . EQUALEQUAL expr   (rule 232)
    expr  ->  expr . NOTEQUAL expr   (rule 233)
    expr  ->  expr . ANDAND expr   (rule 234)
    expr  ->  expr . OROR expr   (rule 235)
    expr  ->  '!' expr .   (rule 236)

    '^' 	shift, and go to state 224

    $default	reduce using rule 236 (expr)



state 229

    simple_if  ->  IF any_expr THEN . @8 DELIMITED   (rule 44)

    $default	reduce using rule 43 (@8)

    @8  	go to state 323



state 230

    text_expr  ->  text_expr ANDAND . text_expr   (rule 51)
    text_expr  ->  text_expr ANDAND . expr   (rule 52)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    TEXT	shift, and go to state 7
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    SPRINTF	shift, and go to state 28
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 103

    text_expr	go to state 324
    text	go to state 106
    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 325



state 231

    text_expr  ->  text_expr OROR . text_expr   (rule 54)
    text_expr  ->  text_expr OROR . expr   (rule 55)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    TEXT	shift, and go to state 7
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    SPRINTF	shift, and go to state 28
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 103

    text_expr	go to state 326
    text	go to state 106
    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 327



state 232

    text_expr  ->  text NOTEQUAL . text   (rule 50)

    TEXT	shift, and go to state 7
    SPRINTF	shift, and go to state 28

    text	go to state 328



state 233

    text_expr  ->  text EQUALEQUAL . text   (rule 49)

    TEXT	shift, and go to state 7
    SPRINTF	shift, and go to state 28

    text	go to state 329



state 234

    text_expr  ->  expr ANDAND . text_expr   (rule 53)
    expr  ->  expr ANDAND . expr   (rule 234)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    TEXT	shift, and go to state 7
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    SPRINTF	shift, and go to state 28
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 103

    text_expr	go to state 330
    text	go to state 106
    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 331



state 235

    text_expr  ->  expr OROR . text_expr   (rule 56)
    expr  ->  expr OROR . expr   (rule 235)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    TEXT	shift, and go to state 7
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    SPRINTF	shift, and go to state 28
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 103

    text_expr	go to state 332
    text	go to state 106
    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 333



state 236

    expr  ->  expr '<' . expr   (rule 228)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 334



state 237

    object_spec  ->  PLOT expr text .   (rule 81)

    $default	reduce using rule 81 (object_spec)



state 238

    text  ->  SPRINTF '(' TEXT . sprintf_args ')'   (rule 126)

    $default	reduce using rule 127 (sprintf_args)

    sprintf_args	go to state 335



state 239

    element  ->  '{' @9 element_list . '}' @10 optional_element   (rule 67)

    '}' 	shift, and go to state 336



state 240

    element_list  ->  optional_separator . middle_element_list optional_separator   (rule 3)

    LABEL	shift, and go to state 5
    VARIABLE	shift, and go to state 6
    TEXT	shift, and go to state 7
    COMMAND_LINE	shift, and go to state 8
    UP  	shift, and go to state 9
    DOWN	shift, and go to state 10
    LEFT	shift, and go to state 11
    RIGHT	shift, and go to state 12
    BOX 	shift, and go to state 13
    CIRCLE	shift, and go to state 14
    ELLIPSE	shift, and go to state 15
    ARC 	shift, and go to state 16
    LINE	shift, and go to state 17
    ARROW	shift, and go to state 18
    MOVE	shift, and go to state 19
    SPLINE	shift, and go to state 20
    COPY	shift, and go to state 21
    SH  	shift, and go to state 22
    PRINT	shift, and go to state 23
    FOR 	shift, and go to state 24
    IF  	shift, and go to state 25
    RESET	shift, and go to state 26
    PLOT	shift, and go to state 27
    SPRINTF	shift, and go to state 28
    COMMAND	shift, and go to state 29
    '{' 	shift, and go to state 30
    '[' 	shift, and go to state 31

    middle_element_list	go to state 32
    placeless_element	go to state 33
    reset_variables	go to state 34
    simple_if	go to state 35
    element	go to state 36
    object_spec	go to state 37
    text	go to state 38



state 241

    object_spec  ->  '[' @11 element_list . ']'   (rule 83)

    ']' 	shift, and go to state 337



state 242

    middle_element_list  ->  middle_element_list separator element .   (rule 5)

    $default	reduce using rule 5 (middle_element_list)



state 243

    reset_variables  ->  reset_variables ',' VARIABLE .   (rule 37)

    $default	reduce using rule 37 (reset_variables)



state 244

    placeless_element  ->  simple_if ELSE @7 . DELIMITED   (rule 32)

    DELIMITED	shift, and go to state 338



state 245

    object_spec  ->  object_spec UP expr .   (rule 90)
    expr  ->  expr . '+' expr   (rule 209)
    expr  ->  expr . '-' expr   (rule 210)
    expr  ->  expr . '*' expr   (rule 211)
    expr  ->  expr . '/' expr   (rule 212)
    expr  ->  expr . '%' expr   (rule 213)
    expr  ->  expr . '^' expr   (rule 214)
    expr  ->  expr . '<' expr   (rule 228)
    expr  ->  expr . LESSEQUAL expr   (rule 229)
    expr  ->  expr . '>' expr   (rule 230)
    expr  ->  expr . GREATEREQUAL expr   (rule 231)
    expr  ->  expr . EQUALEQUAL expr   (rule 232)
    expr  ->  expr . NOTEQUAL expr   (rule 233)
    expr  ->  expr . ANDAND expr   (rule 234)
    expr  ->  expr . OROR expr   (rule 235)

    ANDAND	shift, and go to state 210
    OROR	shift, and go to state 211
    NOTEQUAL	shift, and go to state 212
    EQUALEQUAL	shift, and go to state 213
    LESSEQUAL	shift, and go to state 214
    GREATEREQUAL	shift, and go to state 215
    '<' 	shift, and go to state 236
    '>' 	shift, and go to state 218
    '+' 	shift, and go to state 219
    '-' 	shift, and go to state 220
    '*' 	shift, and go to state 221
    '/' 	shift, and go to state 222
    '%' 	shift, and go to state 223
    '^' 	shift, and go to state 224

    $default	reduce using rule 90 (object_spec)



state 246

    object_spec  ->  object_spec DOWN expr .   (rule 92)
    expr  ->  expr . '+' expr   (rule 209)
    expr  ->  expr . '-' expr   (rule 210)
    expr  ->  expr . '*' expr   (rule 211)
    expr  ->  expr . '/' expr   (rule 212)
    expr  ->  expr . '%' expr   (rule 213)
    expr  ->  expr . '^' expr   (rule 214)
    expr  ->  expr . '<' expr   (rule 228)
    expr  ->  expr . LESSEQUAL expr   (rule 229)
    expr  ->  expr . '>' expr   (rule 230)
    expr  ->  expr . GREATEREQUAL expr   (rule 231)
    expr  ->  expr . EQUALEQUAL expr   (rule 232)
    expr  ->  expr . NOTEQUAL expr   (rule 233)
    expr  ->  expr . ANDAND expr   (rule 234)
    expr  ->  expr . OROR expr   (rule 235)

    ANDAND	shift, and go to state 210
    OROR	shift, and go to state 211
    NOTEQUAL	shift, and go to state 212
    EQUALEQUAL	shift, and go to state 213
    LESSEQUAL	shift, and go to state 214
    GREATEREQUAL	shift, and go to state 215
    '<' 	shift, and go to state 236
    '>' 	shift, and go to state 218
    '+' 	shift, and go to state 219
    '-' 	shift, and go to state 220
    '*' 	shift, and go to state 221
    '/' 	shift, and go to state 222
    '%' 	shift, and go to state 223
    '^' 	shift, and go to state 224

    $default	reduce using rule 92 (object_spec)



state 247

    object_spec  ->  object_spec LEFT expr .   (rule 96)
    expr  ->  expr . '+' expr   (rule 209)
    expr  ->  expr . '-' expr   (rule 210)
    expr  ->  expr . '*' expr   (rule 211)
    expr  ->  expr . '/' expr   (rule 212)
    expr  ->  expr . '%' expr   (rule 213)
    expr  ->  expr . '^' expr   (rule 214)
    expr  ->  expr . '<' expr   (rule 228)
    expr  ->  expr . LESSEQUAL expr   (rule 229)
    expr  ->  expr . '>' expr   (rule 230)
    expr  ->  expr . GREATEREQUAL expr   (rule 231)
    expr  ->  expr . EQUALEQUAL expr   (rule 232)
    expr  ->  expr . NOTEQUAL expr   (rule 233)
    expr  ->  expr . ANDAND expr   (rule 234)
    expr  ->  expr . OROR expr   (rule 235)

    ANDAND	shift, and go to state 210
    OROR	shift, and go to state 211
    NOTEQUAL	shift, and go to state 212
    EQUALEQUAL	shift, and go to state 213
    LESSEQUAL	shift, and go to state 214
    GREATEREQUAL	shift, and go to state 215
    '<' 	shift, and go to state 236
    '>' 	shift, and go to state 218
    '+' 	shift, and go to state 219
    '-' 	shift, and go to state 220
    '*' 	shift, and go to state 221
    '/' 	shift, and go to state 222
    '%' 	shift, and go to state 223
    '^' 	shift, and go to state 224

    $default	reduce using rule 96 (object_spec)



state 248

    object_spec  ->  object_spec RIGHT expr .   (rule 94)
    expr  ->  expr . '+' expr   (rule 209)
    expr  ->  expr . '-' expr   (rule 210)
    expr  ->  expr . '*' expr   (rule 211)
    expr  ->  expr . '/' expr   (rule 212)
    expr  ->  expr . '%' expr   (rule 213)
    expr  ->  expr . '^' expr   (rule 214)
    expr  ->  expr . '<' expr   (rule 228)
    expr  ->  expr . LESSEQUAL expr   (rule 229)
    expr  ->  expr . '>' expr   (rule 230)
    expr  ->  expr . GREATEREQUAL expr   (rule 231)
    expr  ->  expr . EQUALEQUAL expr   (rule 232)
    expr  ->  expr . NOTEQUAL expr   (rule 233)
    expr  ->  expr . ANDAND expr   (rule 234)
    expr  ->  expr . OROR expr   (rule 235)

    ANDAND	shift, and go to state 210
    OROR	shift, and go to state 211
    NOTEQUAL	shift, and go to state 212
    EQUALEQUAL	shift, and go to state 213
    LESSEQUAL	shift, and go to state 214
    GREATEREQUAL	shift, and go to state 215
    '<' 	shift, and go to state 236
    '>' 	shift, and go to state 218
    '+' 	shift, and go to state 219
    '-' 	shift, and go to state 220
    '*' 	shift, and go to state 221
    '/' 	shift, and go to state 222
    '%' 	shift, and go to state 223
    '^' 	shift, and go to state 224

    $default	reduce using rule 94 (object_spec)



state 249

    object_spec  ->  object_spec HEIGHT expr .   (rule 84)
    expr  ->  expr . '+' expr   (rule 209)
    expr  ->  expr . '-' expr   (rule 210)
    expr  ->  expr . '*' expr   (rule 211)
    expr  ->  expr . '/' expr   (rule 212)
    expr  ->  expr . '%' expr   (rule 213)
    expr  ->  expr . '^' expr   (rule 214)
    expr  ->  expr . '<' expr   (rule 228)
    expr  ->  expr . LESSEQUAL expr   (rule 229)
    expr  ->  expr . '>' expr   (rule 230)
    expr  ->  expr . GREATEREQUAL expr   (rule 231)
    expr  ->  expr . EQUALEQUAL expr   (rule 232)
    expr  ->  expr . NOTEQUAL expr   (rule 233)
    expr  ->  expr . ANDAND expr   (rule 234)
    expr  ->  expr . OROR expr   (rule 235)

    ANDAND	shift, and go to state 210
    OROR	shift, and go to state 211
    NOTEQUAL	shift, and go to state 212
    EQUALEQUAL	shift, and go to state 213
    LESSEQUAL	shift, and go to state 214
    GREATEREQUAL	shift, and go to state 215
    '<' 	shift, and go to state 236
    '>' 	shift, and go to state 218
    '+' 	shift, and go to state 219
    '-' 	shift, and go to state 220
    '*' 	shift, and go to state 221
    '/' 	shift, and go to state 222
    '%' 	shift, and go to state 223
    '^' 	shift, and go to state 224

    $default	reduce using rule 84 (object_spec)



state 250

    object_spec  ->  object_spec RADIUS expr .   (rule 85)
    expr  ->  expr . '+' expr   (rule 209)
    expr  ->  expr . '-' expr   (rule 210)
    expr  ->  expr . '*' expr   (rule 211)
    expr  ->  expr . '/' expr   (rule 212)
    expr  ->  expr . '%' expr   (rule 213)
    expr  ->  expr . '^' expr   (rule 214)
    expr  ->  expr . '<' expr   (rule 228)
    expr  ->  expr . LESSEQUAL expr   (rule 229)
    expr  ->  expr . '>' expr   (rule 230)
    expr  ->  expr . GREATEREQUAL expr   (rule 231)
    expr  ->  expr . EQUALEQUAL expr   (rule 232)
    expr  ->  expr . NOTEQUAL expr   (rule 233)
    expr  ->  expr . ANDAND expr   (rule 234)
    expr  ->  expr . OROR expr   (rule 235)

    ANDAND	shift, and go to state 210
    OROR	shift, and go to state 211
    NOTEQUAL	shift, and go to state 212
    EQUALEQUAL	shift, and go to state 213
    LESSEQUAL	shift, and go to state 214
    GREATEREQUAL	shift, and go to state 215
    '<' 	shift, and go to state 236
    '>' 	shift, and go to state 218
    '+' 	shift, and go to state 219
    '-' 	shift, and go to state 220
    '*' 	shift, and go to state 221
    '/' 	shift, and go to state 222
    '%' 	shift, and go to state 223
    '^' 	shift, and go to state 224

    $default	reduce using rule 85 (object_spec)



state 251

    object_spec  ->  object_spec WIDTH expr .   (rule 86)
    expr  ->  expr . '+' expr   (rule 209)
    expr  ->  expr . '-' expr   (rule 210)
    expr  ->  expr . '*' expr   (rule 211)
    expr  ->  expr . '/' expr   (rule 212)
    expr  ->  expr . '%' expr   (rule 213)
    expr  ->  expr . '^' expr   (rule 214)
    expr  ->  expr . '<' expr   (rule 228)
    expr  ->  expr . LESSEQUAL expr   (rule 229)
    expr  ->  expr . '>' expr   (rule 230)
    expr  ->  expr . GREATEREQUAL expr   (rule 231)
    expr  ->  expr . EQUALEQUAL expr   (rule 232)
    expr  ->  expr . NOTEQUAL expr   (rule 233)
    expr  ->  expr . ANDAND expr   (rule 234)
    expr  ->  expr . OROR expr   (rule 235)

    ANDAND	shift, and go to state 210
    OROR	shift, and go to state 211
    NOTEQUAL	shift, and go to state 212
    EQUALEQUAL	shift, and go to state 213
    LESSEQUAL	shift, and go to state 214
    GREATEREQUAL	shift, and go to state 215
    '<' 	shift, and go to state 236
    '>' 	shift, and go to state 218
    '+' 	shift, and go to state 219
    '-' 	shift, and go to state 220
    '*' 	shift, and go to state 221
    '/' 	shift, and go to state 222
    '%' 	shift, and go to state 223
    '^' 	shift, and go to state 224

    $default	reduce using rule 86 (object_spec)



state 252

    object_spec  ->  object_spec DIAMETER expr .   (rule 87)
    expr  ->  expr . '+' expr   (rule 209)
    expr  ->  expr . '-' expr   (rule 210)
    expr  ->  expr . '*' expr   (rule 211)
    expr  ->  expr . '/' expr   (rule 212)
    expr  ->  expr . '%' expr   (rule 213)
    expr  ->  expr . '^' expr   (rule 214)
    expr  ->  expr . '<' expr   (rule 228)
    expr  ->  expr . LESSEQUAL expr   (rule 229)
    expr  ->  expr . '>' expr   (rule 230)
    expr  ->  expr . GREATEREQUAL expr   (rule 231)
    expr  ->  expr . EQUALEQUAL expr   (rule 232)
    expr  ->  expr . NOTEQUAL expr   (rule 233)
    expr  ->  expr . ANDAND expr   (rule 234)
    expr  ->  expr . OROR expr   (rule 235)

    ANDAND	shift, and go to state 210
    OROR	shift, and go to state 211
    NOTEQUAL	shift, and go to state 212
    EQUALEQUAL	shift, and go to state 213
    LESSEQUAL	shift, and go to state 214
    GREATEREQUAL	shift, and go to state 215
    '<' 	shift, and go to state 236
    '>' 	shift, and go to state 218
    '+' 	shift, and go to state 219
    '-' 	shift, and go to state 220
    '*' 	shift, and go to state 221
    '/' 	shift, and go to state 222
    '%' 	shift, and go to state 223
    '^' 	shift, and go to state 224

    $default	reduce using rule 87 (object_spec)



state 253

    object_spec  ->  object_spec FROM position .   (rule 97)
    position_not_place  ->  position . '+' expr_pair   (rule 132)
    position_not_place  ->  position . '-' expr_pair   (rule 133)

    '+' 	shift, and go to state 185
    '-' 	shift, and go to state 186

    $default	reduce using rule 97 (object_spec)



state 254

    position_not_place  ->  expr . between position AND position   (rule 135)
    position_not_place  ->  expr . '<' position ',' position '>'   (rule 136)
    expr_pair  ->  expr . ',' expr   (rule 139)
    expr  ->  expr . '+' expr   (rule 209)
    expr  ->  expr . '-' expr   (rule 210)
    expr  ->  expr . '*' expr   (rule 211)
    expr  ->  expr . '/' expr   (rule 212)
    expr  ->  expr . '%' expr   (rule 213)
    expr  ->  expr . '^' expr   (rule 214)
    expr  ->  expr . '<' expr   (rule 228)
    expr  ->  expr . LESSEQUAL expr   (rule 229)
    expr  ->  expr . '>' expr   (rule 230)
    expr  ->  expr . GREATEREQUAL expr   (rule 231)
    expr  ->  expr . EQUALEQUAL expr   (rule 232)
    expr  ->  expr . NOTEQUAL expr   (rule 233)
    expr  ->  expr . ANDAND expr   (rule 234)
    expr  ->  expr . OROR expr   (rule 235)

    OF  	shift, and go to state 208
    BETWEEN	shift, and go to state 209
    ANDAND	shift, and go to state 210
    OROR	shift, and go to state 211
    NOTEQUAL	shift, and go to state 212
    EQUALEQUAL	shift, and go to state 213
    LESSEQUAL	shift, and go to state 214
    GREATEREQUAL	shift, and go to state 215
    ',' 	shift, and go to state 216
    '<' 	shift, and go to state 217
    '>' 	shift, and go to state 218
    '+' 	shift, and go to state 219
    '-' 	shift, and go to state 220
    '*' 	shift, and go to state 221
    '/' 	shift, and go to state 222
    '%' 	shift, and go to state 223
    '^' 	shift, and go to state 224

    between	go to state 225



state 255

    object_spec  ->  object_spec TO position .   (rule 98)
    position_not_place  ->  position . '+' expr_pair   (rule 132)
    position_not_place  ->  position . '-' expr_pair   (rule 133)

    '+' 	shift, and go to state 185
    '-' 	shift, and go to state 186

    $default	reduce using rule 98 (object_spec)



state 256

    object_spec  ->  object_spec AT position .   (rule 99)
    position_not_place  ->  position . '+' expr_pair   (rule 132)
    position_not_place  ->  position . '-' expr_pair   (rule 133)

    '+' 	shift, and go to state 185
    '-' 	shift, and go to state 186

    $default	reduce using rule 99 (object_spec)



state 257

    path  ->  LABEL . relative_path   (rule 173)

    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '.' 	shift, and go to state 260

    label_path	go to state 261
    relative_path	go to state 339
    corner	go to state 264



state 258

    path  ->  ORDINAL . LAST object_type relative_path   (rule 170)
    path  ->  ORDINAL . object_type relative_path   (rule 172)

    TEXT	shift, and go to state 194
    LAST	shift, and go to state 340
    BOX 	shift, and go to state 196
    CIRCLE	shift, and go to state 197
    ELLIPSE	shift, and go to state 198
    ARC 	shift, and go to state 199
    LINE	shift, and go to state 200
    ARROW	shift, and go to state 201
    SPLINE	shift, and go to state 202
    '[' 	shift, and go to state 203

    object_type	go to state 341



state 259

    path  ->  LAST . object_type relative_path   (rule 171)

    TEXT	shift, and go to state 194
    BOX 	shift, and go to state 196
    CIRCLE	shift, and go to state 197
    ELLIPSE	shift, and go to state 198
    ARC 	shift, and go to state 199
    LINE	shift, and go to state 200
    ARROW	shift, and go to state 201
    SPLINE	shift, and go to state 202
    '[' 	shift, and go to state 203

    object_type	go to state 342



state 260

    label_path  ->  '.' . LABEL   (rule 164)

    LABEL	shift, and go to state 343



state 261

    label_path  ->  label_path . '.' LABEL   (rule 165)
    relative_path  ->  label_path .   (rule 167)
    relative_path  ->  label_path . corner   (rule 168)

    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '.' 	shift, and go to state 344

    $default	reduce using rule 167 (relative_path)

    corner	go to state 345



state 262

    path  ->  relative_path .   (rule 169)

    $default	reduce using rule 169 (path)



state 263

    object_spec  ->  object_spec WITH path .   (rule 100)

    $default	reduce using rule 100 (object_spec)



state 264

    relative_path  ->  corner .   (rule 166)

    $default	reduce using rule 166 (relative_path)



state 265

    expr_pair  ->  '(' . expr_pair ')'   (rule 140)
    expr  ->  '(' . any_expr ')'   (rule 216)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    TEXT	shift, and go to state 7
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    SPRINTF	shift, and go to state 28
    '(' 	shift, and go to state 265
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 103

    any_expr	go to state 177
    text_expr	go to state 105
    text	go to state 106
    expr_pair	go to state 346
    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 347



state 266

    object_spec  ->  object_spec BY expr_pair .   (rule 101)

    $default	reduce using rule 101 (object_spec)



state 267

    expr_pair  ->  expr . ',' expr   (rule 139)
    expr  ->  expr . '+' expr   (rule 209)
    expr  ->  expr . '-' expr   (rule 210)
    expr  ->  expr . '*' expr   (rule 211)
    expr  ->  expr . '/' expr   (rule 212)
    expr  ->  expr . '%' expr   (rule 213)
    expr  ->  expr . '^' expr   (rule 214)
    expr  ->  expr . '<' expr   (rule 228)
    expr  ->  expr . LESSEQUAL expr   (rule 229)
    expr  ->  expr . '>' expr   (rule 230)
    expr  ->  expr . GREATEREQUAL expr   (rule 231)
    expr  ->  expr . EQUALEQUAL expr   (rule 232)
    expr  ->  expr . NOTEQUAL expr   (rule 233)
    expr  ->  expr . ANDAND expr   (rule 234)
    expr  ->  expr . OROR expr   (rule 235)

    ANDAND	shift, and go to state 210
    OROR	shift, and go to state 211
    NOTEQUAL	shift, and go to state 212
    EQUALEQUAL	shift, and go to state 213
    LESSEQUAL	shift, and go to state 214
    GREATEREQUAL	shift, and go to state 215
    ',' 	shift, and go to state 216
    '<' 	shift, and go to state 236
    '>' 	shift, and go to state 218
    '+' 	shift, and go to state 219
    '-' 	shift, and go to state 220
    '*' 	shift, and go to state 221
    '/' 	shift, and go to state 222
    '%' 	shift, and go to state 223
    '^' 	shift, and go to state 224



state 268

    object_spec  ->  object_spec DOTTED expr .   (rule 104)
    expr  ->  expr . '+' expr   (rule 209)
    expr  ->  expr . '-' expr   (rule 210)
    expr  ->  expr . '*' expr   (rule 211)
    expr  ->  expr . '/' expr   (rule 212)
    expr  ->  expr . '%' expr   (rule 213)
    expr  ->  expr . '^' expr   (rule 214)
    expr  ->  expr . '<' expr   (rule 228)
    expr  ->  expr . LESSEQUAL expr   (rule 229)
    expr  ->  expr . '>' expr   (rule 230)
    expr  ->  expr . GREATEREQUAL expr   (rule 231)
    expr  ->  expr . EQUALEQUAL expr   (rule 232)
    expr  ->  expr . NOTEQUAL expr   (rule 233)
    expr  ->  expr . ANDAND expr   (rule 234)
    expr  ->  expr . OROR expr   (rule 235)

    ANDAND	shift, and go to state 210
    OROR	shift, and go to state 211
    NOTEQUAL	shift, and go to state 212
    EQUALEQUAL	shift, and go to state 213
    LESSEQUAL	shift, and go to state 214
    GREATEREQUAL	shift, and go to state 215
    '<' 	shift, and go to state 236
    '>' 	shift, and go to state 218
    '+' 	shift, and go to state 219
    '-' 	shift, and go to state 220
    '*' 	shift, and go to state 221
    '/' 	shift, and go to state 222
    '%' 	shift, and go to state 223
    '^' 	shift, and go to state 224

    $default	reduce using rule 104 (object_spec)



state 269

    object_spec  ->  object_spec DASHED expr .   (rule 106)
    expr  ->  expr . '+' expr   (rule 209)
    expr  ->  expr . '-' expr   (rule 210)
    expr  ->  expr . '*' expr   (rule 211)
    expr  ->  expr . '/' expr   (rule 212)
    expr  ->  expr . '%' expr   (rule 213)
    expr  ->  expr . '^' expr   (rule 214)
    expr  ->  expr . '<' expr   (rule 228)
    expr  ->  expr . LESSEQUAL expr   (rule 229)
    expr  ->  expr . '>' expr   (rule 230)
    expr  ->  expr . GREATEREQUAL expr   (rule 231)
    expr  ->  expr . EQUALEQUAL expr   (rule 232)
    expr  ->  expr . NOTEQUAL expr   (rule 233)
    expr  ->  expr . ANDAND expr   (rule 234)
    expr  ->  expr . OROR expr   (rule 235)

    ANDAND	shift, and go to state 210
    OROR	shift, and go to state 211
    NOTEQUAL	shift, and go to state 212
    EQUALEQUAL	shift, and go to state 213
    LESSEQUAL	shift, and go to state 214
    GREATEREQUAL	shift, and go to state 215
    '<' 	shift, and go to state 236
    '>' 	shift, and go to state 218
    '+' 	shift, and go to state 219
    '-' 	shift, and go to state 220
    '*' 	shift, and go to state 221
    '/' 	shift, and go to state 222
    '%' 	shift, and go to state 223
    '^' 	shift, and go to state 224

    $default	reduce using rule 106 (object_spec)



state 270

    object_spec  ->  object_spec CHOP expr .   (rule 110)
    expr  ->  expr . '+' expr   (rule 209)
    expr  ->  expr . '-' expr   (rule 210)
    expr  ->  expr . '*' expr   (rule 211)
    expr  ->  expr . '/' expr   (rule 212)
    expr  ->  expr . '%' expr   (rule 213)
    expr  ->  expr . '^' expr   (rule 214)
    expr  ->  expr . '<' expr   (rule 228)
    expr  ->  expr . LESSEQUAL expr   (rule 229)
    expr  ->  expr . '>' expr   (rule 230)
    expr  ->  expr . GREATEREQUAL expr   (rule 231)
    expr  ->  expr . EQUALEQUAL expr   (rule 232)
    expr  ->  expr . NOTEQUAL expr   (rule 233)
    expr  ->  expr . ANDAND expr   (rule 234)
    expr  ->  expr . OROR expr   (rule 235)

    ANDAND	shift, and go to state 210
    OROR	shift, and go to state 211
    NOTEQUAL	shift, and go to state 212
    EQUALEQUAL	shift, and go to state 213
    LESSEQUAL	shift, and go to state 214
    GREATEREQUAL	shift, and go to state 215
    '<' 	shift, and go to state 236
    '>' 	shift, and go to state 218
    '+' 	shift, and go to state 219
    '-' 	shift, and go to state 220
    '*' 	shift, and go to state 221
    '/' 	shift, and go to state 222
    '%' 	shift, and go to state 223
    '^' 	shift, and go to state 224

    $default	reduce using rule 110 (object_spec)



state 271

    object_spec  ->  object_spec THICKNESS expr .   (rule 123)
    expr  ->  expr . '+' expr   (rule 209)
    expr  ->  expr . '-' expr   (rule 210)
    expr  ->  expr . '*' expr   (rule 211)
    expr  ->  expr . '/' expr   (rule 212)
    expr  ->  expr . '%' expr   (rule 213)
    expr  ->  expr . '^' expr   (rule 214)
    expr  ->  expr . '<' expr   (rule 228)
    expr  ->  expr . LESSEQUAL expr   (rule 229)
    expr  ->  expr . '>' expr   (rule 230)
    expr  ->  expr . GREATEREQUAL expr   (rule 231)
    expr  ->  expr . EQUALEQUAL expr   (rule 232)
    expr  ->  expr . NOTEQUAL expr   (rule 233)
    expr  ->  expr . ANDAND expr   (rule 234)
    expr  ->  expr . OROR expr   (rule 235)

    ANDAND	shift, and go to state 210
    OROR	shift, and go to state 211
    NOTEQUAL	shift, and go to state 212
    EQUALEQUAL	shift, and go to state 213
    LESSEQUAL	shift, and go to state 214
    GREATEREQUAL	shift, and go to state 215
    '<' 	shift, and go to state 236
    '>' 	shift, and go to state 218
    '+' 	shift, and go to state 219
    '-' 	shift, and go to state 220
    '*' 	shift, and go to state 221
    '/' 	shift, and go to state 222
    '%' 	shift, and go to state 223
    '^' 	shift, and go to state 224

    $default	reduce using rule 123 (object_spec)



state 272

    object_spec  ->  object_spec FILL expr .   (rule 108)
    expr  ->  expr . '+' expr   (rule 209)
    expr  ->  expr . '-' expr   (rule 210)
    expr  ->  expr . '*' expr   (rule 211)
    expr  ->  expr . '/' expr   (rule 212)
    expr  ->  expr . '%' expr   (rule 213)
    expr  ->  expr . '^' expr   (rule 214)
    expr  ->  expr . '<' expr   (rule 228)
    expr  ->  expr . LESSEQUAL expr   (rule 229)
    expr  ->  expr . '>' expr   (rule 230)
    expr  ->  expr . GREATEREQUAL expr   (rule 231)
    expr  ->  expr . EQUALEQUAL expr   (rule 232)
    expr  ->  expr . NOTEQUAL expr   (rule 233)
    expr  ->  expr . ANDAND expr   (rule 234)
    expr  ->  expr . OROR expr   (rule 235)

    ANDAND	shift, and go to state 210
    OROR	shift, and go to state 211
    NOTEQUAL	shift, and go to state 212
    EQUALEQUAL	shift, and go to state 213
    LESSEQUAL	shift, and go to state 214
    GREATEREQUAL	shift, and go to state 215
    '<' 	shift, and go to state 236
    '>' 	shift, and go to state 218
    '+' 	shift, and go to state 219
    '-' 	shift, and go to state 220
    '*' 	shift, and go to state 221
    '/' 	shift, and go to state 222
    '%' 	shift, and go to state 223
    '^' 	shift, and go to state 224

    $default	reduce using rule 108 (object_spec)



state 273

    element  ->  LABEL . ':' optional_separator element   (rule 62)
    element  ->  LABEL . ':' optional_separator position_not_place   (rule 63)
    element  ->  LABEL . ':' optional_separator place   (rule 64)
    label  ->  LABEL .   (rule 146)

    ':' 	shift, and go to state 40

    $default	reduce using rule 146 (label)



state 274

    placeless_element  ->  VARIABLE . '=' any_expr   (rule 10)
    placeless_element  ->  VARIABLE . ':' '=' any_expr   (rule 11)
    expr  ->  VARIABLE .   (rule 202)

    '=' 	shift, and go to state 41
    ':' 	shift, and go to state 42

    $default	reduce using rule 202 (expr)



state 275

    placeless_element  ->  LEFT .   (rule 14)
    corner  ->  LEFT .   (rule 187)

    $   	reduce using rule 14 (placeless_element)
    ';' 	reduce using rule 14 (placeless_element)
    '}' 	reduce using rule 14 (placeless_element)
    ']' 	reduce using rule 14 (placeless_element)
    $default	reduce using rule 187 (corner)



state 276

    placeless_element  ->  RIGHT .   (rule 15)
    corner  ->  RIGHT .   (rule 188)

    $   	reduce using rule 15 (placeless_element)
    ';' 	reduce using rule 15 (placeless_element)
    '}' 	reduce using rule 15 (placeless_element)
    ']' 	reduce using rule 15 (placeless_element)
    $default	reduce using rule 188 (corner)



state 277

    element  ->  LABEL ':' optional_separator element .   (rule 62)

    $default	reduce using rule 62 (element)



state 278

    position_not_place  ->  position . '+' expr_pair   (rule 132)
    position_not_place  ->  position . '-' expr_pair   (rule 133)

    '+' 	shift, and go to state 185
    '-' 	shift, and go to state 186



state 279

    element  ->  LABEL ':' optional_separator position_not_place .   (rule 63)
    position  ->  position_not_place .   (rule 129)

    '+' 	reduce using rule 129 (position)
    '-' 	reduce using rule 129 (position)
    $default	reduce using rule 63 (element)



state 280

    element  ->  LABEL ':' optional_separator place .   (rule 64)
    position  ->  place .   (rule 130)
    expr  ->  place . DOT_X   (rule 204)
    expr  ->  place . DOT_Y   (rule 205)
    expr  ->  place . DOT_HT   (rule 206)
    expr  ->  place . DOT_WID   (rule 207)
    expr  ->  place . DOT_RAD   (rule 208)

    DOT_X	shift, and go to state 187
    DOT_Y	shift, and go to state 188
    DOT_HT	shift, and go to state 189
    DOT_WID	shift, and go to state 190
    DOT_RAD	shift, and go to state 191

    '+' 	reduce using rule 130 (position)
    '-' 	reduce using rule 130 (position)
    $default	reduce using rule 64 (element)



state 281

    placeless_element  ->  VARIABLE ':' '=' any_expr .   (rule 11)

    $default	reduce using rule 11 (placeless_element)



state 282

    placeless_element  ->  COPY TEXT THRU @2 . DELIMITED @3 until   (rule 24)

    DELIMITED	shift, and go to state 348



state 283

    placeless_element  ->  COPY THRU @4 DELIMITED . @5 until   (rule 27)

    $default	reduce using rule 26 (@5)

    @5  	go to state 349



state 284

    expr  ->  SIN '(' any_expr . ')'   (rule 217)

    ')' 	shift, and go to state 350



state 285

    expr  ->  COS '(' any_expr . ')'   (rule 218)

    ')' 	shift, and go to state 351



state 286

    expr  ->  ATAN2 '(' any_expr . ',' any_expr ')'   (rule 219)

    ',' 	shift, and go to state 352



state 287

    expr  ->  LOG '(' any_expr . ')'   (rule 220)

    ')' 	shift, and go to state 353



state 288

    expr  ->  EXP '(' any_expr . ')'   (rule 221)

    ')' 	shift, and go to state 354



state 289

    expr  ->  SQRT '(' any_expr . ')'   (rule 222)

    ')' 	shift, and go to state 355



state 290

    expr  ->  MAX '(' any_expr . ',' any_expr ')'   (rule 223)

    ',' 	shift, and go to state 356



state 291

    expr  ->  MIN '(' any_expr . ',' any_expr ')'   (rule 224)

    ',' 	shift, and go to state 357



state 292

    expr  ->  INT '(' any_expr . ')'   (rule 225)

    ')' 	shift, and go to state 358



state 293

    expr  ->  RAND '(' ')' .   (rule 227)

    $default	reduce using rule 227 (expr)



state 294

    expr  ->  RAND '(' any_expr . ')'   (rule 226)

    ')' 	shift, and go to state 359



state 295

    expr  ->  '(' any_expr ')' .   (rule 216)

    $default	reduce using rule 216 (expr)



state 296

    position_not_place  ->  '(' position ',' . position ')'   (rule 134)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '(' 	shift, and go to state 84
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    position	go to state 360
    position_not_place	go to state 92
    expr_pair	go to state 93
    place	go to state 94
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 254



state 297

    expr_pair  ->  '(' expr_pair ')' .   (rule 140)

    $default	reduce using rule 140 (expr_pair)



state 298

    ordinal  ->  '`' any_expr TH .   (rule 150)

    $default	reduce using rule 150 (ordinal)



state 299

    position_not_place  ->  position '+' expr_pair .   (rule 132)

    $default	reduce using rule 132 (position_not_place)



state 300

    position_not_place  ->  position '-' expr_pair .   (rule 133)

    $default	reduce using rule 133 (position_not_place)



state 301

    label  ->  label '.' LABEL .   (rule 148)

    $default	reduce using rule 148 (label)



state 302

    object_type  ->  '[' ']' .   (rule 162)

    $default	reduce using rule 162 (object_type)



state 303

    place  ->  corner OF label .   (rule 144)
    label  ->  label . '.' LABEL   (rule 148)

    '.' 	shift, and go to state 192

    $default	reduce using rule 144 (place)



state 304

    between  ->  OF THE . WAY BETWEEN   (rule 138)

    WAY 	shift, and go to state 361



state 305

    expr  ->  expr . '+' expr   (rule 209)
    expr  ->  expr . '-' expr   (rule 210)
    expr  ->  expr . '*' expr   (rule 211)
    expr  ->  expr . '/' expr   (rule 212)
    expr  ->  expr . '%' expr   (rule 213)
    expr  ->  expr . '^' expr   (rule 214)
    expr  ->  expr . '<' expr   (rule 228)
    expr  ->  expr . LESSEQUAL expr   (rule 229)
    expr  ->  expr . '>' expr   (rule 230)
    expr  ->  expr . GREATEREQUAL expr   (rule 231)
    expr  ->  expr . EQUALEQUAL expr   (rule 232)
    expr  ->  expr . NOTEQUAL expr   (rule 233)
    expr  ->  expr . ANDAND expr   (rule 234)
    expr  ->  expr ANDAND expr .   (rule 234)
    expr  ->  expr . OROR expr   (rule 235)

    NOTEQUAL	shift, and go to state 212
    EQUALEQUAL	shift, and go to state 213
    LESSEQUAL	shift, and go to state 214
    GREATEREQUAL	shift, and go to state 215
    '<' 	shift, and go to state 236
    '>' 	shift, and go to state 218
    '+' 	shift, and go to state 219
    '-' 	shift, and go to state 220
    '*' 	shift, and go to state 221
    '/' 	shift, and go to state 222
    '%' 	shift, and go to state 223
    '^' 	shift, and go to state 224

    $default	reduce using rule 234 (expr)



state 306

    expr  ->  expr . '+' expr   (rule 209)
    expr  ->  expr . '-' expr   (rule 210)
    expr  ->  expr . '*' expr   (rule 211)
    expr  ->  expr . '/' expr   (rule 212)
    expr  ->  expr . '%' expr   (rule 213)
    expr  ->  expr . '^' expr   (rule 214)
    expr  ->  expr . '<' expr   (rule 228)
    expr  ->  expr . LESSEQUAL expr   (rule 229)
    expr  ->  expr . '>' expr   (rule 230)
    expr  ->  expr . GREATEREQUAL expr   (rule 231)
    expr  ->  expr . EQUALEQUAL expr   (rule 232)
    expr  ->  expr . NOTEQUAL expr   (rule 233)
    expr  ->  expr . ANDAND expr   (rule 234)
    expr  ->  expr . OROR expr   (rule 235)
    expr  ->  expr OROR expr .   (rule 235)

    ANDAND	shift, and go to state 210
    NOTEQUAL	shift, and go to state 212
    EQUALEQUAL	shift, and go to state 213
    LESSEQUAL	shift, and go to state 214
    GREATEREQUAL	shift, and go to state 215
    '<' 	shift, and go to state 236
    '>' 	shift, and go to state 218
    '+' 	shift, and go to state 219
    '-' 	shift, and go to state 220
    '*' 	shift, and go to state 221
    '/' 	shift, and go to state 222
    '%' 	shift, and go to state 223
    '^' 	shift, and go to state 224

    $default	reduce using rule 235 (expr)



state 307

    expr  ->  expr . '+' expr   (rule 209)
    expr  ->  expr . '-' expr   (rule 210)
    expr  ->  expr . '*' expr   (rule 211)
    expr  ->  expr . '/' expr   (rule 212)
    expr  ->  expr . '%' expr   (rule 213)
    expr  ->  expr . '^' expr   (rule 214)
    expr  ->  expr . '<' expr   (rule 228)
    expr  ->  expr . LESSEQUAL expr   (rule 229)
    expr  ->  expr . '>' expr   (rule 230)
    expr  ->  expr . GREATEREQUAL expr   (rule 231)
    expr  ->  expr . EQUALEQUAL expr   (rule 232)
    expr  ->  expr . NOTEQUAL expr   (rule 233)
    expr  ->  expr NOTEQUAL expr .   (rule 233)
    expr  ->  expr . ANDAND expr   (rule 234)
    expr  ->  expr . OROR expr   (rule 235)

    LESSEQUAL	shift, and go to state 214
    GREATEREQUAL	shift, and go to state 215
    '<' 	shift, and go to state 236
    '>' 	shift, and go to state 218
    '+' 	shift, and go to state 219
    '-' 	shift, and go to state 220
    '*' 	shift, and go to state 221
    '/' 	shift, and go to state 222
    '%' 	shift, and go to state 223
    '^' 	shift, and go to state 224

    $default	reduce using rule 233 (expr)



state 308

    expr  ->  expr . '+' expr   (rule 209)
    expr  ->  expr . '-' expr   (rule 210)
    expr  ->  expr . '*' expr   (rule 211)
    expr  ->  expr . '/' expr   (rule 212)
    expr  ->  expr . '%' expr   (rule 213)
    expr  ->  expr . '^' expr   (rule 214)
    expr  ->  expr . '<' expr   (rule 228)
    expr  ->  expr . LESSEQUAL expr   (rule 229)
    expr  ->  expr . '>' expr   (rule 230)
    expr  ->  expr . GREATEREQUAL expr   (rule 231)
    expr  ->  expr . EQUALEQUAL expr   (rule 232)
    expr  ->  expr EQUALEQUAL expr .   (rule 232)
    expr  ->  expr . NOTEQUAL expr   (rule 233)
    expr  ->  expr . ANDAND expr   (rule 234)
    expr  ->  expr . OROR expr   (rule 235)

    LESSEQUAL	shift, and go to state 214
    GREATEREQUAL	shift, and go to state 215
    '<' 	shift, and go to state 236
    '>' 	shift, and go to state 218
    '+' 	shift, and go to state 219
    '-' 	shift, and go to state 220
    '*' 	shift, and go to state 221
    '/' 	shift, and go to state 222
    '%' 	shift, and go to state 223
    '^' 	shift, and go to state 224

    $default	reduce using rule 232 (expr)



state 309

    expr  ->  expr . '+' expr   (rule 209)
    expr  ->  expr . '-' expr   (rule 210)
    expr  ->  expr . '*' expr   (rule 211)
    expr  ->  expr . '/' expr   (rule 212)
    expr  ->  expr . '%' expr   (rule 213)
    expr  ->  expr . '^' expr   (rule 214)
    expr  ->  expr . '<' expr   (rule 228)
    expr  ->  expr . LESSEQUAL expr   (rule 229)
    expr  ->  expr LESSEQUAL expr .   (rule 229)
    expr  ->  expr . '>' expr   (rule 230)
    expr  ->  expr . GREATEREQUAL expr   (rule 231)
    expr  ->  expr . EQUALEQUAL expr   (rule 232)
    expr  ->  expr . NOTEQUAL expr   (rule 233)
    expr  ->  expr . ANDAND expr   (rule 234)
    expr  ->  expr . OROR expr   (rule 235)

    '+' 	shift, and go to state 219
    '-' 	shift, and go to state 220
    '*' 	shift, and go to state 221
    '/' 	shift, and go to state 222
    '%' 	shift, and go to state 223
    '^' 	shift, and go to state 224

    $default	reduce using rule 229 (expr)



state 310

    expr  ->  expr . '+' expr   (rule 209)
    expr  ->  expr . '-' expr   (rule 210)
    expr  ->  expr . '*' expr   (rule 211)
    expr  ->  expr . '/' expr   (rule 212)
    expr  ->  expr . '%' expr   (rule 213)
    expr  ->  expr . '^' expr   (rule 214)
    expr  ->  expr . '<' expr   (rule 228)
    expr  ->  expr . LESSEQUAL expr   (rule 229)
    expr  ->  expr . '>' expr   (rule 230)
    expr  ->  expr . GREATEREQUAL expr   (rule 231)
    expr  ->  expr GREATEREQUAL expr .   (rule 231)
    expr  ->  expr . EQUALEQUAL expr   (rule 232)
    expr  ->  expr . NOTEQUAL expr   (rule 233)
    expr  ->  expr . ANDAND expr   (rule 234)
    expr  ->  expr . OROR expr   (rule 235)

    '+' 	shift, and go to state 219
    '-' 	shift, and go to state 220
    '*' 	shift, and go to state 221
    '/' 	shift, and go to state 222
    '%' 	shift, and go to state 223
    '^' 	shift, and go to state 224

    $default	reduce using rule 231 (expr)



state 311

    expr_pair  ->  expr ',' expr .   (rule 139)
    expr  ->  expr . '+' expr   (rule 209)
    expr  ->  expr . '-' expr   (rule 210)
    expr  ->  expr . '*' expr   (rule 211)
    expr  ->  expr . '/' expr   (rule 212)
    expr  ->  expr . '%' expr   (rule 213)
    expr  ->  expr . '^' expr   (rule 214)
    expr  ->  expr . '<' expr   (rule 228)
    expr  ->  expr . LESSEQUAL expr   (rule 229)
    expr  ->  expr . '>' expr   (rule 230)
    expr  ->  expr . GREATEREQUAL expr   (rule 231)
    expr  ->  expr . EQUALEQUAL expr   (rule 232)
    expr  ->  expr . NOTEQUAL expr   (rule 233)
    expr  ->  expr . ANDAND expr   (rule 234)
    expr  ->  expr . OROR expr   (rule 235)

    ANDAND	shift, and go to state 210
    OROR	shift, and go to state 211
    NOTEQUAL	shift, and go to state 212
    EQUALEQUAL	shift, and go to state 213
    LESSEQUAL	shift, and go to state 214
    GREATEREQUAL	shift, and go to state 215
    '<' 	shift, and go to state 236
    '>' 	shift, and go to state 218
    '+' 	shift, and go to state 219
    '-' 	shift, and go to state 220
    '*' 	shift, and go to state 221
    '/' 	shift, and go to state 222
    '%' 	shift, and go to state 223
    '^' 	shift, and go to state 224

    $default	reduce using rule 139 (expr_pair)



state 312

    position_not_place  ->  position . '+' expr_pair   (rule 132)
    position_not_place  ->  position . '-' expr_pair   (rule 133)
    position_not_place  ->  expr '<' position . ',' position '>'   (rule 136)

    ',' 	shift, and go to state 362
    '+' 	shift, and go to state 185
    '-' 	shift, and go to state 186



state 313

    position_not_place  ->  expr . between position AND position   (rule 135)
    position_not_place  ->  expr . '<' position ',' position '>'   (rule 136)
    expr_pair  ->  expr . ',' expr   (rule 139)
    expr  ->  expr . '+' expr   (rule 209)
    expr  ->  expr . '-' expr   (rule 210)
    expr  ->  expr . '*' expr   (rule 211)
    expr  ->  expr . '/' expr   (rule 212)
    expr  ->  expr . '%' expr   (rule 213)
    expr  ->  expr . '^' expr   (rule 214)
    expr  ->  expr . '<' expr   (rule 228)
    expr  ->  expr '<' expr .   (rule 228)
    expr  ->  expr . LESSEQUAL expr   (rule 229)
    expr  ->  expr . '>' expr   (rule 230)
    expr  ->  expr . GREATEREQUAL expr   (rule 231)
    expr  ->  expr . EQUALEQUAL expr   (rule 232)
    expr  ->  expr . NOTEQUAL expr   (rule 233)
    expr  ->  expr . ANDAND expr   (rule 234)
    expr  ->  expr . OROR expr   (rule 235)

    OF  	shift, and go to state 208
    BETWEEN	shift, and go to state 209
    '+' 	shift, and go to state 219
    '-' 	shift, and go to state 220
    '*' 	shift, and go to state 221
    '/' 	shift, and go to state 222
    '%' 	shift, and go to state 223
    '^' 	shift, and go to state 224

    $default	reduce using rule 228 (expr)

    between	go to state 225



state 314

    expr  ->  expr . '+' expr   (rule 209)
    expr  ->  expr . '-' expr   (rule 210)
    expr  ->  expr . '*' expr   (rule 211)
    expr  ->  expr . '/' expr   (rule 212)
    expr  ->  expr . '%' expr   (rule 213)
    expr  ->  expr . '^' expr   (rule 214)
    expr  ->  expr . '<' expr   (rule 228)
    expr  ->  expr . LESSEQUAL expr   (rule 229)
    expr  ->  expr . '>' expr   (rule 230)
    expr  ->  expr '>' expr .   (rule 230)
    expr  ->  expr . GREATEREQUAL expr   (rule 231)
    expr  ->  expr . EQUALEQUAL expr   (rule 232)
    expr  ->  expr . NOTEQUAL expr   (rule 233)
    expr  ->  expr . ANDAND expr   (rule 234)
    expr  ->  expr . OROR expr   (rule 235)

    '+' 	shift, and go to state 219
    '-' 	shift, and go to state 220
    '*' 	shift, and go to state 221
    '/' 	shift, and go to state 222
    '%' 	shift, and go to state 223
    '^' 	shift, and go to state 224

    $default	reduce using rule 230 (expr)



state 315

    expr  ->  expr . '+' expr   (rule 209)
    expr  ->  expr '+' expr .   (rule 209)
    expr  ->  expr . '-' expr   (rule 210)
    expr  ->  expr . '*' expr   (rule 211)
    expr  ->  expr . '/' expr   (rule 212)
    expr  ->  expr . '%' expr   (rule 213)
    expr  ->  expr . '^' expr   (rule 214)
    expr  ->  expr . '<' expr   (rule 228)
    expr  ->  expr . LESSEQUAL expr   (rule 229)
    expr  ->  expr . '>' expr   (rule 230)
    expr  ->  expr . GREATEREQUAL expr   (rule 231)
    expr  ->  expr . EQUALEQUAL expr   (rule 232)
    expr  ->  expr . NOTEQUAL expr   (rule 233)
    expr  ->  expr . ANDAND expr   (rule 234)
    expr  ->  expr . OROR expr   (rule 235)

    '*' 	shift, and go to state 221
    '/' 	shift, and go to state 222
    '%' 	shift, and go to state 223
    '^' 	shift, and go to state 224

    $default	reduce using rule 209 (expr)



state 316

    expr  ->  expr . '+' expr   (rule 209)
    expr  ->  expr . '-' expr   (rule 210)
    expr  ->  expr '-' expr .   (rule 210)
    expr  ->  expr . '*' expr   (rule 211)
    expr  ->  expr . '/' expr   (rule 212)
    expr  ->  expr . '%' expr   (rule 213)
    expr  ->  expr . '^' expr   (rule 214)
    expr  ->  expr . '<' expr   (rule 228)
    expr  ->  expr . LESSEQUAL expr   (rule 229)
    expr  ->  expr . '>' expr   (rule 230)
    expr  ->  expr . GREATEREQUAL expr   (rule 231)
    expr  ->  expr . EQUALEQUAL expr   (rule 232)
    expr  ->  expr . NOTEQUAL expr   (rule 233)
    expr  ->  expr . ANDAND expr   (rule 234)
    expr  ->  expr . OROR expr   (rule 235)

    '*' 	shift, and go to state 221
    '/' 	shift, and go to state 222
    '%' 	shift, and go to state 223
    '^' 	shift, and go to state 224

    $default	reduce using rule 210 (expr)



state 317

    expr  ->  expr . '+' expr   (rule 209)
    expr  ->  expr . '-' expr   (rule 210)
    expr  ->  expr . '*' expr   (rule 211)
    expr  ->  expr '*' expr .   (rule 211)
    expr  ->  expr . '/' expr   (rule 212)
    expr  ->  expr . '%' expr   (rule 213)
    expr  ->  expr . '^' expr   (rule 214)
    expr  ->  expr . '<' expr   (rule 228)
    expr  ->  expr . LESSEQUAL expr   (rule 229)
    expr  ->  expr . '>' expr   (rule 230)
    expr  ->  expr . GREATEREQUAL expr   (rule 231)
    expr  ->  expr . EQUALEQUAL expr   (rule 232)
    expr  ->  expr . NOTEQUAL expr   (rule 233)
    expr  ->  expr . ANDAND expr   (rule 234)
    expr  ->  expr . OROR expr   (rule 235)

    '^' 	shift, and go to state 224

    $default	reduce using rule 211 (expr)



state 318

    expr  ->  expr . '+' expr   (rule 209)
    expr  ->  expr . '-' expr   (rule 210)
    expr  ->  expr . '*' expr   (rule 211)
    expr  ->  expr . '/' expr   (rule 212)
    expr  ->  expr '/' expr .   (rule 212)
    expr  ->  expr . '%' expr   (rule 213)
    expr  ->  expr . '^' expr   (rule 214)
    expr  ->  expr . '<' expr   (rule 228)
    expr  ->  expr . LESSEQUAL expr   (rule 229)
    expr  ->  expr . '>' expr   (rule 230)
    expr  ->  expr . GREATEREQUAL expr   (rule 231)
    expr  ->  expr . EQUALEQUAL expr   (rule 232)
    expr  ->  expr . NOTEQUAL expr   (rule 233)
    expr  ->  expr . ANDAND expr   (rule 234)
    expr  ->  expr . OROR expr   (rule 235)

    '^' 	shift, and go to state 224

    $default	reduce using rule 212 (expr)



state 319

    expr  ->  expr . '+' expr   (rule 209)
    expr  ->  expr . '-' expr   (rule 210)
    expr  ->  expr . '*' expr   (rule 211)
    expr  ->  expr . '/' expr   (rule 212)
    expr  ->  expr . '%' expr   (rule 213)
    expr  ->  expr '%' expr .   (rule 213)
    expr  ->  expr . '^' expr   (rule 214)
    expr  ->  expr . '<' expr   (rule 228)
    expr  ->  expr . LESSEQUAL expr   (rule 229)
    expr  ->  expr . '>' expr   (rule 230)
    expr  ->  expr . GREATEREQUAL expr   (rule 231)
    expr  ->  expr . EQUALEQUAL expr   (rule 232)
    expr  ->  expr . NOTEQUAL expr   (rule 233)
    expr  ->  expr . ANDAND expr   (rule 234)
    expr  ->  expr . OROR expr   (rule 235)

    '^' 	shift, and go to state 224

    $default	reduce using rule 213 (expr)



state 320

    expr  ->  expr . '+' expr   (rule 209)
    expr  ->  expr . '-' expr   (rule 210)
    expr  ->  expr . '*' expr   (rule 211)
    expr  ->  expr . '/' expr   (rule 212)
    expr  ->  expr . '%' expr   (rule 213)
    expr  ->  expr . '^' expr   (rule 214)
    expr  ->  expr '^' expr .   (rule 214)
    expr  ->  expr . '<' expr   (rule 228)
    expr  ->  expr . LESSEQUAL expr   (rule 229)
    expr  ->  expr . '>' expr   (rule 230)
    expr  ->  expr . GREATEREQUAL expr   (rule 231)
    expr  ->  expr . EQUALEQUAL expr   (rule 232)
    expr  ->  expr . NOTEQUAL expr   (rule 233)
    expr  ->  expr . ANDAND expr   (rule 234)
    expr  ->  expr . OROR expr   (rule 235)

    '^' 	shift, and go to state 224

    $default	reduce using rule 214 (expr)



state 321

    position_not_place  ->  position . '+' expr_pair   (rule 132)
    position_not_place  ->  position . '-' expr_pair   (rule 133)
    position_not_place  ->  expr between position . AND position   (rule 135)

    AND 	shift, and go to state 363
    '+' 	shift, and go to state 185
    '-' 	shift, and go to state 186



state 322

    placeless_element  ->  FOR VARIABLE '=' expr . TO expr optional_by DO @6 DELIMITED   (rule 29)
    expr  ->  expr . '+' expr   (rule 209)
    expr  ->  expr . '-' expr   (rule 210)
    expr  ->  expr . '*' expr   (rule 211)
    expr  ->  expr . '/' expr   (rule 212)
    expr  ->  expr . '%' expr   (rule 213)
    expr  ->  expr . '^' expr   (rule 214)
    expr  ->  expr . '<' expr   (rule 228)
    expr  ->  expr . LESSEQUAL expr   (rule 229)
    expr  ->  expr . '>' expr   (rule 230)
    expr  ->  expr . GREATEREQUAL expr   (rule 231)
    expr  ->  expr . EQUALEQUAL expr   (rule 232)
    expr  ->  expr . NOTEQUAL expr   (rule 233)
    expr  ->  expr . ANDAND expr   (rule 234)
    expr  ->  expr . OROR expr   (rule 235)

    TO  	shift, and go to state 364
    ANDAND	shift, and go to state 210
    OROR	shift, and go to state 211
    NOTEQUAL	shift, and go to state 212
    EQUALEQUAL	shift, and go to state 213
    LESSEQUAL	shift, and go to state 214
    GREATEREQUAL	shift, and go to state 215
    '<' 	shift, and go to state 236
    '>' 	shift, and go to state 218
    '+' 	shift, and go to state 219
    '-' 	shift, and go to state 220
    '*' 	shift, and go to state 221
    '/' 	shift, and go to state 222
    '%' 	shift, and go to state 223
    '^' 	shift, and go to state 224



state 323

    simple_if  ->  IF any_expr THEN @8 . DELIMITED   (rule 44)

    DELIMITED	shift, and go to state 365



state 324

    text_expr  ->  text_expr . ANDAND text_expr   (rule 51)
    text_expr  ->  text_expr ANDAND text_expr .   (rule 51)
    text_expr  ->  text_expr . ANDAND expr   (rule 52)
    text_expr  ->  text_expr . OROR text_expr   (rule 54)
    text_expr  ->  text_expr . OROR expr   (rule 55)


    $default	reduce using rule 51 (text_expr)



state 325

    text_expr  ->  text_expr ANDAND expr .   (rule 52)
    text_expr  ->  expr . ANDAND text_expr   (rule 53)
    text_expr  ->  expr . OROR text_expr   (rule 56)
    expr  ->  expr . '+' expr   (rule 209)
    expr  ->  expr . '-' expr   (rule 210)
    expr  ->  expr . '*' expr   (rule 211)
    expr  ->  expr . '/' expr   (rule 212)
    expr  ->  expr . '%' expr   (rule 213)
    expr  ->  expr . '^' expr   (rule 214)
    expr  ->  expr . '<' expr   (rule 228)
    expr  ->  expr . LESSEQUAL expr   (rule 229)
    expr  ->  expr . '>' expr   (rule 230)
    expr  ->  expr . GREATEREQUAL expr   (rule 231)
    expr  ->  expr . EQUALEQUAL expr   (rule 232)
    expr  ->  expr . NOTEQUAL expr   (rule 233)
    expr  ->  expr . ANDAND expr   (rule 234)
    expr  ->  expr . OROR expr   (rule 235)

    NOTEQUAL	shift, and go to state 212
    EQUALEQUAL	shift, and go to state 213
    LESSEQUAL	shift, and go to state 214
    GREATEREQUAL	shift, and go to state 215
    '<' 	shift, and go to state 236
    '>' 	shift, and go to state 218
    '+' 	shift, and go to state 219
    '-' 	shift, and go to state 220
    '*' 	shift, and go to state 221
    '/' 	shift, and go to state 222
    '%' 	shift, and go to state 223
    '^' 	shift, and go to state 224

    $default	reduce using rule 52 (text_expr)



state 326

    text_expr  ->  text_expr . ANDAND text_expr   (rule 51)
    text_expr  ->  text_expr . ANDAND expr   (rule 52)
    text_expr  ->  text_expr . OROR text_expr   (rule 54)
    text_expr  ->  text_expr OROR text_expr .   (rule 54)
    text_expr  ->  text_expr . OROR expr   (rule 55)

    ANDAND	shift, and go to state 230

    $default	reduce using rule 54 (text_expr)



state 327

    text_expr  ->  expr . ANDAND text_expr   (rule 53)
    text_expr  ->  text_expr OROR expr .   (rule 55)
    text_expr  ->  expr . OROR text_expr   (rule 56)
    expr  ->  expr . '+' expr   (rule 209)
    expr  ->  expr . '-' expr   (rule 210)
    expr  ->  expr . '*' expr   (rule 211)
    expr  ->  expr . '/' expr   (rule 212)
    expr  ->  expr . '%' expr   (rule 213)
    expr  ->  expr . '^' expr   (rule 214)
    expr  ->  expr . '<' expr   (rule 228)
    expr  ->  expr . LESSEQUAL expr   (rule 229)
    expr  ->  expr . '>' expr   (rule 230)
    expr  ->  expr . GREATEREQUAL expr   (rule 231)
    expr  ->  expr . EQUALEQUAL expr   (rule 232)
    expr  ->  expr . NOTEQUAL expr   (rule 233)
    expr  ->  expr . ANDAND expr   (rule 234)
    expr  ->  expr . OROR expr   (rule 235)

    ANDAND	shift, and go to state 234
    NOTEQUAL	shift, and go to state 212
    EQUALEQUAL	shift, and go to state 213
    LESSEQUAL	shift, and go to state 214
    GREATEREQUAL	shift, and go to state 215
    '<' 	shift, and go to state 236
    '>' 	shift, and go to state 218
    '+' 	shift, and go to state 219
    '-' 	shift, and go to state 220
    '*' 	shift, and go to state 221
    '/' 	shift, and go to state 222
    '%' 	shift, and go to state 223
    '^' 	shift, and go to state 224

    $default	reduce using rule 55 (text_expr)



state 328

    text_expr  ->  text NOTEQUAL text .   (rule 50)

    $default	reduce using rule 50 (text_expr)



state 329

    text_expr  ->  text EQUALEQUAL text .   (rule 49)

    $default	reduce using rule 49 (text_expr)



state 330

    text_expr  ->  text_expr . ANDAND text_expr   (rule 51)
    text_expr  ->  text_expr . ANDAND expr   (rule 52)
    text_expr  ->  expr ANDAND text_expr .   (rule 53)
    text_expr  ->  text_expr . OROR text_expr   (rule 54)
    text_expr  ->  text_expr . OROR expr   (rule 55)


    $default	reduce using rule 53 (text_expr)



state 331

    text_expr  ->  expr . ANDAND text_expr   (rule 53)
    text_expr  ->  expr . OROR text_expr   (rule 56)
    expr  ->  expr . '+' expr   (rule 209)
    expr  ->  expr . '-' expr   (rule 210)
    expr  ->  expr . '*' expr   (rule 211)
    expr  ->  expr . '/' expr   (rule 212)
    expr  ->  expr . '%' expr   (rule 213)
    expr  ->  expr . '^' expr   (rule 214)
    expr  ->  expr . '<' expr   (rule 228)
    expr  ->  expr . LESSEQUAL expr   (rule 229)
    expr  ->  expr . '>' expr   (rule 230)
    expr  ->  expr . GREATEREQUAL expr   (rule 231)
    expr  ->  expr . EQUALEQUAL expr   (rule 232)
    expr  ->  expr . NOTEQUAL expr   (rule 233)
    expr  ->  expr . ANDAND expr   (rule 234)
    expr  ->  expr ANDAND expr .   (rule 234)
    expr  ->  expr . OROR expr   (rule 235)

    NOTEQUAL	shift, and go to state 212
    EQUALEQUAL	shift, and go to state 213
    LESSEQUAL	shift, and go to state 214
    GREATEREQUAL	shift, and go to state 215
    '<' 	shift, and go to state 236
    '>' 	shift, and go to state 218
    '+' 	shift, and go to state 219
    '-' 	shift, and go to state 220
    '*' 	shift, and go to state 221
    '/' 	shift, and go to state 222
    '%' 	shift, and go to state 223
    '^' 	shift, and go to state 224

    $default	reduce using rule 234 (expr)



state 332

    text_expr  ->  text_expr . ANDAND text_expr   (rule 51)
    text_expr  ->  text_expr . ANDAND expr   (rule 52)
    text_expr  ->  text_expr . OROR text_expr   (rule 54)
    text_expr  ->  text_expr . OROR expr   (rule 55)
    text_expr  ->  expr OROR text_expr .   (rule 56)

    ANDAND	shift, and go to state 230

    $default	reduce using rule 56 (text_expr)



state 333

    text_expr  ->  expr . ANDAND text_expr   (rule 53)
    text_expr  ->  expr . OROR text_expr   (rule 56)
    expr  ->  expr . '+' expr   (rule 209)
    expr  ->  expr . '-' expr   (rule 210)
    expr  ->  expr . '*' expr   (rule 211)
    expr  ->  expr . '/' expr   (rule 212)
    expr  ->  expr . '%' expr   (rule 213)
    expr  ->  expr . '^' expr   (rule 214)
    expr  ->  expr . '<' expr   (rule 228)
    expr  ->  expr . LESSEQUAL expr   (rule 229)
    expr  ->  expr . '>' expr   (rule 230)
    expr  ->  expr . GREATEREQUAL expr   (rule 231)
    expr  ->  expr . EQUALEQUAL expr   (rule 232)
    expr  ->  expr . NOTEQUAL expr   (rule 233)
    expr  ->  expr . ANDAND expr   (rule 234)
    expr  ->  expr . OROR expr   (rule 235)
    expr  ->  expr OROR expr .   (rule 235)

    ANDAND	shift, and go to state 234
    NOTEQUAL	shift, and go to state 212
    EQUALEQUAL	shift, and go to state 213
    LESSEQUAL	shift, and go to state 214
    GREATEREQUAL	shift, and go to state 215
    '<' 	shift, and go to state 236
    '>' 	shift, and go to state 218
    '+' 	shift, and go to state 219
    '-' 	shift, and go to state 220
    '*' 	shift, and go to state 221
    '/' 	shift, and go to state 222
    '%' 	shift, and go to state 223
    '^' 	shift, and go to state 224

    $default	reduce using rule 235 (expr)



state 334

    expr  ->  expr . '+' expr   (rule 209)
    expr  ->  expr . '-' expr   (rule 210)
    expr  ->  expr . '*' expr   (rule 211)
    expr  ->  expr . '/' expr   (rule 212)
    expr  ->  expr . '%' expr   (rule 213)
    expr  ->  expr . '^' expr   (rule 214)
    expr  ->  expr . '<' expr   (rule 228)
    expr  ->  expr '<' expr .   (rule 228)
    expr  ->  expr . LESSEQUAL expr   (rule 229)
    expr  ->  expr . '>' expr   (rule 230)
    expr  ->  expr . GREATEREQUAL expr   (rule 231)
    expr  ->  expr . EQUALEQUAL expr   (rule 232)
    expr  ->  expr . NOTEQUAL expr   (rule 233)
    expr  ->  expr . ANDAND expr   (rule 234)
    expr  ->  expr . OROR expr   (rule 235)

    '+' 	shift, and go to state 219
    '-' 	shift, and go to state 220
    '*' 	shift, and go to state 221
    '/' 	shift, and go to state 222
    '%' 	shift, and go to state 223
    '^' 	shift, and go to state 224

    $default	reduce using rule 228 (expr)



state 335

    text  ->  SPRINTF '(' TEXT sprintf_args . ')'   (rule 126)
    sprintf_args  ->  sprintf_args . ',' expr   (rule 128)

    ',' 	shift, and go to state 366
    ')' 	shift, and go to state 367



state 336

    element  ->  '{' @9 element_list '}' . @10 optional_element   (rule 67)

    $default	reduce using rule 66 (@10)

    @10 	go to state 368



state 337

    object_spec  ->  '[' @11 element_list ']' .   (rule 83)

    $default	reduce using rule 83 (object_spec)



state 338

    placeless_element  ->  simple_if ELSE @7 DELIMITED .   (rule 32)

    $default	reduce using rule 32 (placeless_element)



state 339

    path  ->  LABEL relative_path .   (rule 173)

    $default	reduce using rule 173 (path)



state 340

    path  ->  ORDINAL LAST . object_type relative_path   (rule 170)

    TEXT	shift, and go to state 194
    BOX 	shift, and go to state 196
    CIRCLE	shift, and go to state 197
    ELLIPSE	shift, and go to state 198
    ARC 	shift, and go to state 199
    LINE	shift, and go to state 200
    ARROW	shift, and go to state 201
    SPLINE	shift, and go to state 202
    '[' 	shift, and go to state 203

    object_type	go to state 369



state 341

    path  ->  ORDINAL object_type . relative_path   (rule 172)

    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '.' 	shift, and go to state 260

    label_path	go to state 261
    relative_path	go to state 370
    corner	go to state 264



state 342

    path  ->  LAST object_type . relative_path   (rule 171)

    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '.' 	shift, and go to state 260

    label_path	go to state 261
    relative_path	go to state 371
    corner	go to state 264



state 343

    label_path  ->  '.' LABEL .   (rule 164)

    $default	reduce using rule 164 (label_path)



state 344

    label_path  ->  label_path '.' . LABEL   (rule 165)

    LABEL	shift, and go to state 372



state 345

    relative_path  ->  label_path corner .   (rule 168)

    $default	reduce using rule 168 (relative_path)



state 346

    expr_pair  ->  '(' expr_pair . ')'   (rule 140)

    ')' 	shift, and go to state 297



state 347

    any_expr  ->  expr .   (rule 47)
    text_expr  ->  expr . ANDAND text_expr   (rule 53)
    text_expr  ->  expr . OROR text_expr   (rule 56)
    expr_pair  ->  expr . ',' expr   (rule 139)
    expr  ->  expr . '+' expr   (rule 209)
    expr  ->  expr . '-' expr   (rule 210)
    expr  ->  expr . '*' expr   (rule 211)
    expr  ->  expr . '/' expr   (rule 212)
    expr  ->  expr . '%' expr   (rule 213)
    expr  ->  expr . '^' expr   (rule 214)
    expr  ->  expr . '<' expr   (rule 228)
    expr  ->  expr . LESSEQUAL expr   (rule 229)
    expr  ->  expr . '>' expr   (rule 230)
    expr  ->  expr . GREATEREQUAL expr   (rule 231)
    expr  ->  expr . EQUALEQUAL expr   (rule 232)
    expr  ->  expr . NOTEQUAL expr   (rule 233)
    expr  ->  expr . ANDAND expr   (rule 234)
    expr  ->  expr . OROR expr   (rule 235)

    ANDAND	shift, and go to state 234
    OROR	shift, and go to state 235
    NOTEQUAL	shift, and go to state 212
    EQUALEQUAL	shift, and go to state 213
    LESSEQUAL	shift, and go to state 214
    GREATEREQUAL	shift, and go to state 215
    ',' 	shift, and go to state 216
    '<' 	shift, and go to state 236
    '>' 	shift, and go to state 218
    '+' 	shift, and go to state 219
    '-' 	shift, and go to state 220
    '*' 	shift, and go to state 221
    '/' 	shift, and go to state 222
    '%' 	shift, and go to state 223
    '^' 	shift, and go to state 224

    $default	reduce using rule 47 (any_expr)



state 348

    placeless_element  ->  COPY TEXT THRU @2 DELIMITED . @3 until   (rule 24)

    $default	reduce using rule 23 (@3)

    @3  	go to state 373



state 349

    placeless_element  ->  COPY THRU @4 DELIMITED @5 . until   (rule 27)

    UNTIL	shift, and go to state 374

    $default	reduce using rule 45 (until)

    until	go to state 375



state 350

    expr  ->  SIN '(' any_expr ')' .   (rule 217)

    $default	reduce using rule 217 (expr)



state 351

    expr  ->  COS '(' any_expr ')' .   (rule 218)

    $default	reduce using rule 218 (expr)



state 352

    expr  ->  ATAN2 '(' any_expr ',' . any_expr ')'   (rule 219)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    TEXT	shift, and go to state 7
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    SPRINTF	shift, and go to state 28
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 103

    any_expr	go to state 376
    text_expr	go to state 105
    text	go to state 106
    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 108



state 353

    expr  ->  LOG '(' any_expr ')' .   (rule 220)

    $default	reduce using rule 220 (expr)



state 354

    expr  ->  EXP '(' any_expr ')' .   (rule 221)

    $default	reduce using rule 221 (expr)



state 355

    expr  ->  SQRT '(' any_expr ')' .   (rule 222)

    $default	reduce using rule 222 (expr)



state 356

    expr  ->  MAX '(' any_expr ',' . any_expr ')'   (rule 223)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    TEXT	shift, and go to state 7
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    SPRINTF	shift, and go to state 28
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 103

    any_expr	go to state 377
    text_expr	go to state 105
    text	go to state 106
    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 108



state 357

    expr  ->  MIN '(' any_expr ',' . any_expr ')'   (rule 224)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    TEXT	shift, and go to state 7
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    SPRINTF	shift, and go to state 28
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 103

    any_expr	go to state 378
    text_expr	go to state 105
    text	go to state 106
    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 108



state 358

    expr  ->  INT '(' any_expr ')' .   (rule 225)

    $default	reduce using rule 225 (expr)



state 359

    expr  ->  RAND '(' any_expr ')' .   (rule 226)

    $default	reduce using rule 226 (expr)



state 360

    position_not_place  ->  position . '+' expr_pair   (rule 132)
    position_not_place  ->  position . '-' expr_pair   (rule 133)
    position_not_place  ->  '(' position ',' position . ')'   (rule 134)

    '+' 	shift, and go to state 185
    '-' 	shift, and go to state 186
    ')' 	shift, and go to state 379



state 361

    between  ->  OF THE WAY . BETWEEN   (rule 138)

    BETWEEN	shift, and go to state 380



state 362

    position_not_place  ->  expr '<' position ',' . position '>'   (rule 136)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '(' 	shift, and go to state 84
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    position	go to state 381
    position_not_place	go to state 92
    expr_pair	go to state 93
    place	go to state 94
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 254



state 363

    position_not_place  ->  expr between position AND . position   (rule 135)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '(' 	shift, and go to state 84
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    position	go to state 382
    position_not_place	go to state 92
    expr_pair	go to state 93
    place	go to state 94
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 254



state 364

    placeless_element  ->  FOR VARIABLE '=' expr TO . expr optional_by DO @6 DELIMITED   (rule 29)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 383



state 365

    simple_if  ->  IF any_expr THEN @8 DELIMITED .   (rule 44)

    $default	reduce using rule 44 (simple_if)



state 366

    sprintf_args  ->  sprintf_args ',' . expr   (rule 128)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 384



state 367

    text  ->  SPRINTF '(' TEXT sprintf_args ')' .   (rule 126)

    $default	reduce using rule 126 (text)



state 368

    element  ->  '{' @9 element_list '}' @10 . optional_element   (rule 67)

    LABEL	shift, and go to state 5
    VARIABLE	shift, and go to state 6
    TEXT	shift, and go to state 7
    COMMAND_LINE	shift, and go to state 8
    UP  	shift, and go to state 9
    DOWN	shift, and go to state 10
    LEFT	shift, and go to state 11
    RIGHT	shift, and go to state 12
    BOX 	shift, and go to state 13
    CIRCLE	shift, and go to state 14
    ELLIPSE	shift, and go to state 15
    ARC 	shift, and go to state 16
    LINE	shift, and go to state 17
    ARROW	shift, and go to state 18
    MOVE	shift, and go to state 19
    SPLINE	shift, and go to state 20
    COPY	shift, and go to state 21
    SH  	shift, and go to state 22
    PRINT	shift, and go to state 23
    FOR 	shift, and go to state 24
    IF  	shift, and go to state 25
    RESET	shift, and go to state 26
    PLOT	shift, and go to state 27
    SPRINTF	shift, and go to state 28
    COMMAND	shift, and go to state 29
    '{' 	shift, and go to state 30
    '[' 	shift, and go to state 31

    $default	reduce using rule 69 (optional_element)

    placeless_element	go to state 33
    reset_variables	go to state 34
    simple_if	go to state 35
    element	go to state 385
    optional_element	go to state 386
    object_spec	go to state 37
    text	go to state 38



state 369

    path  ->  ORDINAL LAST object_type . relative_path   (rule 170)

    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '.' 	shift, and go to state 260

    label_path	go to state 261
    relative_path	go to state 387
    corner	go to state 264



state 370

    path  ->  ORDINAL object_type relative_path .   (rule 172)

    $default	reduce using rule 172 (path)



state 371

    path  ->  LAST object_type relative_path .   (rule 171)

    $default	reduce using rule 171 (path)



state 372

    label_path  ->  label_path '.' LABEL .   (rule 165)

    $default	reduce using rule 165 (label_path)



state 373

    placeless_element  ->  COPY TEXT THRU @2 DELIMITED @3 . until   (rule 24)

    UNTIL	shift, and go to state 374

    $default	reduce using rule 45 (until)

    until	go to state 388



state 374

    until  ->  UNTIL . TEXT   (rule 46)

    TEXT	shift, and go to state 389



state 375

    placeless_element  ->  COPY THRU @4 DELIMITED @5 until .   (rule 27)

    $default	reduce using rule 27 (placeless_element)



state 376

    expr  ->  ATAN2 '(' any_expr ',' any_expr . ')'   (rule 219)

    ')' 	shift, and go to state 390



state 377

    expr  ->  MAX '(' any_expr ',' any_expr . ')'   (rule 223)

    ')' 	shift, and go to state 391



state 378

    expr  ->  MIN '(' any_expr ',' any_expr . ')'   (rule 224)

    ')' 	shift, and go to state 392



state 379

    position_not_place  ->  '(' position ',' position ')' .   (rule 134)

    $default	reduce using rule 134 (position_not_place)



state 380

    between  ->  OF THE WAY BETWEEN .   (rule 138)

    $default	reduce using rule 138 (between)



state 381

    position_not_place  ->  position . '+' expr_pair   (rule 132)
    position_not_place  ->  position . '-' expr_pair   (rule 133)
    position_not_place  ->  expr '<' position ',' position . '>'   (rule 136)

    '>' 	shift, and go to state 393
    '+' 	shift, and go to state 185
    '-' 	shift, and go to state 186



state 382

    position_not_place  ->  position . '+' expr_pair   (rule 132)
    position_not_place  ->  position . '-' expr_pair   (rule 133)
    position_not_place  ->  expr between position AND position .   (rule 135)

    '+' 	shift, and go to state 185
    '-' 	shift, and go to state 186

    $default	reduce using rule 135 (position_not_place)



state 383

    placeless_element  ->  FOR VARIABLE '=' expr TO expr . optional_by DO @6 DELIMITED   (rule 29)
    expr  ->  expr . '+' expr   (rule 209)
    expr  ->  expr . '-' expr   (rule 210)
    expr  ->  expr . '*' expr   (rule 211)
    expr  ->  expr . '/' expr   (rule 212)
    expr  ->  expr . '%' expr   (rule 213)
    expr  ->  expr . '^' expr   (rule 214)
    expr  ->  expr . '<' expr   (rule 228)
    expr  ->  expr . LESSEQUAL expr   (rule 229)
    expr  ->  expr . '>' expr   (rule 230)
    expr  ->  expr . GREATEREQUAL expr   (rule 231)
    expr  ->  expr . EQUALEQUAL expr   (rule 232)
    expr  ->  expr . NOTEQUAL expr   (rule 233)
    expr  ->  expr . ANDAND expr   (rule 234)
    expr  ->  expr . OROR expr   (rule 235)

    BY  	shift, and go to state 394
    ANDAND	shift, and go to state 210
    OROR	shift, and go to state 211
    NOTEQUAL	shift, and go to state 212
    EQUALEQUAL	shift, and go to state 213
    LESSEQUAL	shift, and go to state 214
    GREATEREQUAL	shift, and go to state 215
    '<' 	shift, and go to state 236
    '>' 	shift, and go to state 218
    '+' 	shift, and go to state 219
    '-' 	shift, and go to state 220
    '*' 	shift, and go to state 221
    '/' 	shift, and go to state 222
    '%' 	shift, and go to state 223
    '^' 	shift, and go to state 224

    $default	reduce using rule 58 (optional_by)

    optional_by	go to state 395



state 384

    sprintf_args  ->  sprintf_args ',' expr .   (rule 128)
    expr  ->  expr . '+' expr   (rule 209)
    expr  ->  expr . '-' expr   (rule 210)
    expr  ->  expr . '*' expr   (rule 211)
    expr  ->  expr . '/' expr   (rule 212)
    expr  ->  expr . '%' expr   (rule 213)
    expr  ->  expr . '^' expr   (rule 214)
    expr  ->  expr . '<' expr   (rule 228)
    expr  ->  expr . LESSEQUAL expr   (rule 229)
    expr  ->  expr . '>' expr   (rule 230)
    expr  ->  expr . GREATEREQUAL expr   (rule 231)
    expr  ->  expr . EQUALEQUAL expr   (rule 232)
    expr  ->  expr . NOTEQUAL expr   (rule 233)
    expr  ->  expr . ANDAND expr   (rule 234)
    expr  ->  expr . OROR expr   (rule 235)

    ANDAND	shift, and go to state 210
    OROR	shift, and go to state 211
    NOTEQUAL	shift, and go to state 212
    EQUALEQUAL	shift, and go to state 213
    LESSEQUAL	shift, and go to state 214
    GREATEREQUAL	shift, and go to state 215
    '<' 	shift, and go to state 236
    '>' 	shift, and go to state 218
    '+' 	shift, and go to state 219
    '-' 	shift, and go to state 220
    '*' 	shift, and go to state 221
    '/' 	shift, and go to state 222
    '%' 	shift, and go to state 223
    '^' 	shift, and go to state 224

    $default	reduce using rule 128 (sprintf_args)



state 385

    optional_element  ->  element .   (rule 70)

    $default	reduce using rule 70 (optional_element)



state 386

    element  ->  '{' @9 element_list '}' @10 optional_element .   (rule 67)

    $default	reduce using rule 67 (element)



state 387

    path  ->  ORDINAL LAST object_type relative_path .   (rule 170)

    $default	reduce using rule 170 (path)



state 388

    placeless_element  ->  COPY TEXT THRU @2 DELIMITED @3 until .   (rule 24)

    $default	reduce using rule 24 (placeless_element)



state 389

    until  ->  UNTIL TEXT .   (rule 46)

    $default	reduce using rule 46 (until)



state 390

    expr  ->  ATAN2 '(' any_expr ',' any_expr ')' .   (rule 219)

    $default	reduce using rule 219 (expr)



state 391

    expr  ->  MAX '(' any_expr ',' any_expr ')' .   (rule 223)

    $default	reduce using rule 223 (expr)



state 392

    expr  ->  MIN '(' any_expr ',' any_expr ')' .   (rule 224)

    $default	reduce using rule 224 (expr)



state 393

    position_not_place  ->  expr '<' position ',' position '>' .   (rule 136)

    $default	reduce using rule 136 (position_not_place)



state 394

    optional_by  ->  BY . expr   (rule 59)
    optional_by  ->  BY . '*' expr   (rule 60)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '*' 	shift, and go to state 396
    '!' 	shift, and go to state 87

    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 397



state 395

    placeless_element  ->  FOR VARIABLE '=' expr TO expr optional_by . DO @6 DELIMITED   (rule 29)

    DO  	shift, and go to state 398



state 396

    optional_by  ->  BY '*' . expr   (rule 60)

    LABEL	shift, and go to state 46
    VARIABLE	shift, and go to state 47
    NUMBER	shift, and go to state 48
    ORDINAL	shift, and go to state 49
    LAST	shift, and go to state 50
    LEFT	shift, and go to state 51
    RIGHT	shift, and go to state 52
    HERE	shift, and go to state 53
    DOT_N	shift, and go to state 54
    DOT_E	shift, and go to state 55
    DOT_W	shift, and go to state 56
    DOT_S	shift, and go to state 57
    DOT_NE	shift, and go to state 58
    DOT_SE	shift, and go to state 59
    DOT_NW	shift, and go to state 60
    DOT_SW	shift, and go to state 61
    DOT_C	shift, and go to state 62
    DOT_START	shift, and go to state 63
    DOT_END	shift, and go to state 64
    SIN 	shift, and go to state 65
    COS 	shift, and go to state 66
    ATAN2	shift, and go to state 67
    LOG 	shift, and go to state 68
    EXP 	shift, and go to state 69
    SQRT	shift, and go to state 70
    MAX 	shift, and go to state 71
    MIN 	shift, and go to state 72
    INT 	shift, and go to state 73
    RAND	shift, and go to state 74
    TOP 	shift, and go to state 75
    BOTTOM	shift, and go to state 76
    UPPER	shift, and go to state 77
    LOWER	shift, and go to state 78
    LEFT_CORNER	shift, and go to state 79
    RIGHT_CORNER	shift, and go to state 80
    CENTER	shift, and go to state 81
    END 	shift, and go to state 82
    START	shift, and go to state 83
    '(' 	shift, and go to state 102
    '`' 	shift, and go to state 85
    '-' 	shift, and go to state 86
    '!' 	shift, and go to state 87

    place	go to state 107
    label	go to state 95
    ordinal	go to state 96
    optional_ordinal_last	go to state 97
    nth_primitive	go to state 98
    corner	go to state 99
    expr	go to state 399



state 397

    optional_by  ->  BY expr .   (rule 59)
    expr  ->  expr . '+' expr   (rule 209)
    expr  ->  expr . '-' expr   (rule 210)
    expr  ->  expr . '*' expr   (rule 211)
    expr  ->  expr . '/' expr   (rule 212)
    expr  ->  expr . '%' expr   (rule 213)
    expr  ->  expr . '^' expr   (rule 214)
    expr  ->  expr . '<' expr   (rule 228)
    expr  ->  expr . LESSEQUAL expr   (rule 229)
    expr  ->  expr . '>' expr   (rule 230)
    expr  ->  expr . GREATEREQUAL expr   (rule 231)
    expr  ->  expr . EQUALEQUAL expr   (rule 232)
    expr  ->  expr . NOTEQUAL expr   (rule 233)
    expr  ->  expr . ANDAND expr   (rule 234)
    expr  ->  expr . OROR expr   (rule 235)

    ANDAND	shift, and go to state 210
    OROR	shift, and go to state 211
    NOTEQUAL	shift, and go to state 212
    EQUALEQUAL	shift, and go to state 213
    LESSEQUAL	shift, and go to state 214
    GREATEREQUAL	shift, and go to state 215
    '<' 	shift, and go to state 236
    '>' 	shift, and go to state 218
    '+' 	shift, and go to state 219
    '-' 	shift, and go to state 220
    '*' 	shift, and go to state 221
    '/' 	shift, and go to state 222
    '%' 	shift, and go to state 223
    '^' 	shift, and go to state 224

    $default	reduce using rule 59 (optional_by)



state 398

    placeless_element  ->  FOR VARIABLE '=' expr TO expr optional_by DO . @6 DELIMITED   (rule 29)

    $default	reduce using rule 28 (@6)

    @6  	go to state 400



state 399

    optional_by  ->  BY '*' expr .   (rule 60)
    expr  ->  expr . '+' expr   (rule 209)
    expr  ->  expr . '-' expr   (rule 210)
    expr  ->  expr . '*' expr   (rule 211)
    expr  ->  expr . '/' expr   (rule 212)
    expr  ->  expr . '%' expr   (rule 213)
    expr  ->  expr . '^' expr   (rule 214)
    expr  ->  expr . '<' expr   (rule 228)
    expr  ->  expr . LESSEQUAL expr   (rule 229)
    expr  ->  expr . '>' expr   (rule 230)
    expr  ->  expr . GREATEREQUAL expr   (rule 231)
    expr  ->  expr . EQUALEQUAL expr   (rule 232)
    expr  ->  expr . NOTEQUAL expr   (rule 233)
    expr  ->  expr . ANDAND expr   (rule 234)
    expr  ->  expr . OROR expr   (rule 235)

    ANDAND	shift, and go to state 210
    OROR	shift, and go to state 211
    NOTEQUAL	shift, and go to state 212
    EQUALEQUAL	shift, and go to state 213
    LESSEQUAL	shift, and go to state 214
    GREATEREQUAL	shift, and go to state 215
    '<' 	shift, and go to state 236
    '>' 	shift, and go to state 218
    '+' 	shift, and go to state 219
    '-' 	shift, and go to state 220
    '*' 	shift, and go to state 221
    '/' 	shift, and go to state 222
    '%' 	shift, and go to state 223
    '^' 	shift, and go to state 224

    $default	reduce using rule 60 (optional_by)



state 400

    placeless_element  ->  FOR VARIABLE '=' expr TO expr optional_by DO @6 . DELIMITED   (rule 29)

    DELIMITED	shift, and go to state 401



state 401

    placeless_element  ->  FOR VARIABLE '=' expr TO expr optional_by DO @6 DELIMITED .   (rule 29)

    $default	reduce using rule 29 (placeless_element)



state 402

    $   	go to state 403



state 403

    $   	go to state 404



state 404

    $default	accept
