
			     Pcomm version 1.2
				 4 Feb 89

Compatibilities with v1.1:

	The support files used with the v1.1 release are compatible with
	the v1.2 release.  However, the use of the "index" field (now
	called the "script" field) in the pcomm.dial_dir file has
	changed dramatically (see below).

Things that have changed:

	Berkeley flavors of Unix are now supported.  There are files
	called tty_att.c and tty_ucb.c that contain the code specific
	to the AT&T and Berkeley worlds.  See the config.h file for
	the BSD pre-processor definition.

	Auto-login scripts are now supported.  If the script field of
	the dialing directory contains the name of a valid Unix shell
	script, that shell script is "played" after the connection is
	made to perform the auto-login "chat" sequences.  A example of a
	auto-login Bourne shell script (called Sample) is included in
	the distribution.

	Three new external programs.  In order to assist in the creation
	of the auto-login shell scripts, three external programs are
	included in the distribution.

		waitfor - wait for a string, return a 1 if timed out
		matches - test if string2 is contained in string1
		modem_break - send a modem break

	There is a new support file called "pcomm.extrnl" that allows
	the user to imbed the names of external file transfer programs
	into the list of available protocols.  (The default file
	"Pcomm.extrnl", supplied with the distribution package, contains
	definitions for zmodem).

	The pcomm_input program has been changed to use multiple
	character buffered writes to the screen.  Both the input and
	output buffer sizes are tunable parameters in config.h

	Newer versions of Xenix have changed the rules for creating UUCP
	lock files.  See the config.h file for the description of
	XENIX_LOCKS.

	The -f option now looks at the name field of the dialing
	directory (rather than the index field).  A match is found when
	the argument to the -f is contained in a name field (an exact
	match is not required).  The match does not consider upper and
	lower case differences as significant.

Known limitations:

	The detection of VCS (video command sequences) is still limited
	to a very small subset of possible commands.

	For the VCS emulation to work, the terminfo entries on the host
	machine must match the entries on the remote.  (Don't assume 
	your vt100 terminfo data is identical to someone else's).

	The disp_tty() routine in s_tty.c currently does not support a
	NUM_TTY definition of greater than 10.

Future directions:
	
	That's about it folks...

	If Pcomm grows any more, I'll break the setup routines out as a
	separate program.

Many thanks to the following people (and many others) for bug reports
and suggested improvements to the code.

	Andy Fyfe		...ames!elroy!cit-vax!andy
	Brian Antoine		...iscuva!tau-ceti!briana
	Chad R. Larson		...ncar!noao!nud!anasaz!dcfinc!chad
	David MacKenzie		...uunet!rocky2.rockefeller.edu!edf
	Gary S. Trujillo	...{linus,bbn,m2c}!spdcc!gnosys!gst
	George Pontis		...uunet!moldev!geo
	J. Eric Townsend	...uunet!nuchat!flatline!erict
	Jim Pickering		...csun!polyslo!rducky!jrp
	Jim Sanchez		...uunet!mcvax!syteke!jim
	Jonathan Bayer		...uunet!ispi!jbayer
	MAJ Dave Dockstader	...twsc4sac@mater1.arpa
	Michael Brady		...sun!portal!cup.portal.com!michealnc

-------------------------------------------------------------------------------

			     Pcomm version 1.1
				21 Aug 88

Incompatibilities with v1.0:

	I've added a few more fields to the pcomm.param and pcomm.modem
	files.  This means that those files created under previous
	releases will not be compatible with the v1.1 release.  It might
	be a good idea to abandon the older files and start over with
	the sample files in this release.

Things that have changed:

	An awful lot of sloppy programming on my part has now been
	cleaned up.  This means that porting Pcomm to different versions
	of Unix will be considerably less painful than before.

	All of the tunable parameters are now in "config.h".

	Pcomm now uses buffered I/O routines.  This yields higher
	performance I/O at large baud rates.

	File transfers now use high performance CRC calculations.

	If a UUCP lockfile does exist, Pcomm now attempts to determine
	if the process is still active.

	An external file transfer program can be invoked from the file
	transfer menu.

	The keyboard macro feature is now supported (although it is
	rather crude).

	The virtual screen routine now understands a limited subset of
	escape sequences.

	The virtual screen can now be held in shared memory or in a file.

	The input routine is now contained in a separate program called
	pcomm_input.

	You can now include a "modem break" in a dial or initialization
	string.

	A separate "initialization speed" feature was added to support
	9600 baud modems such as the Telebit Trailblazer.  See Appendix
	C of the Doc file for more info on the use of this feature.

	I've added a transparent pass through mode to be used in a
	communications daisy chain.

Known limitations:

	Whenever Pcomm makes the transition from the terminal mode to
	the command mode, the true screen contents are lost.  Pcomm
	tries to keep track of what the true screen looks like in an
	internal "virtual screen".  This means that the escape sequences
	known to the hardware have to be emulated in the virtual screen.
	Unfortunately, the number of escape sequences that are emulated
	is quite small, so the representation of the true screen is
	sometimes wrong.

	For the VCS (video command sequence) emulation to work, the
	terminfo entries on the host machine must match the entries on
	the remote.

	The disp_tty() routine in s_tty.c currently does not support a
	NUM_TTY definition of greater than 10.

Future directions:

	Continue work on the virtual screen routines.

	Add dial back support.

	Use shared memory to overcome the current limitation of outgoing
	characters in the half duplex mode not appearing in the virtual
	screen, log files, and print logs.

Many thanks to the following people for bug reports and ideas for
improving the code:

	Andy Pitts	...{mtune,pacbell,kd4nc}!gladys!rbdc!andy
	Chris Wiener	...ihnp4!{killer,attnssc}!crlabs!cwiener
	David Brierley	...{sun,decuac,cbosgd,gatech,necntc,ukma}!rayssd!dhb
	Karl Fox	...cbosgd!mstar!karl
	Michael Young	...panda!genrad!mrst!sdti!mjy
	Mark Mendel	...ihnp4!umn-cs!hyper!mark
	Viet Hoang	...ihnp4!drutx!vgh

--------------------------------------------------------------------------------

			     Pcomm version 1.0
				12 Mar 88

Incompatibilities with the beta release:

	I've added a bunch of new parameters to the pcomm.param and
	pcomm.modem files, so the files used with the beta release won't
	work with the v1.0 release.

Things that have changed:

	Pcomm will attempt to determine if the modem has synchronized at
	a baud rate different than what is expected, and make changes to
	the line settings as appropriate.

	The quit and interrupt signals are now ignored.

	All of the file transfer protocols are now functional.

	The directory search order used to find the support files has
	been changed slightly.

Known limitations:

	The keyboard macro feature is not implemented at this time.

	The true screen contents are lost when the "hot key" is pressed.
	Pcomm attempts to compensate (rather poorly) by repainting a
	virtual screen of what it thinks the true screen should look
	like.  Escape sequences in the virtual screen image will be
	ignored when the background is repainted.  For example, if
	you're on a vt100 and you receive a ^[[2J to clear the screen,
	the screen *will* be cleared...  but when the screen is
	repainted, it will contain the characters ^[, [, 2, J (instead
	of performing the function).

	The disp_tty() routine in s_tty.c currently does not support a
	NUM_TTY definition of greater than 10.

	For some strange reason, the first keystroke is "lost" after a
	file transfer is complete or after starting data logging.

Future directions:

	The virtual screen routines need a lot of work.  The most
	commonly used escape sequences (known to terminfo) will be
	processed.

	I plan to have an option at compile time to have the virtual
	screen buffer held on disk [] or in shared memory [].

	The input routine is designed so it could be a standalone
	program that gets called from Pcomm. []

-------------------------------------------------------------------------------

Have fun...

Emmet P. Gray				US Army, HQ III Corps & Fort Hood
...!uunet!uiucuxc!fthood!egray		Attn: AFZF-DE-ENV
					Directorate of Engineering & Housing
					Environmental Management Office
					Fort Hood, TX 76544-5057
