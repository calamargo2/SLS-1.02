0.3--> 0.4
	Fixed upload to make the optinal arg really optional.
	Fixed main.c to NOT cat the file arg to the socket name.
0.4--> 0.5
	Added baudrate option + env variable.
	Xconn now checks the DISPLAY variable to know what display
	to use.

	Fixed bug in xconn relating to printf.
	Fixed main.c. Was useing wrong lower bound for baudrate.
		Thanks to Someone whoes name escapes me. amil me again
		pls.
0.5--> 0.5.1
	Silly bug in strncmp() in main.c
0.5.1.--> 0.5.2
	Fixed a few out of date docs.
0.5.2.--> 0.5.3
	The argument parseing got improved a lot.
	Thanks to M. Saggaf.
0.5.3 --> 0.6
	Xconn got modifed to use an INET socket instead of a UNIX
	socket. This means you can run term on one machine, and use x apps on
	another.
	
0.6 --> 0.6.1
	I wrote a Q&D hack to see how the serial line performs.
	
	Consists of checkline.c and linerem.c (for local and remote
	ends). See readme for details.
0.6.1-->0.6.2
	Fixed up pty.c a bit more. Hopefully it should the child proc
	should be able to lose the controlling term on a sun now. :(
	There was a damned silly bug. I had forgotten to #include config.h

	Fixed xconn to properly print the display it was connecting to.
	Fixed xconn to look at DISPLAY if it existed and use that for the
		display number.
	Fixed up sun stuff a bit (EAGAIN instead of EWOULDBLOCK).

	Fixed up terminal.c to set VMIN and VTIME
0.6.2 -> 0.6.3
	Added a ~/.term/termrc 
	Should be able to set everything from the termrc file, includeing
	escaped characters. See TERMRC for format.

	Beware, it isnt tested. :) Also, at the moment, it assumes that
	adding 32 to an escaped character, won't produce another escaped 
	character.

	Two new features. a -f option tell term to generate control-Q's 
	( in case line noise generates a control-S ).

	In a termrc you can specify a 'shift'. This simply get XOR'ed with
	all character before they are sent, and after they are received. The
	purpose being to map a lesser used range on characters down to 0-32
	(which are all escaped). I use 224 (0xE0). Haven't measured the 
	speed up. But histogram of characters received shows a drop in the
	number of escapes sent.
0.6.3 --> 0.6.4
	I was forgetting to close the file descriptor used to read the termrc
	file.
0.6.4 --> 0.6.5
	A goddam silly bug. was doing if(strcmp) instead of if (!strcmp)
	SIGH!!!!!!!!!
0.6.5 --> 0.6.6
	Another silly one. Wasn't escapeing characters properly.
0.6.6 --> 0.6.7
	Changes the way the input window was worked out. Hopefully it
	fixed somes bugs reported by some ppl.
0.6.7 --> 0.7.0
	Re-wrote the compression tree handleing. Hopefully a lot clearer, 
	and understandable. Hopefully less bugs too. 

	Fixed a few of the include files to remove warnings.
	Fixed a a bug in upload.c Was doing i == 0, instead of i =0.
	Fixed a bug in test.c had arguments in wrong order. Thanks to 
	fjh?? for pointing this out.
	
	Fixed serial.c so that five 0's will exit term regard less of what
	the byte_shift is set to.
	
0.7.0 --> 0.7.1
	Added support for SGI. Thanks to 'warwick' harvey.

	Fixed xconn to properly look at DISPLAY, search for the first
	unused display. The way to run it now is...
	"setenv DISPLAY=`xconn`"

	Reduced window size to 2. Don'T THINK it will adversly affect
	throughput but haven't extensively tested it.

0.7.1 --> 0.7.2
	Added options to configure both the window size, and the paacket
	timeout values. Changed the default window size up to 3. A size of
	2 at 2400 baud introduces too much latency into keystrokes.

	Added an option to toggle transmit forceing. Forceing is now off by
	default. Not tested properly.
	
	Added the -w , -t flags.
0.7.2 --> 0.7.3
	Fixed bug in xconn relateing to searching for unused display.
	Added the -n flag. See OPTION, and TERMRC for details. See also	
	the source. :)

	Cleaned up some more prototypes. Compiles are now cleaner.
0.7.3 --> 0.7.4
	Added handleing of escaped characters that produce another char
	that should be escaped.
0.7.4 --> 0.7.5
	Fixed noise echoing to remove byte shifting.
	Tried to write some BSD terminal handleing. Someone who has BSD want
	to test this??

	The famous compression bug found!!!! The all-singing-all-dancing-
	wonder is gone! Many many thanks to Janne Sinkkonen (sinkkone@
	cc.helsinki.fi) for this. I was clearing 300 bytes , on a 256 byte
	buffer. :(
0.7.5 --> 0.7.6
	More prototype fixes.
	Removed the call to abs() in link.c (convex does have it apperently)
	
	Fixed checkline.c to send an XON after every character (so it doesn't
	'freeze'), and increased rate to 16 characters per second instead of 
	1.

	There is a new client 'redir'. Usage is 'redir <server port> <remote
	port>'. So you can do 'redir 23 4000' and then everyone who
	telnets to port 4000 on your remote machine, will get connected
	to telnetd on your local machine.
0.7.6 --> 0.7.7
	Fixed a bug in main.c. Fudge_flow was supposed to be a counter
	limit, not a flag.
0.7.7 --> 0.7.8
	Fixed makefile. 'make test' make the wrong file.

	Changed the way error handling was done. Added in LL
	read/write debugging.
	
	Added support for ranges in termrc. i.e. 'escape 0-32' should
	work. Not extensively tested.
	
	Lots of structural changes internal to term.

	Missing break; in main.c -n was broken. fixed now.
	
	An incredibly stupid bug in serial.c fixed. I was useing && instead of 
	||. Resulted in the retransmition being braindead. *SIGH!!!!!*
	Resulted in the packet window being as full as possible instead of
	the reverse.

	Changed the algorithm used to decide re-transmition. Now it will
	never timeout a packet before the 'timeout' value.

	Will not write out an error message for any line of the ~/.term/termrc
	file that it doesn't recognize.

	Redir can now redirect to a host. I.e.
	'redir 119 my.news.server:119' on the linux box, lets you treat you
	linux box as an NNTP server. Thanks to Rick Sladkey.

	Renamed all the clients to get a 't' in front.
	term --> term
	rsh --> trshell
	upload --> tupload
	xconn --> txconn
	rsystem --> trcmd
	redir --> tredir

0.7.8 --> 0.8.0
	
	Replaced waitpid() with wait3().

	Added support for NeXT
	Added support for AIX
	Added (partial) support for BSD
	
	Thanks to cruncy!croutons@dartmouth.edu we have support
	for individually compressed streams. I.e. you can be uploading
	a file with no compression, while running a shell whoes output does
	get compressed. 

	Added priorities for streams.

	Vastly improved responce time with multiple streams (I hope.. ).
	Achieved by checking for new clients ready more often. The old scheme
	was to take data from a client untill it had none left before looking
	for a new client. Now it looks for a new client at the beginning of
	every packet. This is what it should have been doing anyway. 

	
	Re-wrote the client option handleling. Now all clients take 4 arguments
	-t <server> 	Tries to connect to the socket ~/.term/socket<server>
		Default is "". Useful only if you are running multiple
		terms (over multiple serial connections).

	-r	Turns off compression for this link.
	-c	Turns on compression for this link. 
		the above two options affect compression both ways. The
		capacity is there to only compress one-way. Tell me if you
		want this?

	-p <number> Changes the priority of the link to <number>. Default
		is zero. tshell has a default of 2.
		tupload has a default of -2.

	The priority is currently absolute. i.e. if a there is a client with 
	a high priority with data to send, then no client with a lower priority
	will send untill the higher has finished. This probably needs improve-
	ing.

0.8.0 --> 0.8.1
	Redid all the #include files. Simplified (hopefully), and consider-
	ably easier to port.

	Fixed a bug in link.c. Was very silly. It could end up switching
	channels in the middle of a control sequence.

	Added signal handleing for kill signals and segv's.

0.8.1 --> 0.8.2

	Fixed another silly bug in 'tredir' client. Was introduced in version
	0.8.0

	Fixed bug in makefile. Had missed a few places that were useing
	the old names of the clients.

	Fixed bug in xconn.c Was useing wrong filename for the X-window
	unix-domain socket.

	Added some more debugging calls. -d64 should be fairly informative
	for control info now.

	Added quick+dirty 7 bit support. run term with '-a' on both ends to 
	use it (a == seven. maybe.). Or put "sevenbit" in your 
	~/.term/termrc file.
	WARNING!!!!!! It is very rudimentry. In particular, unless you send 
	everything compressed, then it will strip the top bit of it. i.e. 
	uploading file when not useing compression with corrupt them.
	WARNING 2!!!!!. It is in no way tested. Mail me how it goes..

	Makefile got extensively re-written. Thanks to croutons (again :).

0.8.2 --> 0.8.3
	0.8.2 was basically pretty stuffed try again.

	Fixed bug in compress.c (introduced in 0.8.2).
	Fixed a few minor bugs in link.c relating to put_client_data being
	called with an un-initalized structure.

	Hopefully fixed the bug with things not exiting when they quit.
	Really fixed the above bug. Telnet through a redir will now exit
	properly. (was a bug related to the changed format for control 
	sequences. Read PROTOCOL.unix for details).
	
	Brought PROTOCOL.unix up to date. 

0.8.3 --> 0.8.4
	Fixed prototype spelling error in link.c

	Tried to fix trcmd. Does anyone use this??
	
	Fixed a few race conditions WRT control messages. Was clearing
	buffers at some in-approrite points. Should fix the multiple
	upload bugs.
	
	Fixed get_next_client so that clients with the same priority share
	the line equally.

0.8.4 --> 0.8.5
	Fixed the bug that was corrupting X windows streams.

	Fixed a (potenial) bug in redir.c (Same one as xconn.c).

	Removed the trcmd client.

	Renamed the trshell client to be 'trsh'.
0.8.5 --> 0.8.6
	Removed the C_SYSTEM command, and associated files.
	
	Fixed a bug in xconn.c WRT searching for an un-used display.

	Thanks to croutons again, trsh now takes multiple arguments happily.
	commands like 'echo this is a multiple argument command' should work
	just fine.

	Wrote a CREDITS file. Anyone I have missed please mail me.

	Applied Rick Sladkey's changes so that C_SOCKET will work with
	a dotted decimal address.
0.8.6 --> 0.9.0
	Removed 7 occurences of dubious language.

	Fixed pty.c to test for more pty's. Thanks to Rick sladkey for
	pointing this out. It now tests pty{p,q,r,s,t,u,v,w,x,y,z} if this
	isn't enough, let me know, and I will fix it for more.

	Went and implemented return codes for all commands. This means that
	you shouldn't get any 'hangs' when attempting to use non-existant
	ports and other such oddities. This also changes the command protocol
	which means you have to upgrade both ends, and all your clients to use
	it.

	tupload will now do recovery. If you try to upload a file that
	already exists on the remote end, then term will seek to then end of
	the file, and to the equivilant position on the remote file, and start
	uploading from there. Not fully tested.
	
	
	
0.9.0 --> 0.9.1
	Write a minimal 'tstat' client. It currently just tells the
	compression ratio's that the local and remote ends have achieved.

	
	Write a Q&D strerror() for sun's. It is in lib.c

	
	Fixed a small bug in lib.c. Was doing if t<0 && !t ...

	
0.9.1 --> 0.9.2	
	We finally have some genuine man pages! Thanks very much to gtaylor
	(see CREDITS file).

	Added support for HPUX.

	Added in a new checksum routine. This one is a genuine CRC.
	
	Started to merge checkline into term proper.

	Changed most things to use unsigned chars. Should fix a few problems
	on sun's.

	Eliminated a race condition in pty.c
0.9.2 --> 0.9.3
	Fixed a small bug in man pages.

	Updated the README file.

0.9.3 --> 0.9.4
	Updated the escapeing mechinism. It is now dependant on the direction
	of the link. There are 3 new termrc commands.
	
	"escape" now simply tells term never to transmit that character.
	"ignore" tells term to silently strip that character from the
		input stream. I.e. if your modem uses software flow control
		use "ignore 17" and "ignore 19".
	"seven_in" tells term that the remote end is seven 7 bit tokens.
	"seven_out" tells term to transmit seven bit tokens.


	So in the unlikely event that you have a seven bit link TO to remote 
	host, and an 8 bit link FROM the host. Lets say that it chews all
	control characters and 126. The 8 bit link is clean. No characters
	get chewed.
	Your local termrc should look
	like..
		seven_out
		escape 0-31
		escape 126
	and the remote termrc.
		seven_in
		ignore 0-31
		ignore 126
		

	"sevenbit" now is the same as doing both "seven_in" and "seven_out".
	
0.9.4 --> 0.9.5
	Fixed silly bug WRT seven bit mode. Was sending packet that
	were too long.

	Added (a little) more into to tstat client.

0.9.5 --> 0.9.6
	Added an error check to tredir, to check for errors in binding the
	local socket.

	Fixed the sevenbit support a bit. It was still possible for
	term to try to generate packets longer than 127 bytes.
0.9.6 --> 0.9.7
	Fixed compression for seven bit mode.
	
0.9.7 --> 0.9.8
	Added more info to C_STATS
	
	Change client.c to include varargs.h for a sun. Mail me if this is
	wrong.

	Changed 'server' to be 'term_server' to avoid (potenial) conflict
	when linked with other programs.

	Fixed a problem in client.h whereby un_char might not have been 
	defined.

	Fixed the man pages WRT tredir %d %s:%d.
	
	Added tmon client. Fixed a few minor bugs in the same.
	
	Extensive internal changes. Everything now uses the Buffer struct,
	and all the oddball buffer routines have been cleaned up. Also,
	partial support for bound sockets has beed added.

	Added support for SIGWINCH. Written by Teemu Rantanen, cleaned
	up slightly by me. Doesn't (yet) handle on-the-fly resizes.

	
0.9.8 --> 0.9.9
	Fixed an include file bug in trshell.c Wasn't #include'ing signal.h

	Implemented a remote bind protocol. See the two new sever commands 
	C_BIND, and C_ACCEPT. 

	Fixed some more char/un_char conflicts.

	Fixed tmon.c (wasn't includeing sys/time.h).

	A new and improved version of tmon is included. This one is
	much more accurate.
	
0.9.9 --> 0.9.9a
	Fixed a HZ in tmon. Should compile most places now.

	Half fixed a bug relating tmon.c. It works, but there is still a 
	race conditon. The problem is if two clients start at opposite ends
	at the same time, they wil get the same number. This is bad.

	(Hopefully) fixed SGI support.

	Tried to fix a condition relating to EWOUDLBLOCK. (Could people
	please try and let me know how to reproduce a bug if they see it!?)


99b
	
	Fixed all the check_client() stuff. Should exit more cleanly now.
	*cross fingers*.
99c
	Improved the Makefile, so there is only one refernce to the compiler.

	Fixed the select(). It nows passed the number of fd's to check, not
	just 64.

	Added support for varargs.h. varargs is used instead of stdargs
	if the #define USE_VARARGS is defined.

	Fixed spelling of 'compiling' in README file. (Thanks to 
	cfs@nir.gatech.edu [Charles Stevens]).

	Changed xconn.c to do a little more error checking.

	Improved the README to be a little clearer.
099d
	Documented the commands in client.h

	Added a C_DUMP command. usage is C_DUMP %d, meaning to go dumb for
	the next %d bytes. See protocol.unix.

	Removed the C_CLIENTNUM, and replace it with a C_STATS sub-function.

	Documented all the new commands in PROTOCOL.unix. Happy now 
	Quarters? :)

	Added in Jeff Grills new upload.

	Fixed tmon to remove all references to termio{s} from it.
	Added calls to terminal_raw() so that any key will imediately exit
	it. Read the key before exiting to ensure it doesn't get read 
	by the shell.

	Fixed JG's new upload so that it uses C_DUMP, instead of opening
	a new connection for each file. Aded a C_STAT at the end to ensure
	that tupload doesn't exit before the entire file is there.
	
	Fixed read_into_buff to take the size. (needed for new upload).
	
099e
	Fixed a few bugs in upload.
	
099f

	various bug fixes and code cleanups. (read: I can't remember what
	I changed. :)
	
	Added a bit of sanity checking in link.c:get_client_data();
099g
	More sanity checking in read_into_buff/write_from_buff();
	Added a bit more information to tmon.

	Extended C_STAT to read file types and permissions.
	
	Re-wrote much of xconn.c to be more robust, and smaller.

	Re-wrote xconn a bit more, and redir as well. Moves the bulk
	of the (common) code to connect.c.
099h
	Updated PROTOCOL.unix

	Added S_IFREG, and S_IFDIR to link.c for those machines
	that don't have them. (i.e. F****** suns!).

	Changed the dependancies to NOT include the system header files.

	Tried to get term to compile nicely on a 386BSD. 
	Fixed Makefile.{sun,sgi} to include connect.c

	Fixed xconn to print out the display number it is useing.
	export DISPLAY=`txconn` should now work.

	Made tredir move itself into the background automatically. No longer
	need to invoke it with 'tredir ... &'.

	Replaced a few 'char' with 'un_char's. There was one in serial.c
	that was screwing compilers that used signed chars.

	Upgraded upload to match Jeff Grills. The new upload
	has lots of features that aren't yet documented. 

	Improved pty.c and general hpux support. Thanks to H.J. Lu

	Re-wrote bits and pieces of upload to suit myself. Made gratuitous
	changes to the formatting on the way.
099i

	Removed the automatic escapeing of characters < 32.
	Now escapes NO characters be default. BEWARE!!!!!!
	If this causes you problems, a quick fix is to add
	'escape 0-31' to your ~/.term/termrc file. This improved
	my CPS rate by some 12% just up escape 30 instead of 32 characters.

	Added a signal() to ignore SIGPIPE's. This was what was killing
	term at in-opertune times.

	Fixed a bug in C_STAT relateing to permissions.

	Made tupload use no compression by default. If you want to 
	upload something and have it be compressed over the link, you
	will have to use 'upload -c ...'. Term can't handle compressing
	stuff that is already compressed.

	Txconn, and Tredir will now only run when term is running, and will
	exit when term exits. Tell me how you feel about this change.

099j

	Tried to clean up shell exiting.

	Fixed up the pty.c code. It was checking for the wrong pty's
	first. The patches hpux had broken pty's for other machines.

099k

	Prevented term from sending five '0' itself accidently, and
	killing the remote term as a result.  	Moved the detection

	Fixed S_ISREG's in link.c for machines that are missing them.
	Was defineing the wrong thing.

	Ripped out the prevention of term sending five zeros. I had 
	made a mistake. Term only interprets the five zero's if they
	are line noise. Instead, add a 'breakout' option to termrc.
	This sets the character to watch for.

	Fixed the sig_child handleing a bit more. Shells should exit
	cleanly now...

	Improved the sigwinch handleing for sun's. Sun's are broken.
	I am getting a VERY low opinion of suns....

099l

	Fixed a minor bug in link.c that caused upload to hang. It only
	showed up when ther was a '@' in a byte, on a 2047 byte
	boundry.
099m
	
	Changed the sample TERMRC to be a real sample.

	Fixed tmon to not core-dump is there is no compression.

	Changed checkline to start from 0 instead of 32 (to fit in
	with removeing the automatic escapeing of 0-31)

	Jeff Grills improved upload some more. Added a progress indicator.
	Now to write download.......

	Default timeout is now 3.5 seconds instead of 2.5 (i.e. timeout 70)
	This is to make it work by default with slower modems.

	Added lots of support for people with multiple term's on the 
	same machine. Now if you run 'term home' it will try and read
	~/.term/termrc and then ~/.term/termrc.home. It is ok for one
	or both of them not to exist.

	If the TERMSERVER environment variable is set, then clients will
	act as if they had been invoked with '-t $TERMSERVER' and try to
	connect to that server. i.e. if you run 'term home', then doing
	"export TERMSERVER=home" will cause all clients to use the 'home'
	server.

	Added the 'chdir' option to termrc. 'chdir <directory>' will cause
	term to try and chdir to that directory on startup. This will 
	cause all relative file references to be relative to that directory.

	Fixed PROTOCOL.unix. Removed the C_EXEC entry as it is obselete.

	Had a go at improveing the robustness of checkline/linerem. Made them
	work asymetrically.

	Improved the pty handleing. It now checks to make sure both the
	master and slave can be opened before commiting itself. This lets 
	it handle ptys that are left in a dud state.
	
	Fixed a bug in serial.c. The byte_shift was resulting in corrupted
	bytes in seven_bit mode if byte_shift was > 127.

	Implemented byte stuffing. In seven_bit mode, term now stuffs
	7 eight bit bytes into 8 seven bit bytes. It doesn't check if
	the stuffing is needed tho. :( It should only stuff if the top
	bit is being used, but it stuffs all raw characters. Ppl can
	live with this for now.

	Added a CPS to the upload -vv display.

	Fixed a minor bug in upload.c relating to -vv display. (CPS was
	-ve and too high ).

	Added a few patches to support AIX. Minor stuff.

	Fixed a bug with responce which resulted in results being sent to
	the wrong end.

099n

	Updated the CREDITS file. Re-wrote the intro blurb.

	Added sevenbit.o to Makefile.{sun,sgi}. An oversight.

	Fixed a litte bit of AIX support.

	Fixed the sevenbit byte stuffing.

	upload has a few bug fixes. The CPS bug is fixed. There is 	
	a '-u' flag. This will erase the file after a succesful upload. 
	source file pathnames are now truncated. use '-as' to override this.
	Note that you need to use a '--' before the first filename if
	you want to use -as. i.e. 'tupload -f -r -vv -- local.file -as
		remote.file'.

	Extensively revised the man pages.

	Checkline/linerem got re-written by Jeff Grills. Try them and see
	what they say about your line.

099o

	checkline/linerem replaced by linecheck. MANY thanks to Jeff Grills.

	Got rid of the 'Clearing Dict table' messages.

	Fixed a bug relating to connections getting closed before the buffers
	were flushed. 

	Deleted the checkline/linerem programs and associated man pages.
	
	Fixed a few minor bits in linecheck. Stuffed up all the formatting
	to suit me and my editor.

	Placed term under Gnu Copyleft. Changed README to suit. Added
	a copy of the GNU copyleft.

	Removed some more debugging info from main.c the 'client gave this:..'
	and 'select: ..' warnings are now gone.

	Make tredir/txconn ignore SIGPIPE signals. These were causing it
	to exit when clients exited in a hurry without letting tredir
	know about it.

	Changed redir, and xconn to have the capability to redir multiple
	ports in the one redir. If anyone wants to play with writting 
	a user interface, feel free. :). do_connect() now takes an
	array of ports to watch.

	Re-wrote the checkline/linerem section of the README to be about
	linecheck. Edited the info jeff sent to be more readable for novices.
099p

	There was a race condition that occured when a remote client, and
	a local client started up at the same time. To fix, edit your
	~/.term/termrc file on ONE end, and add the line 'remote' to it.
	This should ensure lines like 'trsh -- tupload -f -c -v o' will work.
	
	Makefile fixed to generate 'linecheck' not 'check'.

	More debugging info got lost. This time the perror("accept");

	Installed a new(er) version of linecheck. Thanks again to Jeff.
	Fixed the dependancies in the Makefile for linecheck.
	
099q

	Fixed a bug in upload. It wasn't closeing files after it had
	uploaded them.

	Added -l option. Does the same as redirecting stderr. Just for ppl
	with braindead shells.

	Made term use only stdin, instead of stdin/out. I.e. term will try
	to write to stdin to write to the modem. This should normally be ok.

	Added the -1 option. If used, term will use stdout as the
	modem, instead of stdin.

	Added -v option. Usage is '-v<filename>'. Set the modem device.
	i.e. run as 'term -v/dev/ttys1' to use /dev/ttys1 as the modem.
	Warning!!! For forward compatability do NOT use more than one
	-v.
	
	Properly fixed upload, and added a C_CLCLOSE command for clients.
	Interested ppl can see link.c.

	Fixed a bug in send_command() that was resulting in dud command_result 
	returns.

	Re-wrote the error reporting in link.c. Replace do_return with the two
	routines ret_ok(), and ret_fail().

term 1.0.0.

	YES!!!! at last!

	Patched in Jeff's linecheck patches.

	Fixed 2 bugs relating to upload.

	released 1.0.0

	NOTE!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
	ALL FUTURE RELEASED WILL BE NAMED "SLAP"

	There will not be another version of term. It has been re-named
	"slap" (for serial line access protocol).

term 1.0.1

	Re-wrote the stdin/out handleing as it was causeing problems
	on the NeXT.

	Fixed a small bug in upload relating to uploading a file
	from stdin.

	Note! The above implies there will be no work done on term.
	This is just to say that bugs will be fixed as they appear, but
	term will get no new features. All my efforts will now go into
	Slap.
1.0.2
	Fixed a typo in terminal.c Had in mypid; instead of int.
	Thanks to warwick for this.

	Added code to define STDIN_FILENO in linecheck.c if it wasn't
	already defined.

	Fixed the Makefile.sun for linecheck. Oversight.

1.0.3
	Fixed the problems with term hangin on Sun's. Turns out it
	is a dogey sun select(), and a missing continue in my source.
	Thanks VERY much to one David E Wexelblat.

1.0.4
	Changed the way term worked for non-vhangup cases.

	Merged in Hugh Secker-Walker's patchs to support NeXT boxs.
	
	Merged in support for SGI machines.

	Added makefiles for mips, and next machines. Thanks again to Hugh.
1.0.5
	Added SVR4 support.

	Tried to fix up a bug in xconn and tredir

1.0.5.a 
	[ by Hugh Secker-Walker, for NeXTstep, not part of Michael's release ]
	
	At Michael's suggestion to fix a bug with high-speed links, changed
	link.c line 94 from  'if (p_in[.... '  to  'while (p_in[....'.

	Added README.NeXT, README.MIPS, select.c.mips, upload.c.mips.

1.0.5.b
	[ by Felix A. Lugo, E-mail: Felix_A_Lugo@ATT.COM ]

	Added Solaris 2.1 support.

	Fixed problems with do_resize (misc.c) and added support for pixel
	window sizing (misc.c, link.c, trshell.c).

	Fixed problem with restoring tty settings after abnormal exits and
	re-enabled SIGINT and SIGQUIT.

1.0.6
	Merged in changes as per above, and released as 1.0.6

1.0.6.a
	[ by Hugh Secker-Walker, hugh@mit.edu ]
	
	Trsh accepts -s option for a simple connection, i.e. no pty on
	remote end using C_EXEC.  Also, trsh restores terminal when killed.

	In link.c, support for C_EXEC, to run a command using /bin/sh -c, 
	and no pty.  This for the -s option of trsh.

	In pty.c, fixed use of pipe used to confirm that child exec'ed.
	Unresolved problems remain (on NeXT) with printfs in child
	hanging.  (This latter was not a problem until the pipe bug
	was fixed so that the parent (term) really waits.)
	Also, added open_socket() for support of C_EXEC.

	In term.1, term_clients.1, and term_setup.1, numerous editorial
	changes and additions.
	Merged in changes as per above, and released as 1.0.6


1.0.7
	Fixed Makefile.sun to look for linecheck.c instead of checkline.c
	
	Fixed misc.c to NOT put out literal bell's (dunno about you but I 
	hate the noise). 

	(all above due to jeff grills.)
	
	See above list of change by Hugh as 1.0.6a