.TH TERM_CLIENTS 1
.SH NAME
trsh, tupload, tredir, txconn, tmon \- clients to term
.SH SYNOPSIS
.IR trsh 
[options] [command]
.PP
.IR tupload 
[options] file ... [remote_directory]
.PP
.IR tredir 
[options] local_port remote_port
.PP
.IR txconn 
[options]
.PP
.IR tmon
[options]
.SH DESCRIPTION
These clients connect to a local 
.IR term (1)
daemon and initiate a communication
link with the remote daemon and remote processes.
.IR Trsh
runs an interactive shell or commands on the remote system, 
.IR tupload
transfers files from the local system to the remote,
.IR tredir 
redirects connections from a port on the local system to a port on the
remote system, 
.IR txconn 
redirects X-server connections from the local system to the remote,
and
.IR tmon
prints summary information about a 
.IR term 
link.
.PP
As far as the clients are concerned,
the link established by
.IR term (1)
is completely symetric; the clients don't know
which system is your physically local system (the system you're typing at) and
which is physically remote.
From a client's point of view, the local system is the one on which
the client is executing.
The remote system is the other system, the one on which the client is
not executing.
.SH USAGE
.TP
.IR "trsh \ \ \ "
With no arguments,
.IR trsh 
is similar to 
.IR rlogin (1).
An interactive shell is started on the remote system.  
Terminal features such as character echoing, line editing, and window
resizing are handled by a tty on the remote system.
If a \fIcommand\fR is given, it executes on the remote system instead of
the default shell.
Specifying \fIcommand\fR without the \-s option is primarily useful
for starting a non-default shell remotely.
.TP
.IR 
There is a single
.IR trsh
specific option:
.IR 
.RS
.TP
.BR \-s
Use a simple connection.
This makes 
.IR trsh
behave more like
.IR rsh (1).
The specified \fIcommand\fR is executed by a shell on the remote
system.
Like
.IR rsh (1),
quoted shell metacharacters are interpreted remotely, so filename
redirection, multiple commands, or pipes can be used remotely.
If no \fIcommand\fR is given, the \-s option is ignored.
.PP
The \-s option should almost always be used 
when a \fIcommand\fR is provided.
In particular, it should be used if 
.IR trsh
is part of a pipeline.
The only exception to this rule is when
remote terminal features are needed.
.RE
.TP
.IR
.IR Trsh
differs from 
.IR rlogin (1)
and
.IR rsh (1)
in a couple of significant ways.  First, the stdout and stderr of the
remote shell or command are both directed to the local stdout.
Second, the connection is broken as soon as a local end-of-file occurs.
This means that any output generated by the remote system after EOF is
lost.
For example,
.TP
.IR
.IR
\ \ \ trsh -s wc < /etc/passwd
.TP
.IR
runs the remote 
.IR wc (1)
command on the contents of the local /etc/passwd, but will not produce any output.
.TP
.IR tredir
.IR Tredir
accepts two port numbers, the first is the local port number to redirect, and the second
is the remote port to redirect into.  
.IR Tredir 
will also accept
a hostname with the second port number.  For example, 
.TP
.IR
.IR
\ \ \ tredir 119 my.nntp.host:119
.TP
.IR
can be run on the non-internet side of the link.
Then, any local program  
that connects to port 119 (like an NNTP newsreader), will be connected to
port 119 on my.nntp.host.
.IR Tredir
becomes a background daemon once it has successfully established the
local port.
.TP 
.IR tupload
.IR Tupload
takes a list of local file names to upload. If there is more than one name, 
then the last name is checked to see if it matches a remote directory.
If it does match a remote directory, the files are uploaded
to this directory.  If a remote file exists, and is smaller than
the local file, tupload will assume that it was a previous upload that
got aborted, and will attempt to resume the upload.
.IR
Tupload specific options are.
.RS
.TP
.BR \-f
Tells 
.IR upload 
to not do any possible resumptions. Always overwrite the
remote file.
.TP
.BR \-u
Unlink the local file after a succesful upload.
.TP
.BR \-v
Verbose mode. Will write out the number of bytes transfered, the name
of the remote file, and the CPS rate. Two 'v's will produce more
output.
.TP
.BR \-q
Quiet mode. Tupload will not write out any messages.
.TP
.BR \-as\ <remote_file>
Any of the local \fIfile\fR names may be followed by the \-as
<remote_file> option to specify a new name for the remote copy of the
file. 
By default the remote file will have the same name as the local file.
.RE
.TP
.IR txconn
.IR Txconn
establishes an X screen port on the system it is run on.
Connections to that screen will be redirected to the X server on the
other system.
If your DISPLAY environment variable is set,
.IR txconn
will try to use the screen number given by DISPLAY.
.IR Txconn
prints the number of the screen it actually establishes in a format
suitable for re-setting your DISPLAY variable.
The recommended method of starting
.IR txconn
and setting you DISPLAY variable at the same time is to run
.TP
.IR
.IR
\ \ \ setenv DISPLAY `hostname``txconn`
.TP
.IR
from csh and related shells, or
.TP
.IR
.IR
\ \ \ export DISPLAY=`hostname``txconn`
.TP
.IR
from sh and related shells.
.IR Txconn
becomes a background daemon
once it has successfully established the port.
.TP
.IR tmon
.IR Tmon
periodically queries the 
.IR term
daemon for information about the number of clients and the
data flow-rate of the channels.
It updates its output on the terminal it is running in.
.SH GLOBAL OPTIONS
The following options are accepted by all 
.IR term 
clients
.TP
.BR \-t \ <server>
Specifies which term daemon socket to connect to (~/.term/socket<server>).
This is useful if you have specific socket names for connections to
specific remote hosts, or if
you have multiple terms using different serial connections.
.TP
.BR \-r
Specifies a raw link (no compression).
.TP
.BR \-c
Specifies a compressing link.
.TP
.BR \-p \ <number>
Specifies priority for this link.  A client with higher priority will be able
to send all its data before lower priority clients.  This may be changed in 
future releases.  
The priority of
.IR trsh
defaults to 2 and
.IR tupload
defaults to -2.  All other clients default to zero.
.PP
.SH EXAMPLES
Some simple, contrived examples:
.PP
.IR
\ \ \ trsh
.PP
This establishes an interactive shell on the remote machine.  The
connection is maintained until you exit the remote shell.
.PP
.IR
\ \ \ trsh -s who
.PP
prints out a list of current users of the remote machine.
.PP
.IR
\ \ \ ls -li | awk '{print $1, $5}' | trsh -s plot
.PP
will generate a scatter plot of file size vs inode.
Most likely this would be run on the physically remote system to
produce local graphical output about the files on the remote system.
.PP
.IR
\ \ \ tupload -vv -r lin-0.99.3.tar.Z -as lin993.tar.Z /new
.PP
This will upload the local file 'lin-0.99.3.tar.Z' to the remote system
with the name '/new/lin993.tar.Z'. It will resume an upload if
there is an existing /new/lin993.tar.Z, and will writeout the CPS
and bytes transfered every 2K. It will not do compression on the way. 
.PP
.IR
\ \ \ tredir 6667 munagin.ee.mu.oz.au:6500
.PP
This will map any connections to port 6667 on your local host to port
6500 on munagin.ee.mu.oz.au. So if you do 'telnet 0 6667' locally, you will be
connected to port 6500 on munagin.
.PP 
Let's say the physically remote machine, earlobe.mit.edu, is on
the internet.
You can establish a port on earlobe which will allow anyone on the
internet to telnet to your physically local, non-internet machine.
On the local machine you could type
.PP
.IR
\ \ \ trsh -s tredir 4000 23
.PP
Alternatively, if you already have an interactive shell on the remote
machine you could just run the tredir command from that shell.
In either case, once the tredir daemon is running, users typing
.PP
.IR
\ \ \ telnet earlobe.mit.edu 4000
.PP
from any internet host will get a login prompt from your physically
local machine.
.SH BUGS
None of the local environment is propogated by
.IR trsh,
so the remote TERM variable is likely to be wrong.
If the remote command for 'trsh -s <command>' doesn't consume its
input fast enough, the channel can lose data.
.IR Trsh 
breaks the channel as soon as the local EOF is received, thus losing
any final output from the remote process.
.IR Tmon
gives bogus output on some machines (e.g. NeXT).
.SH SEE ALSO
.IR term (1),
.IR term_setup (1).
