		Manual for "Minicom".

Minicom is a complete communication program for the Minix operating
system. It has been ported to a variety of Unix systems without much trouble.

Features are:
- window based, user-friendly.
- Terminal emulation: vt100, Minix, Ansi(IBM)
- Supports COLOR!
- Status Line.
- Dialing directory with auto-dial and automatic re-dial.
- Up and download programs run in a window.
- Kermit can be run from within the program.
- Supports UUCP lock files.
- Script files for auto login.
- Capture file.
- Auto baudrate selection.
- Multiple users, protected with an access list. Every user has his
  own dialing directory, and most default-options (as set by root)
  can be changed and saved into a personal startup file.
- Multiple users. Only root can change the configuration files, but
  every user has his own dialing-directory (and his own upload/download/
  script directories)
- Multiple configuration files with access control.
  
                       ===== Invocation ====

The syntax is: minicom [-som] [-c on|off] [-a on|off] [configuration].

Before processing the options, minicom searches for the environment
variable 'MINICOM'. In this variable, options can be given just as
on the command line. This way, it becomes possible to decide which
options to use in advance, typically in your .profile depending on which
terminal you are using. This variable is simply set by

       MINICOM='-m -c on'
       export MINICOM.

The options on the command line override those of the MINICOM variable.

The options mean:
  -s : setup. This is allowed for root only. When this option is used,
       minicom does _not_ initialize, but puts you directly into the
       configuration menu. This is very handy if minicom refuses to
       start up because your system has changed, or for the first time
       you run minicom: many defaults are based on 'virgin' 1.5.10 systems.

  -o:  do not initialize. Minicom will skip the initialization code.
       This option is handy if you quitted from minicom without resetting,
       and then want to restart a session. It is potentially dangerous
       though: no check for lock files etc. is made, so a normal user
       could interfere with things like uucp... Maybe this will be taken
       out later. For now it is assumed, that users who are given access
       to a modem are responsible enough for their actions.

  -m:  override command-key with the Meta or ALT key. This can also
       be configured in on of minicom's menu's, but if you use different
       terminals all the time, of which some don't have a Meta or ALT
       key, it's handy to set the default command key to ^A and use this
       option when you have a keyboard supporting Meta or ALT keys.

  -a:  attribute usage. Some terminals, notably televideo's, have a rotten
       attribute handling (serial instead of parallel). By default, minicom
       uses '-a on', but if you are using such a terminal you can (must!)
       supply the option '-a off'. The trailing 'on' or 'off' is needed.

  -c:  color usage. Some terminals (such as the Minix console) support
       color with the standard ANSI escape sequences. Because there is
       apparently no termcap support for color, these escape sequences are
       hard-coded into minicom. Therefore this option is off by default.
       You can turn it on with '-c on'. This, and the '-m' option, are
       good candidates to put into the MINICOM environment variable.

The configuration argument is more interesting. Normally, minicom gets
its defaults from a file called "minirc.dfl". If you however give an argument
to minicom, it will try to get its defaults from a file called
"minirc.argument". So it is possible to create multiple configuration files,
for different ports, different users etc. Most sensible is to use device
names, such as tty1, tty64, sio2 etc. If a user creates his own configuration
file, it will show up in his home directory as '.minirc.dfl'.

                     ===== Using Minicom =====

Minicom is windows-based. To popup a window with the function you want,
press Control-A, and then the function key (a-z or A-Z). By pressing
Control-A first and then 'z', a help screen comes up with a short summary
of all commands. This escape key can be altered, as written above, but
we'll stick to Control-A for now.

For every menu the next keys can be used:
- Move up:    arrow-up or 'k'
- Move down:  arrow-down or 'j'
- Move left:  arrow-left or 'h'
- Move right: arrow-right or 'l'
- Choose:     Enter
- Cancel:     ESCape (or ESC-ESC, see the comment at the end of this file)

The screen is divided into two portions: the upper 24 lines are the
terminal-emulator screen. In this window, ANSI or VT100 escape sequences
are interpreted. If MINIX emulation is chosen, this window will be
25 lines long (if possible).
If there is a line left at the bottom, a status line is placed there.
If this is not possible the status line will be showed every time
you press Control-A.

Possible commands are listed next, in alfabetical order.

Control-A.
   Pressing Control-A a second time will just send a Control-A to the
   remote system.
  
A. Toggle 'Add Linefeed' on/off. If it is on, a linefeed is added before
   every carriage return displayed on the screen.
  
B. A break signal is sent to the modem.
  
C. Clears the screen.

D. Dial a number, or go to the dialing directory.
  
G. Run script (Go). Runs a login script.
  
H. Hangup.
  
J. Jump to a shell. On return, the whole screen will be redrawn.
  
K. Run Kermit in a window.
  
L. Turn Capture file on off. If turned on, all output sent to the screen
   will be captured in the file too.
  
M. Sends the modem initialization string.
  
O. Configure minicom. Puts you in the configuration menu.
  
P. Communication Parameters. Allows you to change the baudrate, parity and
   number of bits.
  
Q. Exit minicom without resetting the modem.
  
R. Recieve files. Choose from various protocols (external).
  
S. Send files. Ditto.
  
T. Choose Terminal emulation: Minix-Ansi(color)-vt100.
  
W. Toggle linewrap on/off.
  
X. Exit minicom, reset modem.
  
Z. Pop up the help screen.


		=== The dialing directory ===
		
By pressing Control-A D the program asks:
"Number to dial: (enter for dialing directory) " _
You can now directly enter a number to dial, or press enter. Then
the dialing directory will be drawn. You can add, delete or edit
entries. By choosing "dial" the phone number of the highlighted entry will 
be dialed. While the modem is dialing, you can press any key to
cancel dialing. Your dialing directory will be saved into a the file
".dialdir" in your home directory.
You can scroll up and down with the arrow keys, but you can also scroll
complete pages by pressing the PageUp or PageDown key. If you don't
have those, use Control-B (Backward) and Control-F (Forward).

The "edit" menu speaks for itself, but I will discuss it briefly here.
  A - Name              : The name for this entry
  B - Number            : and its telephone number.
  C - Script            : the script that must be executed after a succesfull
                          connection is made (see the manual for runscript)
  D - Username          : The username that is passed to the runscript program.
                          It is passed in the environment string "$LOGIN".
  E - Password          : The password is passed as "$PASS".
  F - Terminal Emulation: Use MINIX, ANSI or VT100 emulation.
  G - Line settings     : baudrate, bits and parity to use for this connection.


                === The setup Menu ===

By pressing Control-A O you will be thrown into the setup menu. Most
settings there can be changed by everyone, but some are restricted
to root only. Those priviliged settings are marked with a star (*).

"Filenames and paths"
  This menu defines your default directories.
  A - upload:         where the uploaded files go to.
  B - download:       Yup, you guessed it.
  C - script:         Where you keep your login scripts.
  D - Script program: Which program to use as the script
                      interpreter. Defaults to the program "runscript",
                      but if you want to use something else (eg,
                      /bin/sh or "expect") it is possible.
                      Stdin and stdout are connected to the modem,
                      stderr to the screen.

  
  If the path is relative (ie, does not start with a slash) then it's
  relative to your home directory, except for the script interpreter.

"File Transfer Protocols"
  Protocols defined here will show up when Control-A s/r is pressed.
  "Name" is the name that will show up in the menu. "Program" is
  the path to the protocol. "NeedName" defines if the program needs an
  argument, eg. a file to be transmitted. Finally, Up/Down defines
  if this entry should show up in the upload or the download menu.
  All file transfer protocols are run with the UID of the user, and
  not with UID=root.

"Kermit protocol"
 *A - Kermit program:       where to find kermit, and options to it.
 *B - Everybody may use it: If option 'c' is on, I would turn this off!
 *C - Kermit runs as root:  Be careful!

"Serial port setup"
 *A - Serial device:        /dev/tty1 for most people, or maybe /dev/tty64
                            if you use the VC package.
 *B - Device lock file:     This should be /usr/spool/uucp/LCK..tty1 or
                            something.
 *C - Callin program:       If you have a uugetty or something on your
                            serial port, it could be that you want a
                            program to be run to switch the modem cq. port
                            into dialin/dialout mode. This is the program
                            to get into dialin mode.
 *D - Callout program:      And this to get into dialout mode.
  E - Baud/Par/Bits:        Default parameters at startup.
  
  If one of the entries is left blank, it will not be used. So if you
  don't care about locking, and don't have a getty running on your
  modemline, entries B - D should be left blank.
  Be warned! The callin and callout programs are run with the effective
  user id of "root", eg 0!

"Modem and Dialing"
  Here, the parameters for your modem are defined. I will not explain
  this further because the defaults are for generic Hayes modems,
  and should work always. This file is not a Hayes tutorial :-)
  The only thing worth noticing is that control characters can be
  sent by prefixing them with a '^', in which '^^' means '^' itself.
  Some options however, don't have much to do with the modem but more
  with the behaviour of minicom itself:
  I - Dial time			The number of seconds before minicom
  				times out if no connection is established.
  J - Delay before redial	Minicom will redial if no connection was
  				made, but it first waits some time.
  K - Number of tries		Maximum number of times that minicom
  				attempts to dial.
  L - Autobaud detect		If this is on, minicom tries to match
  				the dialed party's speed.
  M - Drop DTR to hangup	Normally minicom hangs up by sending
  				a Hayes-type hangup sequence but if
  				your Minix supports it, it can also
  				hangup by dropping the DTR line.
  N - Modem has DCD line	If your modem, and your O/S both support
  				the DCD line (that goes 'high' when
  				a connection is made) minicom will
  				use it.

  Note that a special exception is made for this menu: every user
  can change all parameters here, but they will not be saved.

"Screen and keyboard"
  A - Command key is:           the 'Hot Key' that brings you into
                                command mode. If this is set to 'ALT' or
                                'meta key', you can directly call commands
                                by alt-key instead of HotKey-key.
  B - Backspace key sends:      There still are some systems that want a
                                VT100 to send DEL instead of BS. With this
                                option you can enable that stupidity.
  				(Eh, it's even on by default..)
  C - Status line is:           enabled or disabled. Some slow terminals
                                (for example, X-terminals) cause the status
                                line to jump "up and down" when scrolling,
                                so you can turn it off if desired. It will
                                still be shown in command-mode.
"Save setup as dfl"
  Save the parameters as the default for the next time the program is
  started. Instead of dfl, any other parameter name may appear, depending
  on which one was used when the program was started.

"Save setup as.."
  Save the parameters under a special name. Whenever Minicom is started
  with this name as an argument, it will use these parameters. This
  option is ofcourse priviliged to root.

"Exit"
  Escape from this menu (can also be done with ESC) without saving.

"Exit from minicom"
  Only root will see this menu entry, if he/she started minicom with the '-s'
  option. This way, it is possible to change the configuration without
  actually running minicom.

                ===== Access Control =====

Since Minicom runs setuid root, you probably want to restrict access to
it. This is possible by using a configuration file in the same directory
as the default files, called "minicom.users". The syntax of this file
is as following:

<username> <configuration> [configuration..]

To allow user 'miquels' to use the default configuration, enter the 
following line into "minicom.users":

miquels dfl

If you want users to use more than the default, just add the names of
those configurations behind the user name. Oh yeah, if "minicom.users"
does not exist, everybody may use all configurations. This is ofcourse
a security problem!


		===== Last remarks =====

If minicom is hung, kill it with SIGTERM . (This means kill -15, or
since sigterm is default, just plain "kill <minicompid>". This will
cause a graceful exit of minicom, doing resets and everything.

Since some OS's have no decent timing in the terminal driver, some keys
have to be pressed TWICE. This holds especially for the escape key.
Since a lot of escape sequences begin with ESC (Arrow up is ESC [ A)
Minicom does not know if the escape character it gets is you pressing
the escape key, or part of a sequence.

The last version of Minicom, V1.2, solved this in a rather crude way:
to get the escape key, you had to press it *twice*..
Support for timing (with select) was already built in to minicom
(see file wkeys.c) and works great under BSD, but alas, not under Minix.
The same problem, but worse, was with Televideo type terminals. Since they
use a lot of escape sequences that start with 'Control-A', you had to
press 'Control-A' twice when you want to pop up a window or something..

As of release 1.3 this has bettered a little: now a 1-second timeout
is builtin, like in vi. And... surprise: a special Minix-dependant
*hack* :-) was added. Now, minicom can separate the escape key and
escape-sequences. To see how dirty this was done, look into wkeys.c.
But, it works like a charm!


Well, I guess this about covers it. I hope everything is clear enough
and wish you a lot of fun.
Miquel.
