	Hey Linuxers, well we FINALLY have a decent comm program to go with
our already outstanding operating system :-)  Minicom has all the stuff I've
been looking for in a comm package, and IT ALL WORKS TOGETHER.  The features
include a dialing directory with autodial > 25 times (unlike pcomm :-> ), a
working transfer system including zmodem recover, and it's all in a nice,
workable package.  Minicom came from the Minix people -- after I finally found
a comp.os.minix archive and tracked down the first patch (and had fortunately
copied the setterm fix from comp.os.linux a short while earlier) the thing
compiled fairly easily.  I also followed the instructions present in
Readme.rzsz which I'm including here, to patch newer versions of rz (ones
which include crash recovery) for stdin/stdout support so that Minicom can use
them.  I'm writing one README and including it with both the source and the 
binaries distribution of the Minicom-linux package; I hope everything is
pretty clear anyway. :-)

	Miscellaneous random notes on installing the thing: if you've got the
binaries package, they are statically linked so they should run happily
regardless.  They were, however, compiled with gcc 2.2.2, so if it bombs, it's
because you havn't upgraded to that version.  As a side note, you really
should, because HLU has done an excellent job -- Ghostscript 2.4.1 compiled
with NO MODIFICATION for me last night -- I'm thoroughly impressed.  Anyway.
If you've got the binaries package, follow the instructions in Install on
where to install the stuff and how to set the protection and owners so it all
works right and you're running.  Note that I did NOT include the rz/sz binaries
in this package -- that's because I don't have the sz handy, only the rz, and
rz is linked shared with gcc 2.2.2.  I might stick it in anyway, but don't cry
to me if it doesn't work; the patches are REAL easy and you can grab the latest
rz/sz source from wuarchive.wustl.edu:/mirrors/unix-c/zmodem or somesuch.
You'll know it when you see it.

	NOTE FOR BOTH SOURCE AND BINARY DISTRIBUTIONS: You *MUST* have
minicom.users in /usr/local/etc/minicom.users, elsewise minicom will kill
itself with a signal 14 call.  I know the docs say you can run it without,
but you CAN'T.   Just so you know, I compiled this version of minicom (and
the makefile is set up this way as well) configured like follows.

	modem device:	/dev/modem -- I suggest you make a symlink from your
				      /dev/ttysX to /dev/modem; Linus has
				      mentioned this on the group before and
				      it seems like a good idea to me.
	minicom goes in /usr/local/bin
	keyserv goes in /usr/local/etc
  minicom.users goes in /usr/local/etc (needs entry for root too!)
      runscript goes in /usr/local/bin

	Other notes: I tried the termcap mods for line drawing, but at least
on my system they generate the wrong characters.  I *think* this is because
Linux doesn't support ANSI-standard high-bit char set but the DEC one and
while they have some of the same chars, they're some different enough that
they don't work right...  If somebody wants to go through and look for the
right chars and make a termcap entry, could you PLEASE post it or mail it
to me for inclusion in another release of this thing?  The other thing is
that from the config files, it *appears* as if minicom supports color, though
I have never been able to get it to show anything but black and white, even
when it's supposed to be receiving color ANSI in term mode (unlike normal
pass-though console linux).  Also I've found that the Minix term emulation
gives me the least amount of grief as far as using 25 lines or whatever,
though the vt100 and ANSI modes don't appear to support color either... I also
have a problem using cursor keys in Emacs when connected to a remote system...
Those are the ONLY problems I can find with this software; other than that,
I think it's incredible...  I've included all doc files with both the
binary and source version, even though not all dox apply to the binary version.
Note lastly that these statically linked binaries in some cases are way big,
so you might wanna grab source and recompile if you havn't...

	Direct questions/comments/working termcaps to:

	Joe Waters
	jwaters@math.unm.edu
