*** linux/fs/buffer.c.~1~	Sat Mar 13 16:02:50 1993
--- linux/fs/buffer.c	Wed Mar 17 16:00:02 1993
***************
*** 23,28 ****
--- 23,29 ----
  #include <linux/kernel.h>
  #include <linux/string.h>
  #include <linux/locks.h>
+ #include <linux/errno.h>
  
  #include <asm/system.h>
  #include <asm/io.h>
***************
*** 101,106 ****
--- 102,112 ----
  	sync_dev(0);
  	return 0;
  }
+ 
+ int sys_fsync(int fd)
+ {
+ 	return -ENOSYS;
+ }
  
  void invalidate_buffers(dev_t dev)
  {
*** linux/include/linux/sys.h.~1~	Thu Dec 17 17:35:15 1992
--- linux/include/linux/sys.h	Wed Mar 17 16:01:18 1993
***************
*** 119,124 ****
--- 119,126 ----
  extern int sys_wait4();
  extern int sys_swapoff();
  extern int sys_sysinfo();
+ extern int sys_ipc();
+ extern int sys_fsync();
  
  fn_ptr sys_call_table[] = { sys_setup, sys_exit, sys_fork, sys_read,
  sys_write, sys_open, sys_close, sys_waitpid, sys_creat, sys_link,
***************
*** 141,147 ****
  sys_profil, sys_statfs, sys_fstatfs, sys_ioperm, sys_socketcall,
  sys_syslog, sys_setitimer, sys_getitimer, sys_newstat, sys_newlstat,
  sys_newfstat, sys_newuname, sys_iopl, sys_vhangup, sys_idle, sys_vm86,
! sys_wait4, sys_swapoff, sys_sysinfo };
  
  /* So we don't have to do any more manual updating.... */
  int NR_syscalls = sizeof(sys_call_table)/sizeof(fn_ptr);
--- 143,149 ----
  sys_profil, sys_statfs, sys_fstatfs, sys_ioperm, sys_socketcall,
  sys_syslog, sys_setitimer, sys_getitimer, sys_newstat, sys_newlstat,
  sys_newfstat, sys_newuname, sys_iopl, sys_vhangup, sys_idle, sys_vm86,
! sys_wait4, sys_swapoff, sys_sysinfo, sys_ipc, sys_fsync };
  
  /* So we don't have to do any more manual updating.... */
  int NR_syscalls = sizeof(sys_call_table)/sizeof(fn_ptr);
*** linux/kernel/sys.c.~1~	Fri Mar 12 22:31:54 1993
--- linux/kernel/sys.c	Wed Mar 17 16:03:08 1993
***************
*** 130,135 ****
--- 130,140 ----
  	return -ENOSYS;
  }
  
+ int sys_ipc(void)
+ {
+ 	return -ENOSYS;
+ }
+ 
  unsigned long save_v86_state(int signr,struct vm86_regs * regs)
  {
  	unsigned long stack;

