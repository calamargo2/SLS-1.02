..
.. 
..
.TH SPEAK 3 "" 30 Nov 1990
.SH NAME
speak \(em library of routines to make your sparcstation talk
.SH SYNOPSIS
.nf
speak_load_samples (dir)
char *dir;
.sp
fd = speak_open (device, now)
int fd;
char *device;
int now;
.sp
speak_string (fd, str)
int fd;
char *str;
.sp
speak_file (fd, filename)
int fd;
char *filename;
.sp
speak_volume (vol)
double vol;
.sp
speak_delay (fd, delay)
int fd;
int delay;
.sp
speak_close (fd)
int fd;
.fi
.SH DESCRIPTION
These routines facilitate the translation of english ascii text to sound.
English words are translated into phonemes, and the phonemes, which are
previously recorded, are written to the audio device.
.PP
\fBspeak_load_samples()\fP loads audio samples of phonemes contained in
directory \fIdir\fP, each file named for its corresponding phoneme.
Audio sample files should be in Sun/NeXT audio file format.  If this
routine is not called, a default set of phonemes is used.
.PP
\fBspeak_open()\fP opens the audio device.
.PP
\fBspeak_string()\fP translates the english text contained in \fIstr\fP
and sends the resulting audio data to the audio device.
.PP
\fBspeak_file()\fP translates the english text contained in the file
\fIfilename\fP and sends the resulting audio data to the audio device.
.PP
\fBspeak_phoneme()\fP sends the audio data corresponding to \fIphoneme\fP
to the audio device.
.PP
\fBspeak_volume()\fP sets the volume to \fIvol\fP, which should be
a double precision number between 0 and 1, inclusive.
.PP
\fBspeak_delay()\fP releases the audio device for use by other processes,
without closing it.
.PP
\fBspeak_close()\fP closes the audio device.
.SH SEE ALSO
audio(4), audio_intro(3), audio_device(3)
