.TL
Appendix 1.  An Orchestra QUICK REFERENCE
.PP
.R
.nf
.in 0
VALUE CONVERTERS

		\fBftlen\fR(x)       (init-rate args only)
		\fBint\fR(x)	     (init- or control-rate args only)
		\fBfrac\fR(x)		"		"
		\fBdbamp\fR(x)	"		"
		\fBi\fR(x)	     (control-rate args only)
		\fBabs\fR(x)	     (no rate restriction)
		\fBexp\fR(x)		"		"
		\fBlog\fR(x)		"		"
		\fBsqrt\fR(x)		"		"
		\fBsin\fR(x)		"		"
		\fBcos\fR(x)		"		"
		\fBampdb\fR(x)	"		"

PITCH CONVERTERS

		\fBoctpch\fR(pch)	(init- or control-rate args only)
		\fBpchoct\fR(oct)	   "		"
		\fBcpspch\fR(pch)	   "		"
		\fBoctcps\fR(cps)	   "		"
		\fBcpsoct\fR(oct)	(no rate restriction)

PROGRAM CONTROL

		\fBigoto\fR	label
		\fBtigoto\fR	label
		\fBkgoto\fR	label
		\fBgoto\fR	label
		\fBif\fR	ia R ib \fBigoto\fR label
		\fBif\fR	ka R kb \fBkgoto\fR label
		\fBif\fR	ia R ib \fBgoto\fR label
		\fBtimout\fR	istrt, idur, label

SIGNAL GENERATORS

	kr	\fBline\fR	ia, idur1, ib
	ar	\fBline\fR	ia, idur1, ib
	kr	\fBexpon\fR	ia, idur1, ib
	ar	\fBexpon\fR	ia, idur1, ib
	kr	\fBlinseg\fR	ia, idur1, ib[, idur2, ic[...]]
	ar	\fBlinseg\fR	ia, idur1, ib[, idur2, ic[...]]
	kr	\fBexpseg\fR	ia, idur1, ib[, idur2, ic[...]] 
	ar	\fBexpseg\fR	ia, idur1, ib[, idur2, ic[...]]

	kr	\fBphasor\fR	kcps[, iphs]
	ar	\fBphasor\fR	xcps[, iphs]

	ir	\fBtable\fR	indx, ifn[, ixmode][, ixoff][, iwrap]
	ir	\fBtablei\fR	indx, ifn[, ixmode][, ixoff][, iwrap]
	kr	\fBtable\fR	kndx, ifn[, ixmode][, ixoff][, iwrap]
	kr	\fBtablei\fR	kndx, ifn[, ixmode][, ixoff][, iwrap]
	ar	\fBtable\fR	andx, ifn[, ixmode][, ixoff][, iwrap]
	ar	\fBtablei\fR	andx, ifn[, ixmode][, ixoff][, iwrap]
	kr	\fBoscil1\fR	idel, kamp, idur, ifn
	kr	\fBoscil1i\fR	idel, kamp, idur, ifn

	kr	\fBoscil\fR	kamp, kcps, ifn[, iphs]
	kr	\fBoscili\fR	kamp, kcps, ifn[, iphs]
	ar	\fBoscil\fR	xamp, xcps, ifn[, iphs]
	ar	\fBoscili\fR	xamp, xcps, ifn[, iphs]
	ar	\fBfoscil\fR	xamp, kcps, kcar, kmod, kndx, ifn[, iphs]
	ar	\fBfoscili\fR	xamp, kcps, kcar, kmod, kndx, ifn[, iphs]

	ar	\fBbuzz\fR	xamp, xcps, knh, ifn[, iphs]
	ar	\fBgbuzz\fR	xamp, xcps, knh, klh, kr, ifn[, iphs]

	ar	\fBadsyn\fR	kamod, kfmod, ifilno
	ar	\fBpvoc\fR	ktimpnt, kfmod, ispecwp, ifilno

	ar	\fBfof\fR	xamp, xfund, xforma, xformb, koct, ktex, kdebat, katt,
					iolaps, ifna, ifnb, idur[, iphs][, icor]

	ar	\fBpluck\fR	kamp, kcps, icps, ifn, imeth [, iparm1, iparm2]

	kr	\fBrand\fR	xamp[, iseed]
	kr	\fBrandh\fR	kamp, kcps[, iseed]
	kr	\fBrandi\fR	kamp, kcps[, iseed]
	ar	\fBrand\fR	xamp[, iseed]
	ar	\fBrandh\fR	xamp, xcps[, iseed]
	ar	\fBrandi\fR	xamp, xcps[, iseed]

SIGNAL MODIFIERS

	kr	\fBlinen\fR	kamp, irise, idur, idec
	ar	\fBlinen\fR	xamp, irise, idur, idec
	kr	\fBenvlpx\fR	kamp, irise, idur, idec, ifn, iatss, iatdec[, ixmod]
	ar	\fBenvlpx\fR	xamp, irise, idur, idec, ifn, iatss, iatdec[, ixmod]

	kr	\fBport\fR	ksig, ihtim[, isig]
	ar	\fBtone\fR	asig, khp[, istor]
	ar	\fBatone\fR	asig, khp[, istor]
	ar	\fBreson\fR	asig, kcf, kbw[, iscl, istor]
	ar	\fBareson\fR	asig, kcf, kbw[, iscl, istor]

krmsr,krmso,kerr,kcps	\fBlpread\fR	  ktimpnt, ifilno[, inpoles][, ifrmrate]
	ar		\fBlpreson\fR	  asig
	ar		\fBlpfreson\fR	  asig, kfrqratio

	kr	\fBrms\fR		asig[, ihp, istor]
	ar	\fBgain\fR		asig, krms[, ihp, istor]
	ar	\fBbalance\fR   	asig, acomp[, ihp, istor]

	kr	\fBdownsamp\fR	asig[, iwlen]
	ar	\fBupsamp\fR	ksig
	ar	\fBinterp\fR		ksig[, istor]
	kr	\fBinteg\fR		ksig[, istor]
	ar	\fBinteg\fR		asig[, istor]
	kr	\fBdiff\fR		ksig[, istor]
	ar	\fBdiff\fR		asig[, istor]
	kr	\fBsamphold\fR	xsig, kgate[, ival, ivstor]
	ar	\fBsamphold\fR	asig, xgate[, ival, ivstor]

	ar	\fBdelayr\fR		idlt[, istor]
		\fBdelayw\fR		asig
	ar	\fBdelay\fR		asig, idlt[, istor]
	ar	\fBdelay1\fR		asig[, istor]

	ar	\fBdeltap\fR		kdlt
	ar	\fBdeltapi\fR		xdlt

	ar	\fBcomb\fR		asig, krvt, ilpt[, istor]
	ar	\fBalpass\fR		asig, krvt, ilpt[, istor]
	ar	\fBreverb\fR		asig, krvt[, istor]

OPERATIONS USING SPECTRAL DATA TYPES

	dsig	\fBoctdown\fR   	asig, iocts, isamps[, idisprd]
	wsig	\fBnoctdft\fR		dsig, iprd, ifrqs, iq[, ihann, idbout, idsines]
	wsig	\fBspecscal\fR  	wsigin, ifscale, ifthresh
	wsig	\fBspecaddm\fR  	wsig1, wsig2[, imul2]
	wsig	\fBspecdiff\fR  	wsigin
	wsig	\fBspecfilt\fR  	wsigin, ifhtim
		\fBspecdisp\fR  	wsig, iprd[, iwtflg]
	ksum	\fBspecsum\fR   	wsig[, interp]

SENSING & CONTROL

	ktemp	\fBtempest\fR  	kin, iprd, imindur, imemdur, ihp, ithresh, ihtim, ixfdbak,
						istartempo, ifn[, idisprd, itweek]

	kx, ky	\fBxyin\fR		iprd, ixmin, ixmax, iymin, iymax[, ixinit, iyinit]
		\fBtempo\fR		ktempo, istartempo

SOUND INPUT & OUTPUT

a1		\fBin\fR
a1, a2		\fBins\fR
a1, a2, a3, a4	\fBinq\fR
a1	    	\fBsoundin\fR		ifilno[, iskptim][, iformat]
a1, a2	    	\fBsoundin\fR		ifilno[, iskptim][, iformat]
a1, a2, a3, a4 	\fBsoundin\fR		ifilno[, iskptim][, iformat]
	    	\fBout\fR		asig
	    	\fBouts1\fR		asig
	    	\fBouts2\fR		asig
	    	\fBouts\fR		asig1, asig2
	    	\fBoutq1\fR		asig
	    	\fBoutq2\fR		asig
	    	\fBoutq3\fR		asig
	    	\fBoutq4\fR		asig
	    	\fBoutq\fR		asig1, asig2, asig3, asig4	

a1, a2, a3, a4	\fBpan\fR		asig, kx, ky, ifn[, imode][, ioffset]

SIGNAL DISPLAY

		\fBprint\fR		iarg[, iarg, ...]
		\fBdisplay\fR		xsig, iprd[, iwtflg]
		\fBdispfft\fR		asig, iprd, iwsiz[, iwtyp][, idbout][, iwtflg]


