.TH RESCALE CMIX-1
.SH NAME
rescale\- change the amplitudes of a file, and write a short-integer file.
.SH SYNTAX      
rescale [-s inskip] [-d dur] [-o outskip] [-p peakamp] -z
	[-e emptybuffers_at_end] inputfile [outputfile]
.SH DESCRIPTION  
.I Rescale 
will read a floating-point or short-integer file and write a short-integer file
suitable for D-A conversion.  It expects the file to be a BSD-type
soundfile with 1k header on the front.  The default operation reads the
entire input file and writes an output file with the same name 
appended with '.short'.  E.g.  'rescale fatsound' will create an output
file called fatsound.short.  
If the input file is already in short integer form the output file will 
have '.xshort' appended to its name.
The header on the output file will be identical
except for the class and peak amplitudes.  You can specify an input skip,
a duration, an output skip and an expected input peak amplitude.  In this 
way you can splice together unbalanced segments in an output file.  Normally
the program will write one empty buffer at the end of a file to terminate
conversion politely.  The -e flag can change this.  In addition if -d is 
specified the program will write no empty buffers (unless -e is specified
later on the same command line).  An output file name can be specified.
If the output filename is the same as the input file name, the program 
will write over the existing file.  This only works when reading short-integer fles. 
If the output file does not exist it will be created.
Unless the -z flag is specified
.I rescale
will write over portions of an output file that already exists, 
while keeping the unreferenced times in the file intact. Thus it can be
used for splicing together different files as well.  With the -z flag,
however, the old file will be erased first, if it exists.

.SH "SEE ALSO"
sfheader(2),sfcreate(1),sfprint(1),sfprint(1),sndpeak(1),sfextend(),sfshrink()

