FILES:

	With the exception of the rfile command, all functions that
	manipulate files, identify the file by a string. A string is
	ALWAYS enclosed in double-quotes (`"'). The characters
	enclosed by the quotes are taken literally, thus: " filename "
	is different from "filename".

	Two special files that are always available are "stdout", and
	"stderr". They can be used like ordinary files with any
	command that takes a filename as an argument.

	Input and output in RLaB is handled through a list of open
	files. When fprintf(), read(), write() or load() are called
	the list is searched to see if the file is already open. If
	the file is already open, then the proper file-handle is given
	to the function. Thus fprintf() and write() can be called many
	times without constantly opening and closing a file.

	If the user wants to explicitly close a file, the close()
	function can be called.

	The rfile and load commands close their file after each
	invocation so that someone modifying an rfile can keep
	re-loading it without having to constantly type
	`close("file")'.

	if the 1st character of the string is the `|' then a pipe to
	the process denoted by the remainder of the string is created.
	close() can also be used to explicitly close a pipe.

	Examples:

	write( "stdout", rand(3,3) )

	The above writes a 3x3 random matrix the the standard output.
	Usually this is the screen.

	write( "stdout", list )

	If `list' is an RLaB list-object then the entire contents of
	the list are output to the screen.

	fprintf( " myfile" , "%s", "sample string");

	The above will write the string to the file ` myfile'. This
	file will be difficult to deal with because of the leading
	space.

	write ( "! lpr", a, b, c );

	The above will open a pipe to lpr, and write a, b, and c to
	the stdin of lpr. The RLaB plot function makes extensive use
	of this feature to run GNUPLOT as a sub-process and sends all
	plot commands to GNUPLOT through a pipe.

See Also: printf, fprintf, read, write, close, rfile
