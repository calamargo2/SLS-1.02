Here are some clarifications for the Amiga source code diffs.
Line numbers refer to the original metamail version 2.2 distribution.

1) mailto.c line 47: include files from Dillon Amiga UUCP-1.15D. This library
   provide functions that retrieve configuration information in a standard
   way.

2) mailto.c line 54: the compiler I use (DICE) provides ANSI C header files.
   THe compiler has already encountered an ANSI C declaration of getenv().

3) mailto.c line 71: "CC: versus Cc:" rfc-822 appears to say that case does
   not matter. Unfortunately, a common mail sending program on the Amiga only
   recognizes "Cc:". I did a global replace "CC" -> "Cc", which was
   unnecessarily heavyhanded. It is really only needed to do something with
   the strings that are actually output.

4) mailto.c line 214: Home directory versus UULIB: and UUMAIL:. The Amiga does
   not have a standard home directory. The symbolic paths UULIB: and UUMAIL:
   pretty standard among users of UUCP on the Amiga (UUCP-packages tend to
   rely on their existence).

5) mailto.c line 214: The name of the signature file. I quickly discovered that
   the .signature that I am using with regular mail programs, does not look
   pretty, or even readable, when viewed as richtext. I have therefore created
   separate signature files for use with mailto.

6) mailto.c line 385: A shortcoming with the Amiga is that it normally has a
   small and fixed size stack (the size is user settable, but one can not rely
   on that it is bigger than 4 kByte). The compiler I use can allocate stack
   dynamically, through a software scheme (there is no MMU). This scheme
   requires that no procedure has more than about 2000 bytes of local variables
   (slightly less actually).

   To comply with the 2000 byte limit I allocate some local arrays with
   malloc() rather than from the stack.

7) mailto.c line 445: The Amiga uses an iso-8859 character set. iso-8859-1 is
   the most common.

8) mailto.c line 683: In the Amiga OS a file opened for writing can not be opened
   by anyone else. The scheme is single writer, multiple readers.

9) mailto line 712: Check if the file just read in contains characters that
   require the message to be encoded-

10) mailto line 1444: Older versions of the Amiga OS do not deal gracefully with
   lines longer than 255 characters.

11) metamail line 118: The compiler I use has a bad definition of NULL in
    stddef.h, namely
        #define NULL     ((void *)0L)
    This makes the compiler complain whenever NULL is used as an integer. I have
    in several places in the metamail code changed NULL to 0. I realise now that
    I could instead have put a redefinition of NULL at the top of the file.

12) metamail line 198: The Amiga OS does not allow unlinking of an open file.
