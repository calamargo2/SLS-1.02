


GETPID(2)						GETPID(2)


NNAAMMEE
       getpid, getuid, getgid, getgid, geteuid, getegid, getppid,
       getpgrp,	setpgid,  setuid,  setgid,  setsid,	setreuid,
       setregid. - get and set process ownership information.

SSYYNNOOPPSSIISS
       ##iinncclluuddee<<uunniissttdd..hh>>
       iinntt ggeettppiidd((vvooiidd));;
       iinntt ggeettuuiidd((vvooiidd));;
       iinntt ggeetteeuuiidd((vvooiidd));;
       iinntt ggeettggiidd((vvooiidd));;
       iinntt ggeetteeggiidd((vvooiidd));;
       iinntt ggeettppppiidd((vvooiidd));;
       ppiidd__tt ggeettppggrrpp((vvooiidd));;
       iinntt sseettppggiidd((ppiidd__tt ppiidd,,ppiidd__tt ppggiidd));;
       iinntt sseettrreeuuiidd ((uuiidd__tt rruuiidd,, uuiidd__tt eeuuiidd));;
       iinntt sseettrreeggiidd ((uuiidd__tt rrggiidd,, uuiidd__tt eeggiidd));;
       iinntt sseettuuiidd((uuiidd__tt uuiidd));;
       iinntt sseettggiidd((ggiidd__tt ggiidd));;
       ppiidd__tt sseettssiidd((vvooiidd));;

DDEESSCCRRIIPPTTIIOONN
       ggeettppiidd(()),, ggeettppggrrpp(()) get pid / process group.

       ggeettuuiidd(()),,  ggeetteeuuiidd(()),,  ggeettggiidd(()),,	ggeetteeggiidd(())  get	real and
       effective u/g id's.

       ggeettppppiidd(()) get parent process id

       sseettppggiidd(()) set process group to _p_g_i_d for _p_i_d_.

       If either _p_i_d or _p_g_i_d is 0,  then  the  current	value  is
       assumed.

       Process	groups	may  only  be changed under the following
       conditions :
       1.  The task must be the leader of its session.
       2.  The current session of the task calling sseettppggiidd(()) must
       be the session of _p_i_d_.  Or _p_g_i_d may = _p_i_d_.

       sseettrreeuuiidd(()),,  sseettrreeggiidd(())	set real and effective uid / gid,
       set effective uid / gid.	T hese are 100% BSD  compatable
       functions.   The	effect	is,  if any of _r_u_i_d_, _r_g_i_d_, _e_u_i_d_,
       _e_g_i_d then the real or effective g/u  id	is  set	to  that
       value.  The restrictions on this are that normal users may
       swap effective and real id's, and the super  user  may  do
       anything.

       sseettuuiidd(()),,  sseettggiidd(())  sets  effective  AND  real uid / gid.
       These are 100% SYSV /  POSIX compatable	functions.   Note
       that  once  id  is  changed,  since real and effective (or
       saved and effective in POSIX terminology) there is no  way
       to  become  privileged again.  0 is returned on success, a
       negative value on error.



			  March 28, 1992			1





GETPID(2)						GETPID(2)


       sseettssiidd(()) sets session id.  This is only executable by  the
       session leader or by the super user.  session id is set to
       pgrp which was set to pid, the process becomes the  leader
       of its session, and the controlling tty is set to -1.  The
       new pgrp is returned  on	success,  a  negative	value  on
       error.

EERRRROORRSS
       --EEIINNVVAALL is returned if an invalid pid, pgid, etc is passed
       to a function.

       --EEPPEERRMM is returned if the permissions  do  not  allow  the
       requested  action.   Generally, the super user is the only
       person allowed to do anything, where as normal  users  may
       only change things to their own group / user ids.

       --EESSRRCCHH  is returned if the selected pid could not be found
       in the proc table.

FFIILLEESS
       linux/kernel/sched.c
       linux/kernel/sys.c
       /usr/include/linux/sys.h
       /usr/include/unistd.h

SSEEEEAALLSSOO
       setpgrp(3)






























			  March 28, 1992			2


