


STAT(2)                                                   STAT(2)


NNAAMMEE
       stat, fstat, lstat  - grab inode information.

SSYYNNOOPPSSIISS
       ##iinncclluuddee <<ssyyss//ssttaatt..hh>>
       ##iinncclluuddee <<uunniissttdd..hh>>
       iinntt ssttaatt ((ccoonnsstt cchhaarr **ffiillee__nnaammee,, ssttrruucctt ssttaatt__bbuuff **bbuuff));;
       iinntt ffssttaatt ((iinntt ffiilleeddeess,, ssttrruucctt ssttaatt__bbuuff **bbuuff));;
       iinntt llssttaatt ((ccoonnsstt cchhaarr **ffiillee__nnaammee,, ssttrruucctt ssttaatt__bbuuff **bbuuff));;

DDEESSCCRRIIPPTTIIOONN
       ssttaatt(()),,  ffssttaatt(()),, aanndd llssttaatt(()) return a stat_buf structure,
       which is declared as follows in sys/stat.h:
       struct  stat {
                    dev_t     st_dev;
                    ino_t     st_ino;
                    umode_t   st_mode;
                    nlink_t   st_nlink;
                    uid_t     st_uid;
                    gid_t     st_gid;
                    dev_t     st_rdev;
                    off_t     st_size;
                    time_t    st_atime;
                    time_t    st_mtime;
                    time_t    st_ctime;
                    };

       The following flags are  defined in the st_mode field :
       SS__IIFFMMTT
       SS__IIFFLLNNKK
       SS__IIFFRREEGG
       SS__IIFFBBLLKK
       SS__IIFFDDIIRR
       SS__IIFFCCHHRR
       SS__IIFFIIFFOO
       SS__IISSUUIIDD
       SS__IISSGGIIDD
       SS__IISSVVTTXX

       And the following macros  are  defined  to  utilize  those
       fields :
       #define S_ISLNK(m)  (((m) & S_IFMT) == S_IFLNK)
       #define S_ISREG(m)  (((m) & S_IFMT) == S_IFREG)
       #define S_ISDIR(m)  (((m) & S_IFMT) == S_IFDIR)
       #define S_ISCHR(m)  (((m) & S_IFMT) == S_IFCHR)
       #define S_ISBLK(m)  (((m) & S_IFMT) == S_IFBLK)
       #define S_ISFIFO(m) (((m) & S_IFMT) == S_IFIFO)

       #define S_IRWXU 00700
       #define S_IRUSR 00400
       #define S_IWUSR 00200
       #define S_IXUSR 00100

       #define S_IRWXG 00070



                          March 28, 1992                        1





STAT(2)                                                   STAT(2)


       #define S_IRGRP 00040
       #define S_IWGRP 00020
       #define S_IXGRP 00010

       #define S_IRWXO 00007
       #define S_IROTH 00004
       #define S_IWOTH 00002
       #define S_IXOTH 00001

       ssttaatt(()) stats the file pointed to by _f_i_l_e___n_a_m_e and fills in
       the ssttaatt__bbuuff pointed to by _b_u_f_.

       llssttaatt(()) is identical to stat,  only  the  link  itself  is
       stated,  not  the  file  that  is  obtained by tracing the
       links.

       ffssttaatt(()) is identical to stat, only the open  file  pointed
       to by _f_i_l_e_d_e_s is stated in place of _f_i_l_e___n_a_m_e_.

       0  is  returned  on  success,  a  negative value on error.
       --EEBBAADDFF is returned by ffssttaatt(()) on a bad file descriptor.

       --EENNOOEENNTT is returned  when  you  attempt  to  stat  a  non-
       existant file.

FFIILLEESS
       linux/fs/stat.c,                 /usr/include/linux/sys.h,
       /usr/include/unistd.h

BBUUGGSS
       A user can stat files in directories where  they  have  no
       permissions.

























                          March 28, 1992                        2


